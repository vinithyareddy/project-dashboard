{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nfunction TaskDetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"p\")(7, \"strong\");\n    i0.ɵɵtext(8, \"Assigned To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\")(11, \"strong\");\n    i0.ɵɵtext(12, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.taskDetail.taskTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.taskDetail.assignedTo, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.taskDetail.status, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.taskDetail.description, \"\");\n  }\n}\nexport class TaskDetailComponent {\n  constructor(route) {\n    this.route = route;\n    this.taskTitle = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.taskTitle = params.get('taskTitle');\n      this.fetchTaskDetails(); // Fetch task details when the component loads\n    });\n  }\n\n  fetchTaskDetails() {\n    // Replace with actual logic to fetch task details from a service, database, or static data\n    // Example static data for the task details\n    const tasks = [{\n      taskTitle: 'Task 1',\n      description: 'Details for Task 1',\n      assignedTo: 'John',\n      status: 'Not Started'\n    }, {\n      taskTitle: 'Task 2',\n      description: 'Details for Task 2',\n      assignedTo: 'Alice',\n      status: 'In Progress'\n    }, {\n      taskTitle: 'Task 3',\n      description: 'Details for Task 3',\n      assignedTo: 'Bob',\n      status: 'Completed'\n    }];\n    this.taskDetail = tasks.find(task => task.taskTitle === this.taskTitle);\n  }\n  static {\n    this.ɵfac = function TaskDetailComponent_Factory(t) {\n      return new (t || TaskDetailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskDetailComponent,\n      selectors: [[\"app-task-detail\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"ngIf\"]],\n      template: function TaskDetailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TaskDetailComponent_div_0_Template, 18, 4, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.taskDetail);\n        }\n      },\n      dependencies: [i2.NgIf, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","taskDetail","taskTitle","ɵɵtextInterpolate1","assignedTo","status","description","TaskDetailComponent","constructor","route","ngOnInit","paramMap","subscribe","params","get","fetchTaskDetails","tasks","find","task","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","TaskDetailComponent_Template","rf","ctx","ɵɵtemplate","TaskDetailComponent_div_0_Template","ɵɵproperty"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/task-detail/task-detail.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/task-detail/task-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.component.html',\n  styleUrls: ['./task-detail.component.scss']\n})\nexport class TaskDetailComponent implements OnInit {\n  taskTitle: string | null = '';\n  taskDetail: any; // To hold the task data fetched by taskTitle\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.taskTitle = params.get('taskTitle');\n      this.fetchTaskDetails(); // Fetch task details when the component loads\n    });\n  }\n\n  fetchTaskDetails(): void {\n    // Replace with actual logic to fetch task details from a service, database, or static data\n    // Example static data for the task details\n    const tasks = [\n      { taskTitle: 'Task 1', description: 'Details for Task 1', assignedTo: 'John', status: 'Not Started' },\n      { taskTitle: 'Task 2', description: 'Details for Task 2', assignedTo: 'Alice', status: 'In Progress' },\n      { taskTitle: 'Task 3', description: 'Details for Task 3', assignedTo: 'Bob', status: 'Completed' }\n    ];\n    \n    this.taskDetail = tasks.find(task => task.taskTitle === this.taskTitle);\n  }\n}\n","<div *ngIf=\"taskDetail\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>{{ taskDetail.taskTitle }}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <p><strong>Assigned To:</strong> {{ taskDetail.assignedTo }}</p>\n        <p><strong>Status:</strong> {{ taskDetail.status }}</p>\n        <p><strong>Description:</strong> {{ taskDetail.description }}</p>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  "],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,UAAwB;IAGAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAiB;IAE7DH,EAAA,CAAAC,cAAA,uBAAkB;IACLD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAChEH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,eAAO;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACvDH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IALjDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAC,SAAA,CAA0B;IAGTR,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAS,kBAAA,MAAAH,MAAA,CAAAC,UAAA,CAAAG,UAAA,KAA2B;IAChCV,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAS,kBAAA,MAAAH,MAAA,CAAAC,UAAA,CAAAI,MAAA,KAAuB;IAClBX,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAS,kBAAA,MAAAH,MAAA,CAAAC,UAAA,CAAAK,WAAA,KAA4B;;;ADArE,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IAHzB,KAAAP,SAAS,GAAkB,EAAE;EAGe;EAE5CQ,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACX,SAAS,GAAGW,MAAM,CAACC,GAAG,CAAC,WAAW,CAAC;MACxC,IAAI,CAACC,gBAAgB,EAAE,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;;EAEAA,gBAAgBA,CAAA;IACd;IACA;IACA,MAAMC,KAAK,GAAG,CACZ;MAAEd,SAAS,EAAE,QAAQ;MAAEI,WAAW,EAAE,oBAAoB;MAAEF,UAAU,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAa,CAAE,EACrG;MAAEH,SAAS,EAAE,QAAQ;MAAEI,WAAW,EAAE,oBAAoB;MAAEF,UAAU,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAa,CAAE,EACtG;MAAEH,SAAS,EAAE,QAAQ;MAAEI,WAAW,EAAE,oBAAoB;MAAEF,UAAU,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAW,CAAE,CACnG;IAED,IAAI,CAACJ,UAAU,GAAGe,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAChB,SAAS,KAAK,IAAI,CAACA,SAAS,CAAC;EACzE;;;uBAvBWK,mBAAmB,EAAAb,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAnBd,mBAAmB;MAAAe,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRhClC,EAAA,CAAAoC,UAAA,IAAAC,kCAAA,kBAWQ;;;UAXFrC,EAAA,CAAAsC,UAAA,SAAAH,GAAA,CAAA5B,UAAA,CAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}