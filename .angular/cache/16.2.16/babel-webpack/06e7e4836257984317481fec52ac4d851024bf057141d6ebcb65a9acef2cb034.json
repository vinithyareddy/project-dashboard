{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc, updateDoc, deleteDoc, doc, getDocs } from '@angular/fire/firestore';\nimport { from, of, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"./auth.service\";\nexport class FirestoreService {\n  constructor(firestore, authService) {\n    this.firestore = firestore;\n    this.authService = authService;\n  }\n  getUserCollectionPath() {\n    return this.authService.getUser().pipe(switchMap(user => {\n      if (user && user.uid) {\n        return of(`users/${user.uid}/tasks`);\n      }\n      return of('');\n    }));\n  }\n  addTask(task) {\n    return this.getUserCollectionPath().pipe(switchMap(path => {\n      const ref = collection(this.firestore, path);\n      return from(addDoc(ref, task));\n    }));\n  }\n  updateTask(taskId, updates) {\n    return this.getUserCollectionPath().pipe(switchMap(path => {\n      const ref = doc(this.firestore, `${path}/${taskId}`);\n      return from(updateDoc(ref, updates));\n    }));\n  }\n  deleteTask(taskId) {\n    return this.getUserCollectionPath().pipe(switchMap(path => {\n      const ref = doc(this.firestore, `${path}/${taskId}`);\n      return from(deleteDoc(ref));\n    }));\n  }\n  getTasks() {\n    var _this = this;\n    return this.getUserCollectionPath().pipe(switchMap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (path) {\n        const ref = collection(_this.firestore, path);\n        const snapshot = yield getDocs(ref);\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n  static {\n    this.ɵfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ɵɵinject(i1.Firestore), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","from","of","switchMap","FirestoreService","constructor","firestore","authService","getUserCollectionPath","getUser","pipe","user","uid","addTask","task","path","ref","updateTask","taskId","updates","deleteTask","getTasks","_this","_ref","_asyncToGenerator","snapshot","docs","map","docSnap","id","data","_x","apply","arguments","i0","ɵɵinject","i1","Firestore","i2","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["// firestore.service.ts\nimport { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs,\n  CollectionReference,\n  getDoc,\n  setDoc,\n  onSnapshot,\n  query,\n  where\n} from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Task } from '../models/task.model';\nimport { from, Observable, of, switchMap, map } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore, private authService: AuthService) {}\n\n  private getUserCollectionPath(): Observable<string> {\n    return this.authService.getUser().pipe(\n      switchMap((user: any) => {\n        if (user && user.uid) {\n          return of(`users/${user.uid}/tasks`);\n        }\n        return of('');\n      })\n    );\n  }\n\n  addTask(task: Task): Observable<any> {\n    return this.getUserCollectionPath().pipe(\n      switchMap((path) => {\n        const ref = collection(this.firestore, path);\n        return from(addDoc(ref, task));\n      })\n    );\n  }\n\n  updateTask(taskId: string, updates: Partial<Task>): Observable<any> {\n    return this.getUserCollectionPath().pipe(\n      switchMap((path) => {\n        const ref = doc(this.firestore, `${path}/${taskId}`);\n        return from(updateDoc(ref, updates));\n      })\n    );\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    return this.getUserCollectionPath().pipe(\n      switchMap((path) => {\n        const ref = doc(this.firestore, `${path}/${taskId}`);\n        return from(deleteDoc(ref));\n      })\n    );\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.getUserCollectionPath().pipe(\n      switchMap(async (path) => {\n        const ref = collection(this.firestore, path);\n        const snapshot = await getDocs(ref);\n        return snapshot.docs.map((docSnap) => ({ id: docSnap.id, ...docSnap.data() } as Task));\n      })\n    );\n  }\n}"],"mappings":";AAEA,SAEEA,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,GAAG,EACHC,OAAO,QAOF,yBAAyB;AAGhC,SAASC,IAAI,EAAcC,EAAE,EAAEC,SAAS,QAAa,MAAM;;;;AAG3D,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,SAAoB,EAAUC,WAAwB;IAAtD,KAAAD,SAAS,GAATA,SAAS;IAAqB,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAErEC,qBAAqBA,CAAA;IAC3B,OAAO,IAAI,CAACD,WAAW,CAACE,OAAO,EAAE,CAACC,IAAI,CACpCP,SAAS,CAAEQ,IAAS,IAAI;MACtB,IAAIA,IAAI,IAAIA,IAAI,CAACC,GAAG,EAAE;QACpB,OAAOV,EAAE,CAAC,SAASS,IAAI,CAACC,GAAG,QAAQ,CAAC;;MAEtC,OAAOV,EAAE,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACH;EACH;EAEAW,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACN,qBAAqB,EAAE,CAACE,IAAI,CACtCP,SAAS,CAAEY,IAAI,IAAI;MACjB,MAAMC,GAAG,GAAGrB,UAAU,CAAC,IAAI,CAACW,SAAS,EAAES,IAAI,CAAC;MAC5C,OAAOd,IAAI,CAACL,MAAM,CAACoB,GAAG,EAAEF,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAEAG,UAAUA,CAACC,MAAc,EAAEC,OAAsB;IAC/C,OAAO,IAAI,CAACX,qBAAqB,EAAE,CAACE,IAAI,CACtCP,SAAS,CAAEY,IAAI,IAAI;MACjB,MAAMC,GAAG,GAAGjB,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,GAAGS,IAAI,IAAIG,MAAM,EAAE,CAAC;MACpD,OAAOjB,IAAI,CAACJ,SAAS,CAACmB,GAAG,EAAEG,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC,CACH;EACH;EAEAC,UAAUA,CAACF,MAAc;IACvB,OAAO,IAAI,CAACV,qBAAqB,EAAE,CAACE,IAAI,CACtCP,SAAS,CAAEY,IAAI,IAAI;MACjB,MAAMC,GAAG,GAAGjB,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,GAAGS,IAAI,IAAIG,MAAM,EAAE,CAAC;MACpD,OAAOjB,IAAI,CAACH,SAAS,CAACkB,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CACH;EACH;EAEAK,QAAQA,CAAA;IAAA,IAAAC,KAAA;IACN,OAAO,IAAI,CAACd,qBAAqB,EAAE,CAACE,IAAI,CACtCP,SAAS;MAAA,IAAAoB,IAAA,GAAAC,iBAAA,CAAC,WAAOT,IAAI,EAAI;QACvB,MAAMC,GAAG,GAAGrB,UAAU,CAAC2B,KAAI,CAAChB,SAAS,EAAES,IAAI,CAAC;QAC5C,MAAMU,QAAQ,SAASzB,OAAO,CAACgB,GAAG,CAAC;QACnC,OAAOS,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,OAAO,KAAM;UAAEC,EAAE,EAAED,OAAO,CAACC,EAAE;UAAE,GAAGD,OAAO,CAACE,IAAI;QAAE,CAAW,EAAC;MACxF,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAR,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,CACH;EACH;;;uBAjDW7B,gBAAgB,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAhBnC,gBAAgB;MAAAoC,OAAA,EAAhBpC,gBAAgB,CAAAqC,IAAA;MAAAC,UAAA,EADH;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}