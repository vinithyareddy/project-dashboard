{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nfunction AuthComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 7)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\", 7)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction AuthComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 7)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 18);\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_container_25_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleConfirmVisibility());\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r1.showConfirm ? \"text\" : \"password\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.showConfirm ? \"visibility_off\" : \"visibility\");\n  }\n}\nfunction AuthComponent_ng_container_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 11)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 19);\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_container_33_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.toggleConfirmVisibility());\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r2.showConfirm ? \"text\" : \"password\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle Confirm Password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.showConfirm ? \"visibility_off\" : \"visibility\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"success\": a0,\n    \"error\": a1\n  };\n};\nfunction AuthComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r3.errorMsg.includes(\"\\u2705\"), ctx_r3.errorMsg.includes(\"\\u274C\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.errorMsg, \" \");\n  }\n}\nexport class AuthComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isRegisterMode = false;\n    this.errorMsg = '';\n    this.showPassword = false;\n    this.showConfirm = false;\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n  ngOnInit() {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmVisibility() {\n    this.showConfirm = !this.showConfirm;\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.authForm.invalid) return;\n      const {\n        name,\n        phone,\n        email,\n        password,\n        confirmPassword\n      } = _this.authForm.value;\n      if (_this.isRegisterMode && password !== confirmPassword) {\n        _this.errorMsg = '❌ Passwords do not match';\n        return;\n      }\n      try {\n        if (_this.isRegisterMode) {\n          yield _this.authService.registerWithProfile({\n            name,\n            phone,\n            email,\n            password\n          });\n          _this.errorMsg = '✅ Account has been created';\n        } else {\n          yield _this.authService.login(email, password);\n        }\n        _this.router.navigate(['/dashboard']);\n      } catch (err) {\n        const errorCode = err.code || '';\n        switch (errorCode) {\n          case 'auth/invalid-login-credentials':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            _this.errorMsg = '❌ Invalid Credentials';\n            break;\n          case 'auth/email-already-in-use':\n            _this.errorMsg = '❌ Email already in use';\n            break;\n          case 'auth/too-many-requests':\n            _this.errorMsg = '❌ Too many attempts. Try again later.';\n            break;\n          default:\n            _this.errorMsg = err.message || '❌ An unexpected error occurred';\n        }\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([AuthService] // ✅ Add this line to fix injection error\n      ), i0.ɵɵStandaloneFeature],\n      decls: 39,\n      vars: 15,\n      consts: [[1, \"auth-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\", \"custom-field\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"custom-input\"], [1, \"auth-wrapper\"], [1, \"auth-card\"], [4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"you@example.com\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [\"appearance\", \"outline\", 1, \"full-width\", \"password-field\"], [\"matInput\", \"\", \"formControlName\", \"password\", 1, \"custom-input\", 3, \"type\"], [\"class\", \"error-msg\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"], [\"mat-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 1, \"full-width\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"John Doe\"], [\"matInput\", \"\", \"formControlName\", \"phone\", \"placeholder\", \"1234567890\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 3, \"type\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 1, \"custom-input\", 3, \"type\"], [1, \"error-msg\", 3, \"ngClass\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"h1\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_12_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(13, AuthComponent_ng_container_13_Template, 9, 0, \"ng-container\", 6);\n          i0.ɵɵelementStart(14, \"mat-form-field\", 7)(15, \"mat-label\");\n          i0.ɵɵtext(16, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"mat-form-field\", 7)(19, \"mat-label\");\n          i0.ɵɵtext(20, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 9);\n          i0.ɵɵelementStart(22, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_22_listener() {\n            return ctx.togglePasswordVisibility();\n          });\n          i0.ɵɵelementStart(23, \"mat-icon\");\n          i0.ɵɵtext(24);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(25, AuthComponent_ng_container_25_Template, 8, 2, \"ng-container\", 6);\n          i0.ɵɵelementStart(26, \"mat-form-field\", 11)(27, \"mat-label\");\n          i0.ɵɵtext(28, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 12);\n          i0.ɵɵelementStart(30, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_30_listener() {\n            return ctx.togglePasswordVisibility();\n          });\n          i0.ɵɵelementStart(31, \"mat-icon\");\n          i0.ɵɵtext(32);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(33, AuthComponent_ng_container_33_Template, 8, 3, \"ng-container\", 6);\n          i0.ɵɵtemplate(34, AuthComponent_div_34_Template, 2, 5, \"div\", 13);\n          i0.ɵɵelementStart(35, \"button\", 14);\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_37_listener() {\n            return ctx.toggleMode();\n          });\n          i0.ɵɵtext(38);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Create Account\" : \"Welcome Back\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵattribute(\"aria-label\", \"Toggle Password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isRegisterMode ? \"Register\" : \"Login\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, i5.MatIconButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatInputModule, i7.MatInput, MatIconModule, i8.MatIcon, RouterModule],\n      styles: [\".auth-wrapper[_ngcontent-%COMP%] {\\n  min-height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: linear-gradient(to bottom right, #dfe9f3, #ffffff);\\n  padding: 2rem;\\n}\\n\\n.auth-card[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 420px;\\n  background-color: white;\\n  padding: 2.5rem;\\n  border-radius: 16px;\\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);\\n}\\n.auth-card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.75rem;\\n  color: #333;\\n}\\n.auth-card[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 1.25rem;\\n}\\n.auth-card[_ngcontent-%COMP%]   .main-btn[_ngcontent-%COMP%] {\\n  margin-top: 0.5rem;\\n}\\n.auth-card[_ngcontent-%COMP%]   .switch-btn[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #555;\\n}\\n.auth-card[_ngcontent-%COMP%]   .feedback[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-weight: 600;\\n  margin: 0.75rem 0;\\n  font-size: 0.95rem;\\n}\\n.auth-card[_ngcontent-%COMP%]   .feedback.success[_ngcontent-%COMP%] {\\n  color: #2ecc71;\\n}\\n.auth-card[_ngcontent-%COMP%]   .feedback.error[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n}\\n.auth-card[_ngcontent-%COMP%]     .mat-input-element {\\n  color: #000;\\n  background-color: #fff;\\n}\\n.auth-card[_ngcontent-%COMP%]     .mat-form-field-infix {\\n  background-color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMGdpdGh1YiUyMHByb2plY3RzL3Byb2plY3QtZGFzaGJvYXJkL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsOERBQUE7RUFDQSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLDBDQUFBO0FDQ0Y7QURDRTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUNDSjtBREVFO0VBQ0UsV0FBQTtFQUNBLHNCQUFBO0FDQUo7QURHRTtFQUNFLGtCQUFBO0FDREo7QURJRTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQ0ZKO0FES0U7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ0hKO0FETUU7RUFDRSxjQUFBO0FDSko7QURPRTtFQUNFLGNBQUE7QUNMSjtBRFFFO0VBQ0UsV0FBQTtFQUNBLHNCQUFBO0FDTko7QURTRTtFQUNFLHNCQUFBO0FDUEoiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aC13cmFwcGVyIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tIHJpZ2h0LCAjZGZlOWYzLCAjZmZmZmZmKTtcbiAgcGFkZGluZzogMnJlbTtcbn1cblxuLmF1dGgtY2FyZCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDQyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMi41cmVtO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBib3gtc2hhZG93OiAwIDEycHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG5cbiAgaDEge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxLjc1cmVtO1xuICAgIGNvbG9yOiAjMzMzO1xuICB9XG5cbiAgLmZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDEuMjVyZW07XG4gIH1cblxuICAubWFpbi1idG4ge1xuICAgIG1hcmdpbi10b3A6IDAuNXJlbTtcbiAgfVxuXG4gIC5zd2l0Y2gtYnRuIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGNvbG9yOiAjNTU1O1xuICB9XG5cbiAgLmZlZWRiYWNrIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBtYXJnaW46IDAuNzVyZW0gMDtcbiAgICBmb250LXNpemU6IDAuOTVyZW07XG4gIH1cblxuICAuZmVlZGJhY2suc3VjY2VzcyB7XG4gICAgY29sb3I6ICMyZWNjNzE7XG4gIH1cblxuICAuZmVlZGJhY2suZXJyb3Ige1xuICAgIGNvbG9yOiAjZTc0YzNjO1xuICB9XG5cbiAgOjpuZy1kZWVwIC5tYXQtaW5wdXQtZWxlbWVudCB7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgfVxuXG4gIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIH1cbn1cbiIsIi5hdXRoLXdyYXBwZXIge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsICNkZmU5ZjMsICNmZmZmZmYpO1xuICBwYWRkaW5nOiAycmVtO1xufVxuXG4uYXV0aC1jYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAyLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gIGJveC1zaGFkb3c6IDAgMTJweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5hdXRoLWNhcmQgaDEge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBjb2xvcjogIzMzMztcbn1cbi5hdXRoLWNhcmQgLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cbi5hdXRoLWNhcmQgLm1haW4tYnRuIHtcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xufVxuLmF1dGgtY2FyZCAuc3dpdGNoLWJ0biB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjNTU1O1xufVxuLmF1dGgtY2FyZCAuZmVlZGJhY2sge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbjogMC43NXJlbSAwO1xuICBmb250LXNpemU6IDAuOTVyZW07XG59XG4uYXV0aC1jYXJkIC5mZWVkYmFjay5zdWNjZXNzIHtcbiAgY29sb3I6ICMyZWNjNzE7XG59XG4uYXV0aC1jYXJkIC5mZWVkYmFjay5lcnJvciB7XG4gIGNvbG9yOiAjZTc0YzNjO1xufVxuLmF1dGgtY2FyZCA6Om5nLWRlZXAgLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4uYXV0aC1jYXJkIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","RouterModule","AuthService","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","ɵɵlistener","AuthComponent_ng_container_25_Template_button_click_5_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","toggleConfirmVisibility","ɵɵadvance","ɵɵproperty","ctx_r1","showConfirm","ɵɵtextInterpolate","AuthComponent_ng_container_33_Template_button_click_5_listener","_r7","ctx_r6","ctx_r2","ɵɵattribute","ɵɵpureFunction2","_c0","ctx_r3","errorMsg","includes","ɵɵtextInterpolate1","AuthComponent","constructor","fb","authService","router","isRegisterMode","showPassword","authForm","group","name","phone","email","required","password","minLength","confirmPassword","ngOnInit","getUser","subscribe","user","navigate","toggleMode","togglePasswordVisibility","onSubmit","_this","_asyncToGenerator","invalid","value","registerWithProfile","login","err","errorCode","code","message","ɵɵdirectiveInject","i1","FormBuilder","i2","i3","Router","selectors","standalone","features","ɵɵProvidersFeature","AuthComponent_Template_form_ngSubmit_3_listener","ctx","AuthComponent_Template_form_ngSubmit_12_listener","ɵɵtemplate","AuthComponent_ng_container_13_Template","AuthComponent_Template_button_click_22_listener","AuthComponent_ng_container_25_Template","AuthComponent_Template_button_click_30_listener","AuthComponent_ng_container_33_Template","AuthComponent_div_34_Template","AuthComponent_Template_button_click_37_listener","i4","NgClass","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i5","MatButton","MatIconButton","i6","MatFormField","MatLabel","MatSuffix","i7","MatInput","i8","MatIcon","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    RouterModule\n  ],\n  providers: [AuthService] // ✅ Add this line to fix injection error\n})\nexport class AuthComponent implements OnInit {\n  authForm: FormGroup;\n  isRegisterMode = false;\n  errorMsg = '';\n  showPassword = false;\n  showConfirm = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmVisibility() {\n    this.showConfirm = !this.showConfirm;\n  }\n\n  async onSubmit() {\n    if (this.authForm.invalid) return;\n\n    const { name, phone, email, password, confirmPassword } = this.authForm.value;\n\n    if (this.isRegisterMode && password !== confirmPassword) {\n      this.errorMsg = '❌ Passwords do not match';\n      return;\n    }\n\n    try {\n      if (this.isRegisterMode) {\n        await this.authService.registerWithProfile({ name, phone, email, password });\n        this.errorMsg = '✅ Account has been created';\n      } else {\n        await this.authService.login(email, password);\n      }\n      this.router.navigate(['/dashboard']);\n    } catch (err: any) {\n      const errorCode = err.code || '';\n      switch (errorCode) {\n        case 'auth/invalid-login-credentials':\n        case 'auth/user-not-found':\n        case 'auth/wrong-password':\n          this.errorMsg = '❌ Invalid Credentials';\n          break;\n        case 'auth/email-already-in-use':\n          this.errorMsg = '❌ Email already in use';\n          break;\n        case 'auth/too-many-requests':\n          this.errorMsg = '❌ Too many attempts. Try again later.';\n          break;\n        default:\n          this.errorMsg = err.message || '❌ An unexpected error occurred';\n      }\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <h2>{{ isRegisterMode ? 'Register' : 'Login' }}</h2>\n\n  <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field appearance=\"outline\" class=\"full-width custom-field\">\n      <mat-label>Email</mat-label>\n      <input matInput formControlName=\"email\" type=\"email\" class=\"custom-input\" />\n    </mat-form-field><div class=\"auth-wrapper\">\n      <div class=\"auth-card\">\n        <h1>{{ isRegisterMode ? 'Create Account' : 'Welcome Back' }}</h1>\n    \n        <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n          <ng-container *ngIf=\"isRegisterMode\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Full Name</mat-label>\n              <input matInput formControlName=\"name\" placeholder=\"John Doe\" />\n            </mat-form-field>\n    \n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Phone</mat-label>\n              <input matInput formControlName=\"phone\" placeholder=\"1234567890\" />\n            </mat-form-field>\n          </ng-container>\n    \n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" type=\"email\" placeholder=\"you@example.com\" />\n          </mat-form-field>\n    \n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Password</mat-label>\n            <input matInput [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" />\n            <button mat-icon-button matSuffix (click)=\"togglePasswordVisibility()\" type=\"button\">\n              <mat-icon>{{ showPassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n            </button>\n          </mat-form-field>\n    \n          <ng-container *ngIf=\"isRegisterMode\">\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Confirm Password</mat-label>\n              <input matInput [type]=\"showConfirm ? 'text' : 'password'\" formControlName=\"confirmPassword\" />\n              <button mat-icon-button matSuffix (click)=\"toggleConfirmVisibility()\" type=\"button\">\n                <mat-icon>{{ showConfirm ? 'visibility_off' : 'visibility' }}</mat-icon>\n              </button>\n            </mat-form-field>\n          </ng-container>\n    \n  \n    <!-- Password Field with toggle -->\n    <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n      <mat-label>Password</mat-label>\n      <input matInput class=\"custom-input\" [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" />\n      <button mat-icon-button matSuffix type=\"button\" (click)=\"togglePasswordVisibility()\" [attr.aria-label]=\"'Toggle Password'\">\n        <mat-icon>{{ showPassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n      </button>\n    </mat-form-field>\n  \n    <!-- Confirm Password Field (Only for Register) -->\n    <ng-container *ngIf=\"isRegisterMode\">\n      <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n        <mat-label>Confirm Password</mat-label>\n        <input matInput class=\"custom-input\" [type]=\"showConfirm ? 'text' : 'password'\" formControlName=\"confirmPassword\" />\n        <button mat-icon-button matSuffix type=\"button\" (click)=\"toggleConfirmVisibility()\" [attr.aria-label]=\"'Toggle Confirm Password'\">\n          <mat-icon>{{ showConfirm ? 'visibility_off' : 'visibility' }}</mat-icon>\n        </button>\n      </mat-form-field>\n    </ng-container>\n  \n    <!-- Error / Success Message -->\n    <div *ngIf=\"errorMsg\" class=\"error-msg\" [ngClass]=\"{ 'success': errorMsg.includes('✅'), 'error': errorMsg.includes('❌') }\">\n      {{ errorMsg }}\n    </div>\n  \n    <!-- Submit & Mode Switch -->\n    <button mat-raised-button color=\"primary\" class=\"full-width\" type=\"submit\">\n      {{ isRegisterMode ? 'Register' : 'Login' }}\n    </button>\n  \n    <button mat-button color=\"accent\" class=\"full-width\" type=\"button\" (click)=\"toggleMode()\">\n      Switch to {{ isRegisterMode ? 'Login' : 'Register' }}\n    </button>\n  </form>\n  \n</div>\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,mBAAmB,EAA0BC,UAAU,QAAQ,gBAAgB;AACxF,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,YAAY,QAAgB,iBAAiB;AACtD,SAASC,WAAW,QAAQ,+BAA+B;;;;;;;;;;;;ICIjDC,EAAA,CAAAC,uBAAA,GAAqC;IACnCD,EAAA,CAAAE,cAAA,wBAAwD;IAC3CF,EAAA,CAAAG,MAAA,gBAAS;IAAAH,EAAA,CAAAI,YAAA,EAAY;IAChCJ,EAAA,CAAAK,SAAA,gBAAgE;IAClEL,EAAA,CAAAI,YAAA,EAAiB;IAEjBJ,EAAA,CAAAE,cAAA,wBAAwD;IAC3CF,EAAA,CAAAG,MAAA,YAAK;IAAAH,EAAA,CAAAI,YAAA,EAAY;IAC5BJ,EAAA,CAAAK,SAAA,gBAAmE;IACrEL,EAAA,CAAAI,YAAA,EAAiB;IACnBJ,EAAA,CAAAM,qBAAA,EAAe;;;;;;IAefN,EAAA,CAAAC,uBAAA,GAAqC;IACnCD,EAAA,CAAAE,cAAA,wBAAwD;IAC3CF,EAAA,CAAAG,MAAA,uBAAgB;IAAAH,EAAA,CAAAI,YAAA,EAAY;IACvCJ,EAAA,CAAAK,SAAA,gBAA+F;IAC/FL,EAAA,CAAAE,cAAA,iBAAoF;IAAlDF,EAAA,CAAAO,UAAA,mBAAAC,+DAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,uBAAA,EAAyB;IAAA,EAAC;IACnEd,EAAA,CAAAE,cAAA,eAAU;IAAAF,EAAA,CAAAG,MAAA,GAAmD;IAAAH,EAAA,CAAAI,YAAA,EAAW;IAG9EJ,EAAA,CAAAM,qBAAA,EAAe;;;;IALKN,EAAA,CAAAe,SAAA,GAA0C;IAA1Cf,EAAA,CAAAgB,UAAA,SAAAC,MAAA,CAAAC,WAAA,uBAA0C;IAE9ClB,EAAA,CAAAe,SAAA,GAAmD;IAAnDf,EAAA,CAAAmB,iBAAA,CAAAF,MAAA,CAAAC,WAAA,mCAAmD;;;;;;IAgBzElB,EAAA,CAAAC,uBAAA,GAAqC;IACnCD,EAAA,CAAAE,cAAA,yBAAuE;IAC1DF,EAAA,CAAAG,MAAA,uBAAgB;IAAAH,EAAA,CAAAI,YAAA,EAAY;IACvCJ,EAAA,CAAAK,SAAA,gBAAoH;IACpHL,EAAA,CAAAE,cAAA,iBAAkI;IAAlFF,EAAA,CAAAO,UAAA,mBAAAa,+DAAA;MAAApB,EAAA,CAAAS,aAAA,CAAAY,GAAA;MAAA,MAAAC,MAAA,GAAAtB,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAS,MAAA,CAAAR,uBAAA,EAAyB;IAAA,EAAC;IACjFd,EAAA,CAAAE,cAAA,eAAU;IAAAF,EAAA,CAAAG,MAAA,GAAmD;IAAAH,EAAA,CAAAI,YAAA,EAAW;IAG9EJ,EAAA,CAAAM,qBAAA,EAAe;;;;IAL0BN,EAAA,CAAAe,SAAA,GAA0C;IAA1Cf,EAAA,CAAAgB,UAAA,SAAAO,MAAA,CAAAL,WAAA,uBAA0C;IACKlB,EAAA,CAAAe,SAAA,GAA6C;IAA7Cf,EAAA,CAAAwB,WAAA,yCAA6C;IACrHxB,EAAA,CAAAe,SAAA,GAAmD;IAAnDf,EAAA,CAAAmB,iBAAA,CAAAI,MAAA,CAAAL,WAAA,mCAAmD;;;;;;;;;;;IAMnElB,EAAA,CAAAE,cAAA,cAA2H;IACzHF,EAAA,CAAAG,MAAA,GACF;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;IAFkCJ,EAAA,CAAAgB,UAAA,YAAAhB,EAAA,CAAAyB,eAAA,IAAAC,GAAA,EAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,YAAAF,MAAA,CAAAC,QAAA,CAAAC,QAAA,YAAkF;IACxH7B,EAAA,CAAAe,SAAA,GACF;IADEf,EAAA,CAAA8B,kBAAA,MAAAH,MAAA,CAAAC,QAAA,MACF;;;AD7CJ,OAAM,MAAOG,aAAa;EAOxBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IARhB,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAR,QAAQ,GAAG,EAAE;IACb,KAAAS,YAAY,GAAG,KAAK;IACpB,KAAAnB,WAAW,GAAG,KAAK;IAOjB,IAAI,CAACoB,QAAQ,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACjD,UAAU,CAACkD,QAAQ,EAAElD,UAAU,CAACiD,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACnD,UAAU,CAACkD,QAAQ,EAAElD,UAAU,CAACoD,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE;KACrB,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACb,WAAW,CAACc,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1C,IAAIA,IAAI,EAAE;QACR,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAExC,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA;IACR,IAAI,CAAChB,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACR,QAAQ,GAAG,EAAE;EACpB;EAEAyB,wBAAwBA,CAAA;IACtB,IAAI,CAAChB,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAvB,uBAAuBA,CAAA;IACrB,IAAI,CAACI,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAEMoC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,IAAID,KAAI,CAACjB,QAAQ,CAACmB,OAAO,EAAE;MAE3B,MAAM;QAAEjB,IAAI;QAAEC,KAAK;QAAEC,KAAK;QAAEE,QAAQ;QAAEE;MAAe,CAAE,GAAGS,KAAI,CAACjB,QAAQ,CAACoB,KAAK;MAE7E,IAAIH,KAAI,CAACnB,cAAc,IAAIQ,QAAQ,KAAKE,eAAe,EAAE;QACvDS,KAAI,CAAC3B,QAAQ,GAAG,0BAA0B;QAC1C;;MAGF,IAAI;QACF,IAAI2B,KAAI,CAACnB,cAAc,EAAE;UACvB,MAAMmB,KAAI,CAACrB,WAAW,CAACyB,mBAAmB,CAAC;YAAEnB,IAAI;YAAEC,KAAK;YAAEC,KAAK;YAAEE;UAAQ,CAAE,CAAC;UAC5EW,KAAI,CAAC3B,QAAQ,GAAG,4BAA4B;SAC7C,MAAM;UACL,MAAM2B,KAAI,CAACrB,WAAW,CAAC0B,KAAK,CAAClB,KAAK,EAAEE,QAAQ,CAAC;;QAE/CW,KAAI,CAACpB,MAAM,CAACgB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;OACrC,CAAC,OAAOU,GAAQ,EAAE;QACjB,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,IAAI,EAAE;QAChC,QAAQD,SAAS;UACf,KAAK,gCAAgC;UACrC,KAAK,qBAAqB;UAC1B,KAAK,qBAAqB;YACxBP,KAAI,CAAC3B,QAAQ,GAAG,uBAAuB;YACvC;UACF,KAAK,2BAA2B;YAC9B2B,KAAI,CAAC3B,QAAQ,GAAG,wBAAwB;YACxC;UACF,KAAK,wBAAwB;YAC3B2B,KAAI,CAAC3B,QAAQ,GAAG,uCAAuC;YACvD;UACF;YACE2B,KAAI,CAAC3B,QAAQ,GAAGiC,GAAG,CAACG,OAAO,IAAI,gCAAgC;;;IAEpE;EACH;;;uBA9EWjC,aAAa,EAAA/B,EAAA,CAAAiE,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAnE,EAAA,CAAAiE,iBAAA,CAAAG,EAAA,CAAArE,WAAA,GAAAC,EAAA,CAAAiE,iBAAA,CAAAI,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAbvC,aAAa;MAAAwC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAzE,EAAA,CAAA0E,kBAAA,CAFb,CAAC3E,WAAW,CAAC,CAAC;;;;;;;UCxB3BC,EAAA,CAAAE,cAAA,aAA4B;UACtBF,EAAA,CAAAG,MAAA,GAA2C;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAEpDJ,EAAA,CAAAE,cAAA,cAAqD;UAAxBF,EAAA,CAAAO,UAAA,sBAAAoE,gDAAA;YAAA,OAAYC,GAAA,CAAAtB,QAAA,EAAU;UAAA,EAAC;UAClDtD,EAAA,CAAAE,cAAA,wBAAqE;UACxDF,EAAA,CAAAG,MAAA,YAAK;UAAAH,EAAA,CAAAI,YAAA,EAAY;UAC5BJ,EAAA,CAAAK,SAAA,eAA4E;UAC9EL,EAAA,CAAAI,YAAA,EAAiB;UAAAJ,EAAA,CAAAE,cAAA,aAA0B;UAEnCF,EAAA,CAAAG,MAAA,IAAwD;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAEjEJ,EAAA,CAAAE,cAAA,eAAqD;UAAxBF,EAAA,CAAAO,UAAA,sBAAAsE,iDAAA;YAAA,OAAYD,GAAA,CAAAtB,QAAA,EAAU;UAAA,EAAC;UAClDtD,EAAA,CAAA8E,UAAA,KAAAC,sCAAA,0BAUe;UAEf/E,EAAA,CAAAE,cAAA,yBAAwD;UAC3CF,EAAA,CAAAG,MAAA,aAAK;UAAAH,EAAA,CAAAI,YAAA,EAAY;UAC5BJ,EAAA,CAAAK,SAAA,gBAAqF;UACvFL,EAAA,CAAAI,YAAA,EAAiB;UAEjBJ,EAAA,CAAAE,cAAA,yBAAwD;UAC3CF,EAAA,CAAAG,MAAA,gBAAQ;UAAAH,EAAA,CAAAI,YAAA,EAAY;UAC/BJ,EAAA,CAAAK,SAAA,gBAAyF;UACzFL,EAAA,CAAAE,cAAA,kBAAqF;UAAnDF,EAAA,CAAAO,UAAA,mBAAAyE,gDAAA;YAAA,OAASJ,GAAA,CAAAvB,wBAAA,EAA0B;UAAA,EAAC;UACpErD,EAAA,CAAAE,cAAA,gBAAU;UAAAF,EAAA,CAAAG,MAAA,IAAoD;UAAAH,EAAA,CAAAI,YAAA,EAAW;UAI7EJ,EAAA,CAAA8E,UAAA,KAAAG,sCAAA,0BAQe;UAIrBjF,EAAA,CAAAE,cAAA,0BAAuE;UAC1DF,EAAA,CAAAG,MAAA,gBAAQ;UAAAH,EAAA,CAAAI,YAAA,EAAY;UAC/BJ,EAAA,CAAAK,SAAA,iBAA8G;UAC9GL,EAAA,CAAAE,cAAA,kBAA2H;UAA3EF,EAAA,CAAAO,UAAA,mBAAA2E,gDAAA;YAAA,OAASN,GAAA,CAAAvB,wBAAA,EAA0B;UAAA,EAAC;UAClFrD,EAAA,CAAAE,cAAA,gBAAU;UAAAF,EAAA,CAAAG,MAAA,IAAoD;UAAAH,EAAA,CAAAI,YAAA,EAAW;UAK7EJ,EAAA,CAAA8E,UAAA,KAAAK,sCAAA,0BAQe;UAGfnF,EAAA,CAAA8E,UAAA,KAAAM,6BAAA,kBAEM;UAGNpF,EAAA,CAAAE,cAAA,kBAA2E;UACzEF,EAAA,CAAAG,MAAA,IACF;UAAAH,EAAA,CAAAI,YAAA,EAAS;UAETJ,EAAA,CAAAE,cAAA,kBAA0F;UAAvBF,EAAA,CAAAO,UAAA,mBAAA8E,gDAAA;YAAA,OAAST,GAAA,CAAAxB,UAAA,EAAY;UAAA,EAAC;UACvFpD,EAAA,CAAAG,MAAA,IACF;UAAAH,EAAA,CAAAI,YAAA,EAAS;;;UA/EPJ,EAAA,CAAAe,SAAA,GAA2C;UAA3Cf,EAAA,CAAAmB,iBAAA,CAAAyD,GAAA,CAAAxC,cAAA,wBAA2C;UAEzCpC,EAAA,CAAAe,SAAA,GAAsB;UAAtBf,EAAA,CAAAgB,UAAA,cAAA4D,GAAA,CAAAtC,QAAA,CAAsB;UAMlBtC,EAAA,CAAAe,SAAA,GAAwD;UAAxDf,EAAA,CAAAmB,iBAAA,CAAAyD,GAAA,CAAAxC,cAAA,qCAAwD;UAEtDpC,EAAA,CAAAe,SAAA,GAAsB;UAAtBf,EAAA,CAAAgB,UAAA,cAAA4D,GAAA,CAAAtC,QAAA,CAAsB;UACXtC,EAAA,CAAAe,SAAA,GAAoB;UAApBf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAxC,cAAA,CAAoB;UAmBjBpC,EAAA,CAAAe,SAAA,GAA2C;UAA3Cf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAvC,YAAA,uBAA2C;UAE/CrC,EAAA,CAAAe,SAAA,GAAoD;UAApDf,EAAA,CAAAmB,iBAAA,CAAAyD,GAAA,CAAAvC,YAAA,mCAAoD;UAInDrC,EAAA,CAAAe,SAAA,GAAoB;UAApBf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAxC,cAAA,CAAoB;UAcFpC,EAAA,CAAAe,SAAA,GAA2C;UAA3Cf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAvC,YAAA,uBAA2C;UACKrC,EAAA,CAAAe,SAAA,GAAqC;UAArCf,EAAA,CAAAwB,WAAA,iCAAqC;UAC9GxB,EAAA,CAAAe,SAAA,GAAoD;UAApDf,EAAA,CAAAmB,iBAAA,CAAAyD,GAAA,CAAAvC,YAAA,mCAAoD;UAKnDrC,EAAA,CAAAe,SAAA,GAAoB;UAApBf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAxC,cAAA,CAAoB;UAW7BpC,EAAA,CAAAe,SAAA,GAAc;UAAdf,EAAA,CAAAgB,UAAA,SAAA4D,GAAA,CAAAhD,QAAA,CAAc;UAMlB5B,EAAA,CAAAe,SAAA,GACF;UADEf,EAAA,CAAA8B,kBAAA,MAAA8C,GAAA,CAAAxC,cAAA,6BACF;UAGEpC,EAAA,CAAAe,SAAA,GACF;UADEf,EAAA,CAAA8B,kBAAA,gBAAA8C,GAAA,CAAAxC,cAAA,6BACF;;;qBDhEA7C,YAAY,EAAA+F,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA,EACZhG,mBAAmB,EAAA0E,EAAA,CAAAuB,aAAA,EAAAvB,EAAA,CAAAwB,oBAAA,EAAAxB,EAAA,CAAAyB,eAAA,EAAAzB,EAAA,CAAA0B,oBAAA,EAAA1B,EAAA,CAAA2B,kBAAA,EAAA3B,EAAA,CAAA4B,eAAA,EACnBpG,eAAe,EAAAqG,EAAA,CAAAC,SAAA,EAAAD,EAAA,CAAAE,aAAA,EACftG,kBAAkB,EAAAuG,EAAA,CAAAC,YAAA,EAAAD,EAAA,CAAAE,QAAA,EAAAF,EAAA,CAAAG,SAAA,EAClBzG,cAAc,EAAA0G,EAAA,CAAAC,QAAA,EACd1G,aAAa,EAAA2G,EAAA,CAAAC,OAAA,EACb3G,YAAY;MAAA4G,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}