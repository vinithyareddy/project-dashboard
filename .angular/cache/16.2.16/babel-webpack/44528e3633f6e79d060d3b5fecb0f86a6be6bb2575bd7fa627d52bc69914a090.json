{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport class AuthService {\n  constructor(auth) {\n    this.auth = auth;\n    this.userSubject = new BehaviorSubject(null);\n    onAuthStateChanged(this.auth, user => this.userSubject.next(user));\n  }\n  getUser() {\n    return this.userSubject.asObservable();\n  }\n  login(email, password) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n  register(email, password) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n  logout() {\n    return signOut(this.auth);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Auth));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","BehaviorSubject","AuthService","constructor","auth","userSubject","user","next","getUser","asObservable","login","email","password","register","logout","i0","ɵɵinject","i1","Auth","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, User } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private userSubject = new BehaviorSubject<User | null>(null);\n\n  constructor(private auth: Auth) {\n    onAuthStateChanged(this.auth, user => this.userSubject.next(user));\n  }\n\n  getUser() {\n    return this.userSubject.asObservable();\n  }\n\n  login(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n  register(email: string, password: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  logout() {\n    return signOut(this.auth);\n  }\n}\n"],"mappings":"AACA,SAAeA,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,kBAAkB,QAAc,oBAAoB;AACxI,SAASC,eAAe,QAAQ,MAAM;;;AAGtC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAU;IAAV,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,WAAW,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAAC;IAG1DD,kBAAkB,CAAC,IAAI,CAACI,IAAI,EAAEE,IAAI,IAAI,IAAI,CAACD,WAAW,CAACE,IAAI,CAACD,IAAI,CAAC,CAAC;EACpE;EAEAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;EACxC;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAOd,0BAA0B,CAAC,IAAI,CAACM,IAAI,EAAEO,KAAK,EAAEC,QAAQ,CAAC;EAC/D;EAEAC,QAAQA,CAACF,KAAa,EAAEC,QAAgB;IACtC,OAAOf,8BAA8B,CAAC,IAAI,CAACO,IAAI,EAAEO,KAAK,EAAEC,QAAQ,CAAC;EACnE;EAEAE,MAAMA,CAAA;IACJ,OAAOf,OAAO,CAAC,IAAI,CAACK,IAAI,CAAC;EAC3B;;;uBArBWF,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,IAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}