{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.authService.getUser().pipe(take(1), map(user => {\n      if (user) return true;\n      this.router.navigate(['/auth']);\n      return false;\n    }));\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","take","AuthGuard","constructor","authService","router","canActivate","getUser","pipe","user","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth.guard.ts"],"sourcesContent":["// auth.guard.ts — Protects routes and redirects unauthenticated users\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate() {\n    return this.authService.getUser().pipe(\n      take(1),\n      map(user => {\n        if (user) return true;\n        this.router.navigate(['/auth']);\n        return false;\n      })\n    );\n  }\n}"],"mappings":"AAIA,SAASA,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;;AAG1C,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE,CAACC,IAAI,CACpCP,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACS,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE,OAAO,IAAI;MACrB,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;IACd,CAAC,CAAC,CACH;EACH;;;uBAZWR,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATd,SAAS;MAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;MAAAC,UAAA,EADI;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}