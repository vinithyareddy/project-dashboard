{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nexport class SnackbarService {\n  constructor(snackBar) {\n    this.snackBar = snackBar;\n  }\n  showSuccess(message) {\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-success']\n    });\n  }\n  showError(message) {\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-error']\n    });\n  }\n  static {\n    this.ɵfac = function SnackbarService_Factory(t) {\n      return new (t || SnackbarService)(i0.ɵɵinject(i1.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SnackbarService,\n      factory: SnackbarService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["SnackbarService","constructor","snackBar","showSuccess","message","open","duration","panelClass","showError","i0","ɵɵinject","i1","MatSnackBar","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/snackbar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({ providedIn: 'root' })\nexport class SnackbarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  showSuccess(message: string) {\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-success']\n    });\n  }\n\n  showError(message: string) {\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-error']\n    });\n  }\n}\n"],"mappings":";;AAIA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,QAAqB;IAArB,KAAAA,QAAQ,GAARA,QAAQ;EAAgB;EAE5CC,WAAWA,CAACC,OAAe;IACzB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACnCE,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,CAAC,kBAAkB;KAChC,CAAC;EACJ;EAEAC,SAASA,CAACJ,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACnCE,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,CAAC,gBAAgB;KAC9B,CAAC;EACJ;;;uBAfWP,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAfZ,eAAe;MAAAa,OAAA,EAAfb,eAAe,CAAAc,IAAA;MAAAC,UAAA,EADF;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}