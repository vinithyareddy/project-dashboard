{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/dialog\";\nexport class ChangePasswordDialogComponent {\n  constructor(fb, authService, dialogRef) {\n    this.fb = fb;\n    this.authService = authService;\n    this.dialogRef = dialogRef;\n    this.message = '';\n    this.isError = false;\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.passwordForm.invalid) return;\n      const {\n        currentPassword,\n        newPassword,\n        confirmPassword\n      } = _this.passwordForm.value;\n      if (newPassword !== confirmPassword) {\n        _this.message = '❌ Passwords do not match';\n        _this.isError = true;\n        return;\n      }\n      try {\n        yield _this.authService.updateUserPassword(currentPassword, newPassword);\n        _this.message = '✅ Password updated successfully';\n        _this.isError = false;\n        _this.passwordForm.reset();\n      } catch (error) {\n        _this.message = `❌ ${error.message || 'Failed to update password'}`;\n        _this.isError = true;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function ChangePasswordDialogComponent_Factory(t) {\n      return new (t || ChangePasswordDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangePasswordDialogComponent,\n      selectors: [[\"app-change-password-dialog\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function ChangePasswordDialogComponent_Template(rf, ctx) {},\n      dependencies: [CommonModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule],\n      styles: [\"h2[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 1rem;\\n}\\n\\n.actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.error-msg[_ngcontent-%COMP%] {\\n  color: red;\\n  margin-top: 10px;\\n}\\n\\n.success-msg[_ngcontent-%COMP%] {\\n  color: green;\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhbmdlLXBhc3N3b3JkLWRpYWxvZy9jaGFuZ2UtcGFzc3dvcmQtZGlhbG9nLmNvbXBvbmVudC50cyIsIndlYnBhY2s6Ly8uLy4uLy4uL215JTIwZ2l0aHViJTIwcHJvamVjdHMvcHJvamVjdC1kYXNoYm9hcmQvc3JjL2FwcC9jaGFuZ2UtcGFzc3dvcmQtZGlhbG9nL2NoYW5nZS1wYXNzd29yZC1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQUssYUFBQTtBQ0NUOztBREFJO0VBQWMsV0FBQTtFQUFhLG1CQUFBO0FDSy9COztBREpJO0VBQVcsYUFBQTtFQUFlLDhCQUFBO0FDUzlCOztBRFJJO0VBQWEsVUFBQTtFQUFZLGdCQUFBO0FDYTdCOztBRFpJO0VBQWUsWUFBQTtFQUFjLGdCQUFBO0FDaUJqQyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIGgyIHsgbWFyZ2luLXRvcDogMDsgfVxuICAgIC5mdWxsLXdpZHRoIHsgd2lkdGg6IDEwMCU7IG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgICAuYWN0aW9ucyB7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAgIC5lcnJvci1tc2cgeyBjb2xvcjogcmVkOyBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gICAgLnN1Y2Nlc3MtbXNnIHsgY29sb3I6IGdyZWVuOyBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gICIsImgyIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLmFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5lcnJvci1tc2cge1xuICBjb2xvcjogcmVkO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uc3VjY2Vzcy1tc2cge1xuICBjb2xvcjogZ3JlZW47XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatInputModule","ChangePasswordDialogComponent","constructor","fb","authService","dialogRef","message","isError","passwordForm","group","currentPassword","required","newPassword","minLength","confirmPassword","onSubmit","_this","_asyncToGenerator","invalid","value","updateUserPassword","reset","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","MatDialogRef","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","ChangePasswordDialogComponent_Template","rf","ctx","dependencies","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/change-password-dialog/change-password-dialog.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-change-password-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  template: `\n\n  `,\n  styles: [`\n    h2 { margin-top: 0; }\n    .full-width { width: 100%; margin-bottom: 1rem; }\n    .actions { display: flex; justify-content: space-between; }\n    .error-msg { color: red; margin-top: 10px; }\n    .success-msg { color: green; margin-top: 10px; }\n  `]\n})\nexport class ChangePasswordDialogComponent {\n  passwordForm: FormGroup;\n  message = '';\n  isError = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    public dialogRef: MatDialogRef<ChangePasswordDialogComponent>\n  ) {\n    this.passwordForm = this.fb.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  async onSubmit() {\n    if (this.passwordForm.invalid) return;\n\n    const { currentPassword, newPassword, confirmPassword } = this.passwordForm.value;\n\n    if (newPassword !== confirmPassword) {\n      this.message = '❌ Passwords do not match';\n      this.isError = true;\n      return;\n    }\n\n    try {\n      await this.authService.updateUserPassword(currentPassword, newPassword);\n      this.message = '✅ Password updated successfully';\n      this.isError = false;\n      this.passwordForm.reset();\n    } catch (error: any) {\n      this.message = `❌ ${error.message || 'Failed to update password'}`;\n      this.isError = true;\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAsBC,mBAAmB,EAAaC,UAAU,QAAQ,gBAAgB;AAExF,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;;;;;AAwBxD,OAAM,MAAOC,6BAA6B;EAKxCC,YACUC,EAAe,EACfC,WAAwB,EACzBC,SAAsD;IAFrD,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACZ,KAAAC,SAAS,GAATA,SAAS;IANlB,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,OAAO,GAAG,KAAK;IAOb,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAChCC,eAAe,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MAC1CC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEC,eAAe,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACc,QAAQ;KAC1C,CAAC;EACJ;EAEMI,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,IAAID,KAAI,CAACR,YAAY,CAACU,OAAO,EAAE;MAE/B,MAAM;QAAER,eAAe;QAAEE,WAAW;QAAEE;MAAe,CAAE,GAAGE,KAAI,CAACR,YAAY,CAACW,KAAK;MAEjF,IAAIP,WAAW,KAAKE,eAAe,EAAE;QACnCE,KAAI,CAACV,OAAO,GAAG,0BAA0B;QACzCU,KAAI,CAACT,OAAO,GAAG,IAAI;QACnB;;MAGF,IAAI;QACF,MAAMS,KAAI,CAACZ,WAAW,CAACgB,kBAAkB,CAACV,eAAe,EAAEE,WAAW,CAAC;QACvEI,KAAI,CAACV,OAAO,GAAG,iCAAiC;QAChDU,KAAI,CAACT,OAAO,GAAG,KAAK;QACpBS,KAAI,CAACR,YAAY,CAACa,KAAK,EAAE;OAC1B,CAAC,OAAOC,KAAU,EAAE;QACnBN,KAAI,CAACV,OAAO,GAAG,KAAKgB,KAAK,CAAChB,OAAO,IAAI,2BAA2B,EAAE;QAClEU,KAAI,CAACT,OAAO,GAAG,IAAI;;IACpB;EACH;;;uBArCWN,6BAA6B,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAA7B7B,6BAA6B;MAAA8B,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAV,EAAA,CAAAW,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;MAAAC,YAAA,GAjBtC9C,YAAY,EACZC,mBAAmB,EACnBG,kBAAkB,EAClBC,cAAc,EACdF,eAAe;MAAA4C,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}