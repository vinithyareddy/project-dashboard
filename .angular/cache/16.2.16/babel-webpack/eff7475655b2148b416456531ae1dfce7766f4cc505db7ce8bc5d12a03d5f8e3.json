{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc, updateDoc, deleteDoc, doc, getDocs } from '@angular/fire/firestore';\nimport { from, of, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"./auth.service\";\nexport class FirestoreService {\n  constructor(firestore, authService) {\n    this.firestore = firestore;\n    this.authService = authService;\n  }\n  getCollectionPath(type) {\n    return this.authService.getUser().pipe(switchMap(user => {\n      if (user?.uid) {\n        return of(`users/${user.uid}/${type}`);\n      }\n      return of('');\n    }));\n  }\n  // --------------------- TASKS ---------------------\n  addTask(task) {\n    return this.getCollectionPath('tasks').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), task))));\n  }\n  updateTask(taskId, updates) {\n    return this.getCollectionPath('tasks').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${taskId}`), updates))));\n  }\n  deleteTask(taskId) {\n    return this.getCollectionPath('tasks').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${taskId}`)))));\n  }\n  getTasks() {\n    var _this = this;\n    return this.getCollectionPath('tasks').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (path) {\n        const snapshot = yield getDocs(collection(_this.firestore, path));\n        return snapshot.docs.map(docSnap => {\n          const data = docSnap.data();\n          return {\n            id: docSnap.id,\n            ...data,\n            dueDate: data['dueDate']?.toDate?.() || data['dueDate'] // ✅ Fix TS4111 & typing issues\n          };\n        });\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n  // --------------------- PROJECTS ---------------------\n  addProject(project) {\n    return this.getCollectionPath('projects').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), project))));\n  }\n  updateProject(projectId, updates) {\n    return this.getCollectionPath('projects').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${projectId}`), updates))));\n  }\n  deleteProject(projectId) {\n    return this.getCollectionPath('projects').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${projectId}`)))));\n  }\n  getProjects() {\n    var _this2 = this;\n    return this.getCollectionPath('projects').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (path) {\n        const snapshot = yield getDocs(collection(_this2.firestore, path));\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()));\n  }\n  // --------------------- TEAMS ---------------------\n  addTeamMember(member) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), member))));\n  }\n  updateTeamMember(memberId, updates) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${memberId}`), updates))));\n  }\n  deleteTeamMember(memberId) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${memberId}`)))));\n  }\n  getTeamMembers() {\n    var _this3 = this;\n    return this.getCollectionPath('teams').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (path) {\n        const snapshot = yield getDocs(collection(_this3.firestore, path));\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()));\n  }\n  static {\n    this.ɵfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ɵɵinject(i1.Firestore), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","from","of","switchMap","FirestoreService","constructor","firestore","authService","getCollectionPath","type","getUser","pipe","user","uid","addTask","task","path","updateTask","taskId","updates","deleteTask","getTasks","_this","_ref","_asyncToGenerator","snapshot","docs","map","docSnap","data","id","dueDate","toDate","_x","apply","arguments","addProject","project","updateProject","projectId","deleteProject","getProjects","_this2","_ref2","_x2","addTeamMember","member","updateTeamMember","memberId","deleteTeamMember","getTeamMembers","_this3","_ref3","_x3","i0","ɵɵinject","i1","Firestore","i2","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs,\n  CollectionReference,\n  DocumentData\n} from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { TeamMember } from '../models/team.model'; // ✅ Make sure this file exists!\nimport { from, Observable, of, switchMap } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore, private authService: AuthService) {}\n\n  private getCollectionPath(type: 'tasks' | 'projects' | 'teams'): Observable<string> {\n    return this.authService.getUser().pipe(\n      switchMap((user: any) => {\n        if (user?.uid) {\n          return of(`users/${user.uid}/${type}`);\n        }\n        return of('');\n      })\n    );\n  }\n\n  // --------------------- TASKS ---------------------\n  addTask(task: Task): Observable<any> {\n    return this.getCollectionPath('tasks').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), task)))\n    );\n  }\n\n  updateTask(taskId: string, updates: Partial<Task>): Observable<any> {\n    return this.getCollectionPath('tasks').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${taskId}`), updates)))\n    );\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    return this.getCollectionPath('tasks').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${taskId}`))))\n    );\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.getCollectionPath('tasks').pipe(\n      switchMap(async (path) => {\n        const snapshot = await getDocs(collection(this.firestore, path));\n        return snapshot.docs.map((docSnap) => {\n          const data: any = docSnap.data();\n          return {\n            id: docSnap.id,\n            ...data,\n            dueDate: data['dueDate']?.toDate?.() || data['dueDate']  // ✅ Fix TS4111 & typing issues\n          } as Task;\n        });\n      })\n    );\n  }\n  \n  \n  // --------------------- PROJECTS ---------------------\n  addProject(project: Project): Observable<any> {\n    return this.getCollectionPath('projects').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), project)))\n    );\n  }\n\n  updateProject(projectId: string, updates: Partial<Project>): Observable<any> {\n    return this.getCollectionPath('projects').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${projectId}`), updates)))\n    );\n  }\n\n  deleteProject(projectId: string): Observable<any> {\n    return this.getCollectionPath('projects').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${projectId}`))))\n    );\n  }\n\n  getProjects(): Observable<Project[]> {\n    return this.getCollectionPath('projects').pipe(\n      switchMap(async (path) => {\n        const snapshot = await getDocs(collection(this.firestore, path));\n        return snapshot.docs.map((docSnap) => ({ id: docSnap.id, ...docSnap.data() } as Project));\n      })\n    );\n  }\n\n  // --------------------- TEAMS ---------------------\n  addTeamMember(member: TeamMember): Observable<any> {\n    return this.getCollectionPath('teams').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), member)))\n    );\n  }\n\n  updateTeamMember(memberId: string, updates: Partial<TeamMember>): Observable<any> {\n    return this.getCollectionPath('teams').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${memberId}`), updates)))\n    );\n  }\n\n  deleteTeamMember(memberId: string): Observable<any> {\n    return this.getCollectionPath('teams').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${memberId}`))))\n    );\n  }\n\n  getTeamMembers(): Observable<TeamMember[]> {\n    return this.getCollectionPath('teams').pipe(\n      switchMap(async (path) => {\n        const snapshot = await getDocs(collection(this.firestore, path));\n        return snapshot.docs.map((docSnap) => ({ id: docSnap.id, ...docSnap.data() } as TeamMember));\n      })\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}