{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TeamsComponent } from './teams/teams.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { AuthGuard } from './auth/auth.guard'; // âœ… Correct path\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routes = [{\n  path: '',\n  component: WelcomeComponent\n}, {\n  path: 'auth',\n  loadComponent: () => import('./auth/auth/auth.component').then(m => m.AuthComponent)\n}, {\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'projects',\n  component: ProjectsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'tasks',\n  component: TasksComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'teams',\n  component: TeamsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'calendar',\n  component: CalendarComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  component: NotFoundComponent\n}];\nexport class AppRoutingModule {\n  static {\n    this.Éµfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.Éµmod = /*@__PURE__*/i0.ÉµÉµdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.Éµinj = /*@__PURE__*/i0.ÉµÉµdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ÉµÉµsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","DashboardComponent","WelcomeComponent","TeamsComponent","ProjectsComponent","TasksComponent","CalendarComponent","AuthGuard","NotFoundComponent","routes","path","component","loadComponent","then","m","AuthComponent","canActivate","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TeamsComponent } from './teams/teams.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { AuthGuard } from './auth/auth.guard'; // âœ… Correct path\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\n\nexport const routes: Routes = [ // ðŸ‘ˆ this makes them usable in main.ts\n  { path: '', component: WelcomeComponent },\n  {\n    path: 'auth',\n    loadComponent: () => import('./auth/auth/auth.component').then(m => m.AuthComponent)\n  },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'projects', component: ProjectsComponent, canActivate: [AuthGuard] },\n  { path: 'tasks', component: TasksComponent, canActivate: [AuthGuard] },\n  { path: 'teams', component: TeamsComponent, canActivate: [AuthGuard] },\n  { path: 'calendar', component: CalendarComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent }\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,SAAS,QAAQ,mBAAmB,CAAC,CAAC;AAC/C,SAASC,iBAAiB,QAAQ,iCAAiC;;;AAInE,OAAO,MAAMC,MAAM,GAAW,CAC5B;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAET;AAAgB,CAAE,EACzC;EACEQ,IAAI,EAAE,MAAM;EACZE,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,aAAa;CACpF,EACD;EAAEL,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEV,kBAAkB;EAAEe,WAAW,EAAE,CAACT,SAAS;AAAC,CAAE,EAC9E;EAAEG,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEP,iBAAiB;EAAEY,WAAW,EAAE,CAACT,SAAS;AAAC,CAAE,EAC5E;EAAEG,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN,cAAc;EAAEW,WAAW,EAAE,CAACT,SAAS;AAAC,CAAE,EACtE;EAAEG,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAER,cAAc;EAAEa,WAAW,EAAE,CAACT,SAAS;AAAC,CAAE,EACtE;EAAEG,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL,iBAAiB;EAAEU,WAAW,EAAE,CAACT,SAAS;AAAC,CAAE,EAC5E;EAAEG,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAEH;AAAiB,CAAE,CAE7C;AAOD,OAAM,MAAOS,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBjB,YAAY,CAACkB,OAAO,CAACT,MAAM,CAAC,EAC5BT,YAAY;IAAA;EAAA;;;2EAEXiB,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAApB,YAAA;IAAAqB,OAAA,GAFjBrB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}