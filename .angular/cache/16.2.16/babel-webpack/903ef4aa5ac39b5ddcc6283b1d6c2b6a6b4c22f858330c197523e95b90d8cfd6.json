{"ast":null,"code":"import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport class AuthService {\n  constructor(auth, ngZone) {\n    this.auth = auth;\n    this.ngZone = ngZone;\n    this.userSubject = new BehaviorSubject(null);\n    this.INACTIVITY_LIMIT = 15 * 60 * 1000; // 15 mins\n    onAuthStateChanged(this.auth, user => {\n      this.userSubject.next(user);\n      if (user) {\n        this.resetInactivityTimer();\n      } else {\n        this.clearInactivityTimer();\n      }\n    });\n    this.startInactivityWatch();\n  }\n  getUser() {\n    return this.userSubject.asObservable();\n  }\n  login(email, password) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n  register(email, password) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n  logout() {\n    this.clearInactivityTimer();\n    return signOut(this.auth);\n  }\n  startInactivityWatch() {\n    ['mousemove', 'keydown', 'click'].forEach(event => {\n      window.addEventListener(event, () => this.resetInactivityTimer());\n    });\n  }\n  resetInactivityTimer() {\n    this.clearInactivityTimer();\n    this.inactivityTimer = setTimeout(() => {\n      this.ngZone.run(() => {\n        this.logout();\n        alert('You were logged out due to inactivity.');\n      });\n    }, this.INACTIVITY_LIMIT);\n  }\n  clearInactivityTimer() {\n    if (this.inactivityTimer) {\n      clearTimeout(this.inactivityTimer);\n      this.inactivityTimer = null;\n    }\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","BehaviorSubject","AuthService","constructor","auth","ngZone","userSubject","INACTIVITY_LIMIT","user","next","resetInactivityTimer","clearInactivityTimer","startInactivityWatch","getUser","asObservable","login","email","password","register","logout","forEach","event","window","addEventListener","inactivityTimer","setTimeout","run","alert","clearTimeout","i0","ɵɵinject","i1","Auth","NgZone","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["// auth.service.ts — handles login, registration, session persistence, and auto logout\nimport { Injectable, NgZone } from '@angular/core';\nimport {\n  Auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  User\n} from '@angular/fire/auth';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private userSubject = new BehaviorSubject<User | null>(null);\n  private inactivityTimer: any;\n  private readonly INACTIVITY_LIMIT = 15 * 60 * 1000; // 15 mins\n\n  constructor(private auth: Auth, private ngZone: NgZone) {\n    onAuthStateChanged(this.auth, user => {\n      this.userSubject.next(user);\n      if (user) {\n        this.resetInactivityTimer();\n      } else {\n        this.clearInactivityTimer();\n      }\n    });\n\n    this.startInactivityWatch();\n  }\n\n  getUser(): Observable<User | null> {\n    return this.userSubject.asObservable();\n  }\n\n  login(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n  register(email: string, password: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  logout() {\n    this.clearInactivityTimer();\n    return signOut(this.auth);\n  }\n\n  private startInactivityWatch() {\n    ['mousemove', 'keydown', 'click'].forEach(event => {\n      window.addEventListener(event, () => this.resetInactivityTimer());\n    });\n  }\n\n  private resetInactivityTimer() {\n    this.clearInactivityTimer();\n    this.inactivityTimer = setTimeout(() => {\n      this.ngZone.run(() => {\n        this.logout();\n        alert('You were logged out due to inactivity.');\n      });\n    }, this.INACTIVITY_LIMIT);\n  }\n\n  private clearInactivityTimer() {\n    if (this.inactivityTimer) {\n      clearTimeout(this.inactivityTimer);\n      this.inactivityTimer = null;\n    }\n  }\n} \n"],"mappings":"AAEA,SAEEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,QAEb,oBAAoB;AAC3B,SAAqBC,eAAe,QAAQ,MAAM;;;AAGlD,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAU,EAAUC,MAAc;IAAlC,KAAAD,IAAI,GAAJA,IAAI;IAAgB,KAAAC,MAAM,GAANA,MAAM;IAJtC,KAAAC,WAAW,GAAG,IAAIL,eAAe,CAAc,IAAI,CAAC;IAE3C,KAAAM,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IAGlDP,kBAAkB,CAAC,IAAI,CAACI,IAAI,EAAEI,IAAI,IAAG;MACnC,IAAI,CAACF,WAAW,CAACG,IAAI,CAACD,IAAI,CAAC;MAC3B,IAAIA,IAAI,EAAE;QACR,IAAI,CAACE,oBAAoB,EAAE;OAC5B,MAAM;QACL,IAAI,CAACC,oBAAoB,EAAE;;IAE/B,CAAC,CAAC;IAEF,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACP,WAAW,CAACQ,YAAY,EAAE;EACxC;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAOnB,0BAA0B,CAAC,IAAI,CAACM,IAAI,EAAEY,KAAK,EAAEC,QAAQ,CAAC;EAC/D;EAEAC,QAAQA,CAACF,KAAa,EAAEC,QAAgB;IACtC,OAAOpB,8BAA8B,CAAC,IAAI,CAACO,IAAI,EAAEY,KAAK,EAAEC,QAAQ,CAAC;EACnE;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACR,oBAAoB,EAAE;IAC3B,OAAOZ,OAAO,CAAC,IAAI,CAACK,IAAI,CAAC;EAC3B;EAEQQ,oBAAoBA,CAAA;IAC1B,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAACQ,OAAO,CAACC,KAAK,IAAG;MAChDC,MAAM,CAACC,gBAAgB,CAACF,KAAK,EAAE,MAAM,IAAI,CAACX,oBAAoB,EAAE,CAAC;IACnE,CAAC,CAAC;EACJ;EAEQA,oBAAoBA,CAAA;IAC1B,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAACa,eAAe,GAAGC,UAAU,CAAC,MAAK;MACrC,IAAI,CAACpB,MAAM,CAACqB,GAAG,CAAC,MAAK;QACnB,IAAI,CAACP,MAAM,EAAE;QACbQ,KAAK,CAAC,wCAAwC,CAAC;MACjD,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAACpB,gBAAgB,CAAC;EAC3B;EAEQI,oBAAoBA,CAAA;IAC1B,IAAI,IAAI,CAACa,eAAe,EAAE;MACxBI,YAAY,CAAC,IAAI,CAACJ,eAAe,CAAC;MAClC,IAAI,CAACA,eAAe,GAAG,IAAI;;EAE/B;;;uBAxDWtB,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,IAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAI,MAAA;IAAA;EAAA;;;aAAX/B,WAAW;MAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}