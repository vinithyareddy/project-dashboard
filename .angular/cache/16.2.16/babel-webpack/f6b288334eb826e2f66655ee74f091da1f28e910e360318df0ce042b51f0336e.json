{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon'; // âœ… Add this\nimport { MatTooltipModule } from '@angular/material/tooltip'; // Optional if using matTooltip\nimport { MatButtonModule } from '@angular/material/button'; // Optional if using buttons\nimport { RouterModule } from '@angular/router'; // Optional if using routerLink\nimport { CommonModule } from '@angular/common';\nexport let HeaderComponent = class HeaderComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.isLoggedIn = false;\n    this.auth.getUser().subscribe(user => {\n      this.isLoggedIn = !!user;\n    });\n  }\n  logout() {\n    this.auth.logout().then(() => {\n      this.router.navigate(['/auth']);\n    });\n  }\n  goToLogin() {\n    this.router.navigate(['/auth']);\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatTooltipModule, MatButtonModule, RouterModule // Optional, if you're routing from header\n  ],\n\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})], HeaderComponent);","map":{"version":3,"names":["Component","MatIconModule","MatTooltipModule","MatButtonModule","RouterModule","CommonModule","HeaderComponent","constructor","auth","router","isLoggedIn","getUser","subscribe","user","logout","then","navigate","goToLogin","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/header/header.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon'; // âœ… Add this\nimport { MatTooltipModule } from '@angular/material/tooltip'; // Optional if using matTooltip\nimport { MatButtonModule } from '@angular/material/button'; // Optional if using buttons\nimport { RouterModule } from '@angular/router'; // Optional if using routerLink\nimport { CommonModule } from '@angular/common';\n\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,      // âœ… Required for <mat-icon>\n    MatTooltipModule,   // ðŸ§  Optional, only if using tooltips\n    MatButtonModule,    // ðŸ§  Optional, if using buttons\n    RouterModule        // Optional, if you're routing from header\n  ],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  isLoggedIn = false;\n\n  constructor(private auth: AuthService, private router: Router) {\n    this.auth.getUser().subscribe(user => {\n      this.isLoggedIn = !!user;\n    });\n  }\n\n  logout() {\n    this.auth.logout().then(() => {\n      this.router.navigate(['/auth']);\n    });\n  }\n\n  goToLogin() {\n    this.router.navigate(['/auth']);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAASC,aAAa,QAAQ,wBAAwB,CAAC,CAAC;AACxD,SAASC,gBAAgB,QAAQ,2BAA2B,CAAC,CAAC;AAC9D,SAASC,eAAe,QAAQ,0BAA0B,CAAC,CAAC;AAC5D,SAASC,YAAY,QAAQ,iBAAiB,CAAC,CAAC;AAChD,SAASC,YAAY,QAAQ,iBAAiB;AAgBvC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAFrD,KAAAC,UAAU,GAAG,KAAK;IAGhB,IAAI,CAACF,IAAI,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACnC,IAAI,CAACH,UAAU,GAAG,CAAC,CAACG,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACN,IAAI,CAACM,MAAM,EAAE,CAACC,IAAI,CAAC,MAAK;MAC3B,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAC,SAASA,CAAA;IACP,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;CACD;AAlBYV,eAAe,GAAAY,UAAA,EAb3BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPhB,YAAY,EACZJ,aAAa,EACbC,gBAAgB,EAChBC,eAAe,EACfC,YAAY,CAAQ;EAAA,CACrB;;EACDkB,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWjB,eAAe,CAkB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}