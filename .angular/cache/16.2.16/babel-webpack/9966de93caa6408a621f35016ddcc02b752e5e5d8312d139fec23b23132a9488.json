{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nfunction AuthComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 4)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 11);\n    i0.ɵɵlistener(\"mouseenter\", function AuthComponent_ng_container_15_Template_input_mouseenter_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showConfirm = true);\n    })(\"mouseleave\", function AuthComponent_ng_container_15_Template_input_mouseleave_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showConfirm = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 6)(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"visibility\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r0.showConfirm ? \"text\" : \"password\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"success\": a0,\n    \"error\": a1\n  };\n};\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.errorMsg.includes(\"\\u2705\"), ctx_r1.errorMsg.includes(\"\\u274C\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMsg, \" \");\n  }\n}\nexport class AuthComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isRegisterMode = false;\n    this.errorMsg = '';\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n  ngOnInit() {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.authForm.invalid) return;\n      const {\n        name,\n        phone,\n        email,\n        password,\n        confirmPassword\n      } = _this.authForm.value;\n      if (_this.isRegisterMode && password !== confirmPassword) {\n        _this.errorMsg = '❌ Passwords do not match';\n        return;\n      }\n      try {\n        if (_this.isRegisterMode) {\n          yield _this.authService.registerWithProfile({\n            name,\n            phone,\n            email,\n            password\n          });\n          _this.errorMsg = '✅ Account has been created';\n        } else {\n          yield _this.authService.login(email, password);\n        }\n        _this.router.navigate(['/dashboard']);\n      } catch (err) {\n        const errorCode = err.code || '';\n        switch (errorCode) {\n          case 'auth/invalid-login-credentials':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            _this.errorMsg = '❌ Invalid Credentials';\n            break;\n          case 'auth/email-already-in-use':\n            _this.errorMsg = '❌ Email already in use';\n            break;\n          case 'auth/too-many-requests':\n            _this.errorMsg = '❌ Too many attempts. Try again later.';\n            break;\n          default:\n            _this.errorMsg = err.message || '❌ An unexpected error occurred';\n        }\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 21,\n      vars: 7,\n      consts: [[1, \"auth-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\"], [\"appearance\", \"outline\", 1, \"full-width\", \"password-field\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\", \"mouseenter\", \"mouseleave\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"disabled\", \"\"], [4, \"ngIf\"], [\"class\", \"error-msg\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"], [\"mat-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 1, \"full-width\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 3, \"type\", \"mouseenter\", \"mouseleave\"], [1, \"error-msg\", 3, \"ngClass\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 4)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 5);\n          i0.ɵɵlistener(\"mouseenter\", function AuthComponent_Template_input_mouseenter_11_listener() {\n            return ctx.showPassword = true;\n          })(\"mouseleave\", function AuthComponent_Template_input_mouseleave_11_listener() {\n            return ctx.showPassword = false;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 6)(13, \"mat-icon\");\n          i0.ɵɵtext(14, \"visibility\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(15, AuthComponent_ng_container_15_Template, 8, 1, \"ng-container\", 7);\n          i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 2, 5, \"div\", 8);\n          i0.ɵɵelementStart(17, \"button\", 9);\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_19_listener() {\n            return ctx.toggleMode();\n          });\n          i0.ɵɵtext(20);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isRegisterMode ? \"Register\" : \"Login\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, i5.MatIconButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatInputModule, i7.MatInput, RouterModule],\n      styles: [\".auth-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 4rem auto;\\n  padding: 2rem;\\n  background: #fff;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\\n}\\n.auth-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1.5rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 1rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  font-weight: 500;\\n  text-align: center;\\n}\\n.auth-container[_ngcontent-%COMP%]   .error-msg.success[_ngcontent-%COMP%] {\\n  color: #2ecc71;\\n}\\n.auth-container[_ngcontent-%COMP%]   .error-msg.error[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMGdpdGh1YiUyMHByb2plY3RzL3Byb2plY3QtZGFzaGJvYXJkL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5Q0FBQTtBQ0NKO0FEQ0k7RUFDRSxrQkFBQTtFQUNBLHFCQUFBO0FDQ047QURFSTtFQUNFLFdBQUE7RUFDQSxtQkFBQTtBQ0FOO0FER0k7RUFDSSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQ0RSO0FESU07RUFDRSxjQUFBO0FDRlI7QURLTTtFQUNFLGNBQUE7QUNIUiIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDRyZW0gYXV0bztcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICBib3gtc2hhZG93OiAwIDhweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgXG4gICAgaDIge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICAgIH1cbiAgXG4gICAgLmZ1bGwtd2lkdGgge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgIH1cbiAgXG4gICAgLmVycm9yLW1zZyB7XG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5lcnJvci1tc2cuc3VjY2VzcyB7XG4gICAgICAgIGNvbG9yOiAjMmVjYzcxO1xuICAgICAgfVxuICAgICAgXG4gICAgICAuZXJyb3ItbXNnLmVycm9yIHtcbiAgICAgICAgY29sb3I6ICNlNzRjM2M7XG4gICAgICB9XG4gICAgICBcbiAgfVxuICAiLCIuYXV0aC1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW46IDRyZW0gYXV0bztcbiAgcGFkZGluZzogMnJlbTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgYm94LXNoYWRvdzogMCA4cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG4uYXV0aC1jb250YWluZXIgaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbn1cbi5hdXRoLWNvbnRhaW5lciAuZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuLmF1dGgtY29udGFpbmVyIC5lcnJvci1tc2cge1xuICBtYXJnaW46IDEwcHggMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmF1dGgtY29udGFpbmVyIC5lcnJvci1tc2cuc3VjY2VzcyB7XG4gIGNvbG9yOiAjMmVjYzcxO1xufVxuLmF1dGgtY29udGFpbmVyIC5lcnJvci1tc2cuZXJyb3Ige1xuICBjb2xvcjogI2U3NGMzYztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatInputModule","RouterModule","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthComponent_ng_container_15_Template_input_mouseenter_4_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","showConfirm","AuthComponent_ng_container_15_Template_input_mouseleave_4_listener","ctx_r4","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","ɵɵpureFunction2","_c0","ctx_r1","errorMsg","includes","ɵɵtextInterpolate1","AuthComponent","constructor","fb","authService","router","isRegisterMode","authForm","group","name","phone","email","required","password","minLength","confirmPassword","ngOnInit","getUser","subscribe","user","navigate","toggleMode","onSubmit","_this","_asyncToGenerator","invalid","value","registerWithProfile","login","err","errorCode","code","message","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AuthComponent_Template","rf","ctx","AuthComponent_Template_form_ngSubmit_3_listener","ɵɵelement","AuthComponent_Template_input_mouseenter_11_listener","showPassword","AuthComponent_Template_input_mouseleave_11_listener","ɵɵtemplate","AuthComponent_ng_container_15_Template","AuthComponent_div_16_Template","AuthComponent_Template_button_click_19_listener","ɵɵtextInterpolate","i4","NgClass","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i5","MatButton","MatIconButton","i6","MatFormField","MatLabel","MatSuffix","i7","MatInput","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.html"],"sourcesContent":["// auth.component.ts - enhanced with name, phone, validation, and messages\nimport { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule\n  ]\n})\nexport class AuthComponent implements OnInit {\n  authForm: FormGroup;\n  isRegisterMode = false;\n  errorMsg = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n\n  async onSubmit() {\n    if (this.authForm.invalid) return;\n    const { name, phone, email, password, confirmPassword } = this.authForm.value;\n\n    if (this.isRegisterMode && password !== confirmPassword) {\n      this.errorMsg = '❌ Passwords do not match';\n      return;\n    }\n\n    try {\n      if (this.isRegisterMode) {\n        await this.authService.registerWithProfile({ name, phone, email, password });\n        this.errorMsg = '✅ Account has been created';\n      } else {\n        await this.authService.login(email, password);\n      }\n      this.router.navigate(['/dashboard']);\n    } catch (err: any) {\n      const errorCode = err.code || '';\n      switch (errorCode) {\n        case 'auth/invalid-login-credentials':\n        case 'auth/user-not-found':\n        case 'auth/wrong-password':\n          this.errorMsg = '❌ Invalid Credentials';\n          break;\n        case 'auth/email-already-in-use':\n          this.errorMsg = '❌ Email already in use';\n          break;\n        case 'auth/too-many-requests':\n          this.errorMsg = '❌ Too many attempts. Try again later.';\n          break;\n        default:\n          this.errorMsg = err.message || '❌ An unexpected error occurred';\n      }\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <h2>{{ isRegisterMode ? 'Register' : 'Login' }}</h2>\n\n  <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput formControlName=\"email\" type=\"email\" />\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n      <mat-label>Password</mat-label>\n      <input matInput\n             [type]=\"showPassword ? 'text' : 'password'\"\n             formControlName=\"password\"\n             (mouseenter)=\"showPassword = true\"\n             (mouseleave)=\"showPassword = false\" />\n      <button mat-icon-button matSuffix disabled>\n        <mat-icon>visibility</mat-icon>\n      </button>\n    </mat-form-field>\n\n    <ng-container *ngIf=\"isRegisterMode\">\n      <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n        <mat-label>Confirm Password</mat-label>\n        <input matInput\n               [type]=\"showConfirm ? 'text' : 'password'\"\n               formControlName=\"confirmPassword\"\n               (mouseenter)=\"showConfirm = true\"\n               (mouseleave)=\"showConfirm = false\" />\n        <button mat-icon-button matSuffix disabled>\n          <mat-icon>visibility</mat-icon>\n        </button>\n      </mat-form-field>\n    </ng-container>\n\n    <div *ngIf=\"errorMsg\" class=\"error-msg\" [ngClass]=\"{ 'success': errorMsg.includes('✅'), 'error': errorMsg.includes('❌') }\">\n      {{ errorMsg }}\n    </div>\n\n    <button mat-raised-button color=\"primary\" class=\"full-width\" type=\"submit\">\n      {{ isRegisterMode ? 'Register' : 'Login' }}\n    </button>\n\n    <button mat-button color=\"accent\" class=\"full-width\" type=\"button\" (click)=\"toggleMode()\">\n      Switch to {{ isRegisterMode ? 'Login' : 'Register' }}\n    </button>\n  </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}