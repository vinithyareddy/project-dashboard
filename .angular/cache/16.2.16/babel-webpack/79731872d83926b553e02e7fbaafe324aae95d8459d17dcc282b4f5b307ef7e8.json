{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { take } from 'rxjs';\nChart.register(...registerables);\nexport let DashboardComponent = class DashboardComponent {\n  constructor(datePipe, firestoreService, authService, refreshService) {\n    this.datePipe = datePipe;\n    this.firestoreService = firestoreService;\n    this.authService = authService;\n    this.refreshService = refreshService;\n    this.tasks = [];\n    this.projects = [];\n    this.totalTasks = 0;\n    this.tasksCompleted = 0;\n    this.tasksInProgress = 0;\n    this.tasksNotStarted = 0;\n    this.overdueTasks = 0;\n    this.totalProjects = 0;\n    this.projectsCompleted = 0;\n    this.projectsInProgress = 0;\n    this.projectsNotStarted = 0;\n    this.overallProgress = 0;\n    this.upcomingDeadlines = [];\n    this.donutChartData = [];\n    this.donutChartLabels = ['Completed', 'In Progress', 'Not Started'];\n    this.currentProjectName = 'N/A';\n    this.currentProjectProgress = 0;\n    this.currentProjectDaysRemaining = 0;\n    this.showAllProjects = false;\n    this.showAllTasks = false;\n    this.currentDate = new Date();\n    this.currentMonth = this.currentDate.getMonth();\n    this.currentYear = this.currentDate.getFullYear();\n    this.calendar = [];\n    this.currentMonth = this.currentDate.getMonth();\n    this.currentYear = this.currentDate.getFullYear();\n  }\n  ngOnInit() {\n    this.authService.getUser().subscribe(user => {\n      console.log('ðŸ”¥ Firebase UID:', user?.uid);\n    });\n    this.generateCalendar();\n    this.loadData();\n    this.refreshService.refresh$.subscribe(() => {\n      this.loadData();\n    });\n  }\n  fetchData() {\n    this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n      this.tasks = tasks;\n      this.calculateAllSummaries();\n      this.prepareUpcomingDeadlines();\n      this.prepareChartData();\n    });\n    this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n      this.projects = projects; // âœ… Use real progress value from Firestore\n      this.prepareProjectOverview();\n    });\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.initializeDonutChart();\n    }, 100); // Slight delay to wait for data\n  }\n\n  convertToDate(date) {\n    return date instanceof Date ? date : date.toDate();\n  }\n  calculateAllSummaries() {\n    const now = new Date();\n    this.totalTasks = this.tasks.length;\n    this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n    this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n    this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n    this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && this.convertToDate(t.dueDate) < now).length;\n    this.overallProgress = this.totalTasks > 0 ? Math.round(this.tasksCompleted / this.totalTasks * 100) : 0;\n  }\n  prepareUpcomingDeadlines() {\n    this.upcomingDeadlines = this.tasks.map(t => ({\n      name: t.name,\n      deadline: this.convertToDate(t.dueDate),\n      type: 'Task'\n    })).filter(d => d.deadline >= new Date()).sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n  }\n  prepareChartData() {\n    this.donutChartData = [this.projectsCompleted, this.projectsInProgress, this.projectsNotStarted];\n    this.updateDonutChart(); // âœ… Re-render\n  }\n\n  updateDonutChart() {\n    if (!this.donutChartRef || this.donutChartData.length === 0) return;\n    const ctx = this.donutChartRef.nativeElement.getContext('2d');\n    if (this.donutChart) {\n      this.donutChart.destroy(); // âœ… Remove old chart\n    }\n\n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Completed', 'In Progress', 'Not Started'],\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: true\n          }\n        }\n      }\n    });\n  }\n  prepareProjectOverview() {\n    this.totalProjects = this.projects.length;\n    this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n    this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n    this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n  }\n  initializeDonutChart() {\n    if (!this.donutChartRef || this.donutChartData.length === 0) return;\n    const canvas = this.donutChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (this.donutChart) this.donutChart.destroy();\n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: this.donutChartLabels,\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: true\n          }\n        }\n      }\n    });\n  }\n  toggleProjects() {\n    this.showAllProjects = !this.showAllProjects;\n  }\n  toggleTasks() {\n    this.showAllTasks = !this.showAllTasks;\n  }\n  generateCalendar() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1);\n    const lastDay = new Date(this.currentYear, this.currentMonth + 1, 0);\n    const weeks = [];\n    let currentWeek = [];\n    const startingDay = firstDay.getDay();\n    for (let i = 0; i < startingDay; i++) currentWeek.push(null);\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      if (currentWeek.length === 7) {\n        weeks.push(currentWeek);\n        currentWeek = [];\n      }\n      currentWeek.push(new Date(this.currentYear, this.currentMonth, day));\n    }\n    while (currentWeek.length < 7) currentWeek.push(null);\n    weeks.push(currentWeek);\n    this.calendar = weeks;\n  }\n  loadData() {\n    this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n      this.tasks = tasks;\n      this.calculateAllSummaries();\n      this.prepareUpcomingDeadlines();\n      this.prepareChartData();\n    });\n    this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n      this.projects = projects.map(project => {\n        let progress = 0;\n        if (project.status === 'Completed') progress = 100;else if (project.status === 'In Progress') progress = 50;\n        return {\n          ...project,\n          progress\n        };\n      });\n      this.prepareProjectOverview(); // already exists\n      this.prepareChartData(); // âœ… ADD this here!\n    });\n  }\n};\n\n__decorate([ViewChild('donutChart')], DashboardComponent.prototype, \"donutChartRef\", void 0);\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [CommonModule, MatProgressBarModule, MatIconModule, MatButtonModule],\n  providers: [DatePipe]\n})], DashboardComponent);","map":{"version":3,"names":["Component","ViewChild","Chart","registerables","CommonModule","DatePipe","MatProgressBarModule","MatIconModule","MatButtonModule","take","register","DashboardComponent","constructor","datePipe","firestoreService","authService","refreshService","tasks","projects","totalTasks","tasksCompleted","tasksInProgress","tasksNotStarted","overdueTasks","totalProjects","projectsCompleted","projectsInProgress","projectsNotStarted","overallProgress","upcomingDeadlines","donutChartData","donutChartLabels","currentProjectName","currentProjectProgress","currentProjectDaysRemaining","showAllProjects","showAllTasks","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","calendar","ngOnInit","getUser","subscribe","user","console","log","uid","generateCalendar","loadData","refresh$","fetchData","getTasks","pipe","calculateAllSummaries","prepareUpcomingDeadlines","prepareChartData","getProjects","prepareProjectOverview","ngAfterViewInit","setTimeout","initializeDonutChart","convertToDate","date","toDate","now","length","filter","t","status","dueDate","Math","round","map","name","deadline","type","d","sort","a","b","getTime","updateDonutChart","donutChartRef","ctx","nativeElement","getContext","donutChart","destroy","data","labels","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","tooltip","enabled","p","canvas","toggleProjects","toggleTasks","firstDay","lastDay","weeks","currentWeek","startingDay","getDay","i","push","day","getDate","project","progress","__decorate","selector","templateUrl","styleUrls","standalone","imports","providers"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FirestoreService } from '../services/firestore.service';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { take } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Timestamp } from '@angular/fire/firestore';\nimport { RefreshService } from 'src/app/services/refresh.service'; // âœ… Add this if not present\n\n\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  providers: [DatePipe]\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n  @ViewChild('donutChart') donutChartRef!: ElementRef;\n\n  donutChart!: Chart;\n\n\n  tasks: Task[] = [];\n  projects: Project[] = [];\n  totalTasks = 0;\n  tasksCompleted = 0;\n  tasksInProgress = 0;\n  tasksNotStarted = 0;\n  overdueTasks = 0;\n\n  totalProjects = 0;\n  projectsCompleted = 0;\n  projectsInProgress = 0;\n  projectsNotStarted = 0;\n\n  overallProgress = 0;\n  upcomingDeadlines: { name: string; deadline: Date; type: 'Task' | 'Project' }[] = [];\n\n  donutChartData: number[] = [];\n  donutChartLabels: string[] = ['Completed', 'In Progress', 'Not Started'];\n\n\n  currentProjectName: string = 'N/A';\n  currentProjectProgress: number = 0;\n  currentProjectDaysRemaining: number = 0;\n\n  showAllProjects = false;\n  showAllTasks = false;\n  currentDate = new Date();\n  currentMonth = this.currentDate.getMonth();\n  currentYear = this.currentDate.getFullYear();\n  calendar: (Date | null)[][] = [];\n\n  constructor(private datePipe: DatePipe, private firestoreService: FirestoreService, private authService: AuthService,  private refreshService: RefreshService) {this.currentMonth = this.currentDate.getMonth();\n    this.currentYear = this.currentDate.getFullYear();}\n    ngOnInit(): void {\n      this.authService.getUser().subscribe(user => {\n        console.log('ðŸ”¥ Firebase UID:', user?.uid);\n      });\n  \n      this.generateCalendar();\n      this.loadData();\n  \n      this.refreshService.refresh$.subscribe(() => {\n        this.loadData();\n      });\n      \n    }\n  \n\n  fetchData(): void {\n    this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n      this.tasks = tasks;\n      this.calculateAllSummaries();\n      this.prepareUpcomingDeadlines();\n      this.prepareChartData();\n    });\n\n    this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n      this.projects = projects; // âœ… Use real progress value from Firestore\n\n      this.prepareProjectOverview();\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.initializeDonutChart();\n        }, 100); // Slight delay to wait for data\n  }\n  \n\n  convertToDate(date: Date | Timestamp): Date {\n    return date instanceof Date ? date : date.toDate();\n  }\n\n  calculateAllSummaries(): void {\n    const now = new Date();\n    this.totalTasks = this.tasks.length;\n    this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n    this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n    this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n    this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && this.convertToDate(t.dueDate) < now).length;\n    this.overallProgress = this.totalTasks > 0 ? Math.round((this.tasksCompleted / this.totalTasks) * 100) : 0;\n  }\n\n  prepareUpcomingDeadlines(): void {\n    this.upcomingDeadlines = this.tasks\n      .map(t => ({ name: t.name, deadline: this.convertToDate(t.dueDate), type: 'Task' as const }))\n      .filter(d => d.deadline >= new Date())\n      .sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n  }\n  prepareChartData(): void {\n    this.donutChartData = [\n      this.projectsCompleted,\n      this.projectsInProgress,\n      this.projectsNotStarted\n    ];\n  \n    this.updateDonutChart(); // âœ… Re-render\n  }\n  \n  updateDonutChart(): void {\n    if (!this.donutChartRef || this.donutChartData.length === 0) return;\n  \n    const ctx = this.donutChartRef.nativeElement.getContext('2d');\n  \n    if (this.donutChart) {\n      this.donutChart.destroy(); // âœ… Remove old chart\n    }\n  \n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Completed', 'In Progress', 'Not Started'],\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: {\n          legend: { display: false },\n          tooltip: { enabled: true }\n        }\n      }\n    });\n  }\n  \n  prepareProjectOverview(): void {\n    this.totalProjects = this.projects.length;\n    this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n    this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n    this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n  }\n\n  private initializeDonutChart() {\n    if (!this.donutChartRef || this.donutChartData.length === 0) return;\n    const canvas = this.donutChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    if (this.donutChart) this.donutChart.destroy();\n\n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: this.donutChartLabels,\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: { legend: { display: false }, tooltip: { enabled: true } }\n      }\n    });\n  }\n\n  toggleProjects(): void {\n    this.showAllProjects = !this.showAllProjects;\n  }\n\n  toggleTasks(): void {\n    this.showAllTasks = !this.showAllTasks;\n  }\n \n  generateCalendar() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1);\n    const lastDay = new Date(this.currentYear, this.currentMonth + 1, 0);\n    const weeks: (Date | null)[][] = [];\n    let currentWeek: (Date | null)[] = [];\n    const startingDay = firstDay.getDay();\n\n    for (let i = 0; i < startingDay; i++) currentWeek.push(null);\n\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      if (currentWeek.length === 7) {\n        weeks.push(currentWeek);\n        currentWeek = [];\n      }\n      currentWeek.push(new Date(this.currentYear, this.currentMonth, day));\n    }\n\n    while (currentWeek.length < 7) currentWeek.push(null);\n    weeks.push(currentWeek);\n    this.calendar = weeks;\n  }\n  loadData(): void {\n    this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n      this.tasks = tasks;\n      this.calculateAllSummaries();\n      this.prepareUpcomingDeadlines();\n      this.prepareChartData();\n    });\n\n    this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n      this.projects = projects.map(project => {\n        let progress = 0;\n        if (project.status === 'Completed') progress = 100;\n        else if (project.status === 'In Progress') progress = 50;\n        return { ...project, progress };\n      });\n      this.prepareProjectOverview(); // already exists\n      this.prepareChartData(); // âœ… ADD this here!\n    });\n    \n  }\n\n  \n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}