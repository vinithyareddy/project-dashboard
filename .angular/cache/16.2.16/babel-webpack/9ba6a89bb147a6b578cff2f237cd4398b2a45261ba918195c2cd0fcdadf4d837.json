{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nfunction AuthComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 4)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_container_15_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleConfirmVisibility());\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r0.showConfirm ? \"text\" : \"password\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle Confirm Password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.showConfirm ? \"visibility_off\" : \"visibility\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"success\": a0,\n    \"error\": a1\n  };\n};\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.errorMsg.includes(\"\\u2705\"), ctx_r1.errorMsg.includes(\"\\u274C\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMsg, \" \");\n  }\n}\nexport class AuthComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isRegisterMode = false;\n    this.errorMsg = '';\n    this.showPassword = false;\n    this.showConfirm = false;\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n  ngOnInit() {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmVisibility() {\n    this.showConfirm = !this.showConfirm;\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.authForm.invalid) return;\n      const {\n        name,\n        phone,\n        email,\n        password,\n        confirmPassword\n      } = _this.authForm.value;\n      if (_this.isRegisterMode && password !== confirmPassword) {\n        _this.errorMsg = '❌ Passwords do not match';\n        return;\n      }\n      try {\n        if (_this.isRegisterMode) {\n          yield _this.authService.registerWithProfile({\n            name,\n            phone,\n            email,\n            password\n          });\n          _this.errorMsg = '✅ Account has been created';\n        } else {\n          yield _this.authService.login(email, password);\n        }\n        _this.router.navigate(['/dashboard']);\n      } catch (err) {\n        const errorCode = err.code || '';\n        switch (errorCode) {\n          case 'auth/invalid-login-credentials':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            _this.errorMsg = '❌ Invalid Credentials';\n            break;\n          case 'auth/email-already-in-use':\n            _this.errorMsg = '❌ Email already in use';\n            break;\n          case 'auth/too-many-requests':\n            _this.errorMsg = '❌ Too many attempts. Try again later.';\n            break;\n          default:\n            _this.errorMsg = err.message || '❌ An unexpected error occurred';\n        }\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([AuthService] // ✅ Add this line to fix injection error\n      ), i0.ɵɵStandaloneFeature],\n      decls: 21,\n      vars: 9,\n      consts: [[1, \"auth-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\", \"custom-field\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"custom-input\"], [\"appearance\", \"outline\", 1, \"full-width\", \"password-field\"], [\"matInput\", \"\", \"formControlName\", \"password\", 1, \"custom-input\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"error-msg\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"], [\"mat-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 1, \"full-width\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 1, \"custom-input\", 3, \"type\"], [1, \"error-msg\", 3, \"ngClass\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 4)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 5);\n          i0.ɵɵelementStart(12, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_12_listener() {\n            return ctx.togglePasswordVisibility();\n          });\n          i0.ɵɵelementStart(13, \"mat-icon\");\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(15, AuthComponent_ng_container_15_Template, 8, 3, \"ng-container\", 7);\n          i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 2, 5, \"div\", 8);\n          i0.ɵɵelementStart(17, \"button\", 9);\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_19_listener() {\n            return ctx.toggleMode();\n          });\n          i0.ɵɵtext(20);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵattribute(\"aria-label\", \"Toggle Password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isRegisterMode ? \"Register\" : \"Login\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, i5.MatIconButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatInputModule, i7.MatInput, MatIconModule, i8.MatIcon, RouterModule],\n      styles: [\".auth-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: auto;\\n  align-items: center;\\n  padding: 6rem;\\n  background: #1e1e2f;\\n  border-radius: 12px;\\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\n}\\n.auth-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #fff;\\n  text-align: center;\\n  margin-bottom: 1.5rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 1rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%] {\\n  color: #fff;\\n}\\n.auth-container[_ngcontent-%COMP%]   .custom-input[_ngcontent-%COMP%] {\\n  color: #fff !important;\\n  caret-color: #fff !important;\\n  background-color: #2a2a3c !important;\\n}\\n.auth-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder {\\n  color: #bbb !important;\\n}\\n.auth-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  font-weight: 500;\\n  text-align: center;\\n  color: #e74c3c;\\n}\\n.auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  letter-spacing: 1px;\\n}\\n.auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #fff;\\n}\\n.auth-container[_ngcontent-%COMP%]   button.mat-raised-button[_ngcontent-%COMP%] {\\n  background-color: #5c6bc0;\\n  color: #fff;\\n}\\n.auth-container[_ngcontent-%COMP%]   button.mat-button[_ngcontent-%COMP%] {\\n  color: #fff;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  background-color: linear-gradient(to bottom right, #9266df, #b55ee1);\\n  height: 100vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMGdpdGh1YiUyMHByb2plY3RzL3Byb2plY3QtZGFzaGJvYXJkL3NyYy9hcHAvYXV0aC9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EseUNBQUE7QUNDRjtBRENFO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7QUNDSjtBREVFO0VBQ0UsV0FBQTtFQUNBLG1CQUFBO0FDQUo7QURHRTtFQUNFLFdBQUE7QUNESjtBRElFO0VBQ0Usc0JBQUE7RUFDQSw0QkFBQTtFQUNBLG9DQUFBO0FDRko7QURLRTtFQUNFLHNCQUFBO0FDSEo7QURNRTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQ0pKO0FET0U7RUFDRSxtQkFBQTtBQ0xKO0FEUUU7RUFDRSxlQUFBO0VBQ0EsV0FBQTtBQ05KO0FEU0U7RUFDRSx5QkFBQTtFQUNBLFdBQUE7QUNQSjtBRFVFO0VBQ0UsV0FBQTtBQ1JKOztBRFdBO0VBRUUsb0VBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNURiIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogNnJlbTtcbiAgYmFja2dyb3VuZDogIzFlMWUyZjsgLy8gRGFyayBiYWNrZ3JvdW5kXG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJveC1zaGFkb3c6IDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gIGgyIHtcbiAgICBjb2xvcjogI2ZmZjsgLy8gV2hpdGUgdGV4dCBmb3IgdGhlIGhlYWRlclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIH1cblxuICAuZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgfVxuXG4gIC5jdXN0b20tZmllbGQge1xuICAgIGNvbG9yOiAjZmZmOyAvLyBXaGl0ZSB0ZXh0IGZvciBpbnB1dCBmaWVsZHNcbiAgfVxuXG4gIC5jdXN0b20taW5wdXQge1xuICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7IC8vIFdoaXRlIHRleHQgZm9yIGlucHV0XG4gICAgY2FyZXQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsgLy8gV2hpdGUgY3Vyc29yXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJhMmEzYyAhaW1wb3J0YW50OyAvLyBEYXJrIGlucHV0IGJhY2tncm91bmRcbiAgfVxuXG4gIDo6cGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYmJiICFpbXBvcnRhbnQ7IC8vIExpZ2h0IGdyYXkgcGxhY2Vob2xkZXJcbiAgfVxuXG4gIC5lcnJvci1tc2cge1xuICAgIG1hcmdpbjogMTBweCAwO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjZTc0YzNjOyAvLyBSZWQgZm9yIGVycm9yIG1lc3NhZ2VzXG4gIH1cblxuICAucGFzc3dvcmQtZmllbGQgaW5wdXQge1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cblxuICAucGFzc3dvcmQtZmllbGQgbWF0LWljb24ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBjb2xvcjogI2ZmZjsgLy8gV2hpdGUgaWNvbiBjb2xvclxuICB9XG5cbiAgYnV0dG9uLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWM2YmMwOyAvLyBCdXR0b24gY29sb3JcbiAgICBjb2xvcjogI2ZmZjsgLy8gV2hpdGUgdGV4dCBmb3IgYnV0dG9uXG4gIH1cblxuICBidXR0b24ubWF0LWJ1dHRvbiB7XG4gICAgY29sb3I6ICNmZmY7IC8vIFdoaXRlIHRleHQgZm9yIHNlY29uZGFyeSBidXR0b25cbiAgfVxufVxuYm9keSB7XG4gIC8vIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjU7IC8vIExpZ2h0IGJhY2tncm91bmQgY29sb3JcbiAgYmFja2dyb3VuZC1jb2xvcjogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSByaWdodCwgIzkyNjZkZiwgI2I1NWVlMSk7IC8vIE9wdGlvbmFsIGdyYWRpZW50XG4gIGhlaWdodDogMTAwdmg7IC8vIEZ1bGwgaGVpZ2h0XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4iLCIuYXV0aC1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDZyZW07XG4gIGJhY2tncm91bmQ6ICMxZTFlMmY7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIGJveC1zaGFkb3c6IDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuLmF1dGgtY29udGFpbmVyIGgyIHtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xufVxuLmF1dGgtY29udGFpbmVyIC5mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uYXV0aC1jb250YWluZXIgLmN1c3RvbS1maWVsZCB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmF1dGgtY29udGFpbmVyIC5jdXN0b20taW5wdXQge1xuICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICBjYXJldC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmEyYTNjICFpbXBvcnRhbnQ7XG59XG4uYXV0aC1jb250YWluZXIgOjpwbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjYmJiICFpbXBvcnRhbnQ7XG59XG4uYXV0aC1jb250YWluZXIgLmVycm9yLW1zZyB7XG4gIG1hcmdpbjogMTBweCAwO1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZTc0YzNjO1xufVxuLmF1dGgtY29udGFpbmVyIC5wYXNzd29yZC1maWVsZCBpbnB1dCB7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG4uYXV0aC1jb250YWluZXIgLnBhc3N3b3JkLWZpZWxkIG1hdC1pY29uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBjb2xvcjogI2ZmZjtcbn1cbi5hdXRoLWNvbnRhaW5lciBidXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWM2YmMwO1xuICBjb2xvcjogI2ZmZjtcbn1cbi5hdXRoLWNvbnRhaW5lciBidXR0b24ubWF0LWJ1dHRvbiB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSByaWdodCwgIzkyNjZkZiwgI2I1NWVlMSk7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","RouterModule","AuthService","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","AuthComponent_ng_container_15_Template_button_click_5_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleConfirmVisibility","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","showConfirm","ɵɵattribute","ɵɵtextInterpolate","ɵɵpureFunction2","_c0","ctx_r1","errorMsg","includes","ɵɵtextInterpolate1","AuthComponent","constructor","fb","authService","router","isRegisterMode","showPassword","authForm","group","name","phone","email","required","password","minLength","confirmPassword","ngOnInit","getUser","subscribe","user","navigate","toggleMode","togglePasswordVisibility","onSubmit","_this","_asyncToGenerator","invalid","value","registerWithProfile","login","err","errorCode","code","message","ɵɵdirectiveInject","i1","FormBuilder","i2","i3","Router","selectors","standalone","features","ɵɵProvidersFeature","AuthComponent_Template_form_ngSubmit_3_listener","ctx","AuthComponent_Template_button_click_12_listener","ɵɵtemplate","AuthComponent_ng_container_15_Template","AuthComponent_div_16_Template","AuthComponent_Template_button_click_19_listener","i4","NgClass","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i5","MatButton","MatIconButton","i6","MatFormField","MatLabel","MatSuffix","i7","MatInput","i8","MatIcon","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    RouterModule\n  ],\n  providers: [AuthService] // ✅ Add this line to fix injection error\n})\nexport class AuthComponent implements OnInit {\n  authForm: FormGroup;\n  isRegisterMode = false;\n  errorMsg = '';\n  showPassword = false;\n  showConfirm = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.fb.group({\n      name: [''],\n      phone: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.authService.getUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmVisibility() {\n    this.showConfirm = !this.showConfirm;\n  }\n\n  async onSubmit() {\n    if (this.authForm.invalid) return;\n\n    const { name, phone, email, password, confirmPassword } = this.authForm.value;\n\n    if (this.isRegisterMode && password !== confirmPassword) {\n      this.errorMsg = '❌ Passwords do not match';\n      return;\n    }\n\n    try {\n      if (this.isRegisterMode) {\n        await this.authService.registerWithProfile({ name, phone, email, password });\n        this.errorMsg = '✅ Account has been created';\n      } else {\n        await this.authService.login(email, password);\n      }\n      this.router.navigate(['/dashboard']);\n    } catch (err: any) {\n      const errorCode = err.code || '';\n      switch (errorCode) {\n        case 'auth/invalid-login-credentials':\n        case 'auth/user-not-found':\n        case 'auth/wrong-password':\n          this.errorMsg = '❌ Invalid Credentials';\n          break;\n        case 'auth/email-already-in-use':\n          this.errorMsg = '❌ Email already in use';\n          break;\n        case 'auth/too-many-requests':\n          this.errorMsg = '❌ Too many attempts. Try again later.';\n          break;\n        default:\n          this.errorMsg = err.message || '❌ An unexpected error occurred';\n      }\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <h2>{{ isRegisterMode ? 'Register' : 'Login' }}</h2>\n\n  <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field appearance=\"outline\" class=\"full-width custom-field\">\n      <mat-label>Email</mat-label>\n      <input matInput formControlName=\"email\" type=\"email\" class=\"custom-input\" />\n    </mat-form-field>\n  \n    <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n      <mat-label>Password</mat-label>\n      <input matInput class=\"custom-input\" [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" />\n      <button mat-icon-button matSuffix type=\"button\" (click)=\"togglePasswordVisibility()\" [attr.aria-label]=\"'Toggle Password'\">\n        <mat-icon>{{ showPassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n      </button>\n    </mat-form-field>\n  \n    <ng-container *ngIf=\"isRegisterMode\">\n      <mat-form-field appearance=\"outline\" class=\"full-width password-field\">\n        <mat-label>Confirm Password</mat-label>\n        <input matInput class=\"custom-input\" [type]=\"showConfirm ? 'text' : 'password'\" formControlName=\"confirmPassword\" />\n        <button mat-icon-button matSuffix type=\"button\" (click)=\"toggleConfirmVisibility()\" [attr.aria-label]=\"'Toggle Confirm Password'\">\n          <mat-icon>{{ showConfirm ? 'visibility_off' : 'visibility' }}</mat-icon>\n        </button>\n      </mat-form-field>\n    </ng-container>\n  \n    <div *ngIf=\"errorMsg\" class=\"error-msg\" [ngClass]=\"{ 'success': errorMsg.includes('✅'), 'error': errorMsg.includes('❌') }\">\n      {{ errorMsg }}\n    </div>\n  \n    <button mat-raised-button color=\"primary\" class=\"full-width\" type=\"submit\">\n      {{ isRegisterMode ? 'Register' : 'Login' }}\n    </button>\n  \n    <button mat-button color=\"accent\" class=\"full-width\" type=\"button\" (click)=\"toggleMode()\">\n      Switch to {{ isRegisterMode ? 'Login' : 'Register' }}\n    </button>\n  </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}