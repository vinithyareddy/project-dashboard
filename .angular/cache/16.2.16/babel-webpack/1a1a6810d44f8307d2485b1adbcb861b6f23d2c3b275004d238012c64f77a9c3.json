{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.teamMembers = ['John', 'Alice', 'Bob', 'Jones', 'James', 'Bobby', 'Betty', 'Veronica', 'Charles', 'Cheryl', 'Archie', 'Abhigail'];\n    // Data for Task Status\n    this.taskStatus = [{\n      name: 'Task 1',\n      status: 'Completed',\n      dueDate: new Date('2025-01-10')\n    }, {\n      name: 'Task 2',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-12')\n    }, {\n      name: 'Task 3',\n      status: 'Completed',\n      dueDate: new Date('2025-03-15')\n    }, {\n      name: 'Task 4',\n      status: 'Completed',\n      dueDate: new Date('2025-02-11')\n    }, {\n      name: 'Task 5',\n      status: 'Completed',\n      dueDate: new Date('2025-01-18')\n    }, {\n      name: 'Task 6',\n      status: 'Completed',\n      dueDate: new Date('2025-02-21')\n    }, {\n      name: 'Task 7',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-30')\n    }, {\n      name: 'Task 8',\n      status: 'Completed',\n      dueDate: new Date('2025-03-29')\n    }, {\n      name: 'Task 9',\n      status: 'Completed',\n      dueDate: new Date('2025-02-23')\n    }, {\n      name: 'Task 10',\n      status: 'Completed',\n      dueDate: new Date('2025-04-06')\n    }, {\n      name: 'Task 11',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-17')\n    }, {\n      name: 'Task 12',\n      status: 'Completed',\n      dueDate: new Date('2025-03-25')\n    }, {\n      name: 'Task 13',\n      status: 'Completed',\n      dueDate: new Date('2025-03-30')\n    }, {\n      name: 'Task 14',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-29')\n    }, {\n      name: 'Task 15',\n      status: 'Completed',\n      dueDate: new Date('2025-04-01')\n    }, {\n      name: 'Task 16',\n      status: 'Completed',\n      dueDate: new Date('2025-01-06')\n    }, {\n      name: 'Task 17',\n      status: 'Completed',\n      dueDate: new Date('2025-02-17')\n    }, {\n      name: 'Task 18',\n      status: 'Completed',\n      dueDate: new Date('2025-02-25')\n    }, {\n      name: 'Task 19',\n      status: 'Completed',\n      dueDate: new Date('2025-04-10')\n    }, {\n      name: 'Task 20',\n      status: 'Completed',\n      dueDate: new Date('2025-03-12')\n    }, {\n      name: 'Task 21',\n      status: 'Completed',\n      dueDate: new Date('2025-02-15')\n    }, {\n      name: 'Task 22',\n      status: 'Completed',\n      dueDate: new Date('2025-03-11')\n    }, {\n      name: 'Task 23',\n      status: 'Completed',\n      dueDate: new Date('2025-01-18')\n    }, {\n      name: 'Task 24',\n      status: 'Completed',\n      dueDate: new Date('2025-03-21')\n    }, {\n      name: 'Task 25',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-17')\n    }, {\n      name: 'Task 26',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-25')\n    }, {\n      name: 'Task 27',\n      status: 'Completed',\n      dueDate: new Date('2025-03-10')\n    }, {\n      name: 'Task 28',\n      status: 'Completed',\n      dueDate: new Date('2025-03-12')\n    }, {\n      name: 'Task 29',\n      status: 'Completed',\n      dueDate: new Date('2025-02-15')\n    }, {\n      name: 'Task 30',\n      status: 'Completed',\n      dueDate: new Date('2025-01-11')\n    }, {\n      name: 'Task 31',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-18')\n    }, {\n      name: 'Task 32',\n      status: 'Completed',\n      dueDate: new Date('2025-03-21')\n    }, {\n      name: 'Task 33',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-23')\n    }, {\n      name: 'Task 34',\n      status: 'Completed',\n      dueDate: new Date('2025-04-06')\n    }, {\n      name: 'Task 35',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-17')\n    }, {\n      name: 'Task 36',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-25')\n    }, {\n      name: 'Task 37',\n      status: 'Completed',\n      dueDate: new Date('2025-03-30')\n    }, {\n      name: 'Task 38',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-29')\n    }, {\n      name: 'Task 39',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-23')\n    }, {\n      name: 'Task 40',\n      status: 'Completed',\n      dueDate: new Date('2025-01-06')\n    }, {\n      name: 'Task 41',\n      status: 'Completed',\n      dueDate: new Date('2025-01-17')\n    }, {\n      name: 'Task 42',\n      status: 'Completed',\n      dueDate: new Date('2025-01-25')\n    }, {\n      name: 'Task 43',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-10')\n    }, {\n      name: 'Task 44',\n      status: 'Completed',\n      dueDate: new Date('2025-02-10')\n    }, {\n      name: 'Task 45',\n      status: 'Completed',\n      dueDate: new Date('2025-03-12')\n    }, {\n      name: 'Task 46',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-15')\n    }, {\n      name: 'Task 47',\n      status: 'Completed',\n      dueDate: new Date('2025-01-11')\n    }, {\n      name: 'Task 48',\n      status: 'Completed',\n      dueDate: new Date('2025-02-18')\n    }, {\n      name: 'Task 49',\n      status: 'Completed',\n      dueDate: new Date('2025-01-21')\n    }, {\n      name: 'Task 50',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-30')\n    }, {\n      name: 'Task 51',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-29')\n    }, {\n      name: 'Task 52',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-23')\n    }, {\n      name: 'Task 53',\n      status: 'Completed',\n      dueDate: new Date('2025-03-06')\n    }, {\n      name: 'Task 54',\n      status: 'Completed',\n      dueDate: new Date('2025-03-17')\n    }, {\n      name: 'Task 55',\n      status: 'Completed',\n      dueDate: new Date('2025-02-25')\n    }, {\n      name: 'Task 56',\n      status: 'Completed',\n      dueDate: new Date('2025-01-10')\n    }, {\n      name: 'Task 57',\n      status: 'Completed',\n      dueDate: new Date('2025-03-12')\n    }, {\n      name: 'Task 58',\n      status: 'Completed',\n      dueDate: new Date('2025-02-15')\n    }, {\n      name: 'Task 59',\n      status: 'In Progress',\n      dueDate: new Date('2025-04-11')\n    }, {\n      name: 'Task 60',\n      status: 'Completed',\n      dueDate: new Date('2025-01-18')\n    }, {\n      name: 'Task 61',\n      status: 'Not Started',\n      dueDate: new Date('2025-04-21')\n    }];\n    // Dynamic Task Summary Variables\n    this.totalTasks = 0;\n    this.tasksCompleted = 0;\n    this.overdueTasks = 0;\n    // Task Completion Percentage\n    this.progress = 0;\n    // Task Status Filtered Data\n    this.filteredTasks = [...this.taskStatus];\n    this.selectedStatus = 'All';\n    // Team Performance Data\n    this.teamData = [{\n      member: 'John',\n      tasksAssigned: 6,\n      tasksCompleted: 5\n    }, {\n      member: 'Alice',\n      tasksAssigned: 5,\n      tasksCompleted: 4\n    }, {\n      member: 'Bob',\n      tasksAssigned: 5,\n      tasksCompleted: 4\n    }, {\n      member: 'Jones',\n      tasksAssigned: 5,\n      tasksCompleted: 4\n    }, {\n      member: 'James',\n      tasksAssigned: 5,\n      tasksCompleted: 4\n    }, {\n      member: 'Bobby',\n      tasksAssigned: 5,\n      tasksCompleted: 4\n    }, {\n      member: 'Betty',\n      tasksAssigned: 4,\n      tasksCompleted: 2\n    }, {\n      member: 'Veronica',\n      tasksAssigned: 4,\n      tasksCompleted: 1\n    }, {\n      member: 'Charles',\n      tasksAssigned: 5,\n      tasksCompleted: 2\n    }, {\n      member: 'Cheryl',\n      tasksAssigned: 5,\n      tasksCompleted: 5\n    }, {\n      member: 'Archie',\n      tasksAssigned: 6,\n      tasksCompleted: 3\n    }, {\n      member: 'Abhigail',\n      tasksAssigned: 6,\n      tasksCompleted: 4\n    }];\n    // Filtered Team Data\n    this.filteredTeamData = [...this.teamData];\n    this.selectedTeamMember = 'All';\n    // Upcoming Deadlines\n    this.upcomingDeadlines = [{\n      name: 'Task 2',\n      deadline: '2025-04-11'\n    }, {\n      name: 'Task 7',\n      deadline: '2025-04-29'\n    }, {\n      name: 'Task 11',\n      deadline: '2025-04-16'\n    }, {\n      name: 'Task 14',\n      deadline: '2025-04-28'\n    }, {\n      name: 'Task 25',\n      deadline: '2025-04-16'\n    }, {\n      name: 'Task 26',\n      deadline: '2025-04-24'\n    }, {\n      name: 'Task 31',\n      deadline: '2025-04-17'\n    }, {\n      name: 'Task 33',\n      deadline: '2025-04-22'\n    }, {\n      name: 'Task 35',\n      deadline: '2025-04-16'\n    }, {\n      name: 'Task 36',\n      deadline: '2025-04-24'\n    }, {\n      name: 'Task 38',\n      deadline: '2025-04-28'\n    }, {\n      name: 'Task 39',\n      deadline: '2025-04-22'\n    }, {\n      name: 'Task 43',\n      deadline: '2025-04-09'\n    }, {\n      name: 'Task 46',\n      deadline: '2025-04-14'\n    }, {\n      name: 'Task 50',\n      deadline: '2025-04-29'\n    }, {\n      name: 'Task 51',\n      deadline: '2025-04-28'\n    }, {\n      name: 'Task 52',\n      deadline: '2025-04-22'\n    }, {\n      name: 'Task 59',\n      deadline: '2025-04-10'\n    }, {\n      name: 'Task 61',\n      deadline: '2025-04-20'\n    }];\n    // Filtered Deadlines\n    this.filteredDeadlines = [...this.upcomingDeadlines];\n    this.selectedDeadline = 'All';\n    // For Pagination\n    this.taskStatusLimit = 6;\n    this.teamPerformanceLimit = 6;\n    this.upcomingDeadlinesLimit = 6;\n    this.showMoreTaskStatus = true;\n    this.showMoreTeamPerformance = true;\n    this.showMoreUpcomingDeadlines = true;\n    // Columns for task status table\n    // Columns for task status table\n    this.displayedColumns = ['task', 'status'];\n    // Columns for team performance table\n    this.displayedColumnsTeam = ['member', 'tasksAssigned', 'tasksCompleted'];\n    // Columns for upcoming deadlines table\n    this.displayedColumnsDeadlines = ['task', 'deadline'];\n  }\n  ngOnInit() {\n    this.calculateTaskSummary();\n  }\n  // Calculate task summary dynamically based on task data\n  calculateTaskSummary() {\n    this.totalTasks = this.taskStatus.length;\n    this.tasksCompleted = this.taskStatus.filter(task => task.status === 'Completed').length;\n    const currentDate = new Date();\n    this.overdueTasks = this.taskStatus.filter(task => task.dueDate < currentDate && task.status !== 'Completed').length;\n    this.progress = this.tasksCompleted / this.totalTasks * 100;\n  }\n  // Load More functionality for Task Status Table\n  loadMoreTaskStatus() {\n    this.taskStatusLimit += 6;\n    if (this.taskStatusLimit >= this.taskStatus.length) {\n      this.showMoreTaskStatus = false;\n    }\n  }\n  // Load More functionality for Team Performance Table\n  loadMoreTeamPerformance() {\n    this.teamPerformanceLimit += 6;\n    if (this.teamPerformanceLimit >= this.teamData.length) {\n      this.showMoreTeamPerformance = false;\n    }\n  }\n  // Load More functionality for Upcoming Deadlines Table\n  loadMoreUpcomingDeadlines() {\n    this.upcomingDeadlinesLimit += 6;\n    if (this.upcomingDeadlinesLimit >= this.upcomingDeadlines.length) {\n      this.showMoreUpcomingDeadlines = false;\n    }\n  }\n  // Show Less functionality for Task Status Table\n  showLessTaskStatus() {\n    this.taskStatusLimit = 6;\n    this.showMoreTaskStatus = true;\n  }\n  // Show Less functionality for Team Performance Table\n  showLessTeamPerformance() {\n    this.teamPerformanceLimit = 6;\n    this.showMoreTeamPerformance = true;\n  }\n  // Show Less functionality for Upcoming Deadlines Table\n  showLessUpcomingDeadlines() {\n    this.upcomingDeadlinesLimit = 6;\n    this.showMoreUpcomingDeadlines = true;\n  }\n  // Filter tasks based on selected status\n  filterTasks(status) {\n    if (status === 'All') {\n      this.filteredTasks = [...this.taskStatus];\n    } else {\n      this.filteredTasks = this.taskStatus.filter(task => task.status === status);\n    }\n  }\n  // Filter team performance by member\n  filterTeamMember(member) {\n    if (member === 'All') {\n      this.filteredTeamData = [...this.teamData];\n    } else {\n      this.filteredTeamData = this.teamData.filter(team => team.member === member);\n    }\n  }\n  // Filter upcoming deadlines by date\n  filterDeadlines(date) {\n    if (date === 'All') {\n      this.filteredDeadlines = [...this.upcomingDeadlines];\n    } else {\n      this.filteredDeadlines = this.upcomingDeadlines.filter(deadline => deadline.deadline === date);\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","teamMembers","taskStatus","name","status","dueDate","Date","totalTasks","tasksCompleted","overdueTasks","progress","filteredTasks","selectedStatus","teamData","member","tasksAssigned","filteredTeamData","selectedTeamMember","upcomingDeadlines","deadline","filteredDeadlines","selectedDeadline","taskStatusLimit","teamPerformanceLimit","upcomingDeadlinesLimit","showMoreTaskStatus","showMoreTeamPerformance","showMoreUpcomingDeadlines","displayedColumns","displayedColumnsTeam","displayedColumnsDeadlines","ngOnInit","calculateTaskSummary","length","filter","task","currentDate","loadMoreTaskStatus","loadMoreTeamPerformance","loadMoreUpcomingDeadlines","showLessTaskStatus","showLessTeamPerformance","showLessUpcomingDeadlines","filterTasks","filterTeamMember","team","filterDeadlines","date","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  teamMembers: string[] = ['John', 'Alice', 'Bob', 'Jones', 'James', 'Bobby', 'Betty', 'Veronica', 'Charles', 'Cheryl', 'Archie', 'Abhigail'];\n  // Data for Task Status\n  taskStatus = [\n    { name: 'Task 1', status: 'Completed', dueDate: new Date('2025-01-10') },\n    { name: 'Task 2', status: 'In Progress', dueDate: new Date('2025-04-12') },\n    { name: 'Task 3', status: 'Completed',  dueDate: new Date('2025-03-15') },\n    { name: 'Task 4', status: 'Completed',  dueDate: new Date('2025-02-11') },\n    { name: 'Task 5', status: 'Completed', dueDate: new Date('2025-01-18') },\n    { name: 'Task 6', status: 'Completed', dueDate: new Date('2025-02-21') },\n    { name: 'Task 7', status: 'In Progress', dueDate: new Date('2025-04-30') },\n    { name: 'Task 8', status: 'Completed', dueDate: new Date('2025-03-29') },\n    { name: 'Task 9', status: 'Completed', dueDate: new Date('2025-02-23') },\n    { name: 'Task 10', status: 'Completed', dueDate: new Date('2025-04-06') },\n    { name: 'Task 11', status: 'In Progress', dueDate: new Date('2025-04-17') },\n    { name: 'Task 12', status: 'Completed', dueDate: new Date('2025-03-25') },\n    { name: 'Task 13', status: 'Completed', dueDate: new Date('2025-03-30') },\n    { name: 'Task 14', status: 'In Progress', dueDate: new Date('2025-04-29') },\n    { name: 'Task 15', status: 'Completed', dueDate: new Date('2025-04-01') },\n    { name: 'Task 16', status: 'Completed', dueDate: new Date('2025-01-06') },\n    { name: 'Task 17', status: 'Completed', dueDate: new Date('2025-02-17') },\n    { name: 'Task 18', status: 'Completed', dueDate: new Date('2025-02-25') },\n    { name: 'Task 19', status: 'Completed', dueDate: new Date('2025-04-10') },\n    { name: 'Task 20', status: 'Completed', dueDate: new Date('2025-03-12') },\n    { name: 'Task 21', status: 'Completed', dueDate: new Date('2025-02-15') },\n    { name: 'Task 22', status: 'Completed', dueDate: new Date('2025-03-11') },\n    { name: 'Task 23', status: 'Completed', dueDate: new Date('2025-01-18') },\n    { name: 'Task 24', status: 'Completed', dueDate: new Date('2025-03-21') },\n    { name: 'Task 25', status: 'In Progress', dueDate: new Date('2025-04-17') },\n    { name: 'Task 26', status: 'Not Started', dueDate: new Date('2025-04-25') },\n    { name: 'Task 27', status: 'Completed', dueDate: new Date('2025-03-10') },\n    { name: 'Task 28', status: 'Completed', dueDate: new Date('2025-03-12') },\n    { name: 'Task 29', status: 'Completed', dueDate: new Date('2025-02-15') },\n    { name: 'Task 30', status: 'Completed', dueDate: new Date('2025-01-11') },\n    { name: 'Task 31', status: 'Not Started', dueDate: new Date('2025-04-18') },\n    { name: 'Task 32', status: 'Completed', dueDate: new Date('2025-03-21') },\n    { name: 'Task 33', status: 'Not Started', dueDate: new Date('2025-04-23') },\n    { name: 'Task 34', status: 'Completed', dueDate: new Date('2025-04-06') },\n    { name: 'Task 35', status: 'In Progress', dueDate: new Date('2025-04-17') },\n    { name: 'Task 36', status: 'Not Started', dueDate: new Date('2025-04-25') },\n    { name: 'Task 37', status: 'Completed', dueDate: new Date('2025-03-30') },\n    { name: 'Task 38', status: 'Not Started', dueDate: new Date('2025-04-29') },\n    { name: 'Task 39', status: 'Not Started', dueDate: new Date('2025-04-23') },\n    { name: 'Task 40', status: 'Completed', dueDate: new Date('2025-01-06') },\n    { name: 'Task 41', status: 'Completed', dueDate: new Date('2025-01-17') },\n    { name: 'Task 42', status: 'Completed', dueDate: new Date('2025-01-25') },\n    { name: 'Task 43', status: 'In Progress', dueDate: new Date('2025-04-10') },\n    { name: 'Task 44', status: 'Completed', dueDate: new Date('2025-02-10') },\n    { name: 'Task 45', status: 'Completed', dueDate: new Date('2025-03-12') },\n    { name: 'Task 46', status: 'Not Started', dueDate: new Date('2025-04-15') },\n    { name: 'Task 47', status: 'Completed', dueDate: new Date('2025-01-11') },\n    { name: 'Task 48', status: 'Completed', dueDate: new Date('2025-02-18') },\n    { name: 'Task 49', status: 'Completed', dueDate: new Date('2025-01-21') },\n    { name: 'Task 50', status: 'Not Started', dueDate: new Date('2025-04-30') },\n    { name: 'Task 51', status: 'Not Started', dueDate: new Date('2025-04-29') },\n    { name: 'Task 52', status: 'In Progress', dueDate: new Date('2025-04-23') },\n    { name: 'Task 53', status: 'Completed', dueDate: new Date('2025-03-06') },\n    { name: 'Task 54', status: 'Completed', dueDate: new Date('2025-03-17') },\n    { name: 'Task 55', status: 'Completed', dueDate: new Date('2025-02-25') },\n    { name: 'Task 56', status: 'Completed', dueDate: new Date('2025-01-10') },\n    { name: 'Task 57', status: 'Completed', dueDate: new Date('2025-03-12') },\n    { name: 'Task 58', status: 'Completed', dueDate: new Date('2025-02-15') },\n    { name: 'Task 59', status: 'In Progress', dueDate: new Date('2025-04-11') },\n    { name: 'Task 60', status: 'Completed', dueDate: new Date('2025-01-18') },\n    { name: 'Task 61', status: 'Not Started', dueDate: new Date('2025-04-21') },\n  ];\n\n  // Dynamic Task Summary Variables\n  totalTasks: number = 0;\n  tasksCompleted: number = 0;\n  overdueTasks: number = 0;\n\n  // Task Completion Percentage\n  progress: number = 0;\n\n  // Task Status Filtered Data\n  filteredTasks = [...this.taskStatus];\n  selectedStatus = 'All';\n\n  // Team Performance Data\n  teamData = [\n    { member: 'John', tasksAssigned: 6, tasksCompleted: 5 },\n    { member: 'Alice', tasksAssigned: 5, tasksCompleted: 4 },\n    { member: 'Bob', tasksAssigned: 5, tasksCompleted: 4 },\n    { member: 'Jones', tasksAssigned: 5, tasksCompleted: 4 },\n    { member: 'James', tasksAssigned: 5, tasksCompleted: 4 },\n    { member: 'Bobby', tasksAssigned: 5, tasksCompleted: 4 },\n    { member: 'Betty', tasksAssigned: 4, tasksCompleted: 2 },\n    { member: 'Veronica', tasksAssigned: 4, tasksCompleted: 1 },\n    { member: 'Charles', tasksAssigned: 5, tasksCompleted: 2 },\n    { member: 'Cheryl', tasksAssigned: 5, tasksCompleted: 5 },\n    { member: 'Archie', tasksAssigned: 6, tasksCompleted: 3 },\n    { member: 'Abhigail', tasksAssigned: 6, tasksCompleted: 4 }\n  ];\n\n  // Filtered Team Data\n  filteredTeamData = [...this.teamData];\n  selectedTeamMember = 'All';\n\n  // Upcoming Deadlines\n  upcomingDeadlines = [\n    { name: 'Task 2', deadline: '2025-04-11' },\n        { name: 'Task 7', deadline: '2025-04-29' },\n        { name: 'Task 11', deadline: '2025-04-16' },\n        { name: 'Task 14', deadline: '2025-04-28' },\n        { name: 'Task 25', deadline: '2025-04-16' },\n        { name: 'Task 26', deadline: '2025-04-24' },\n        { name: 'Task 31', deadline: '2025-04-17' },\n        { name: 'Task 33', deadline: '2025-04-22' },\n        { name: 'Task 35', deadline: '2025-04-16' },\n        { name: 'Task 36', deadline: '2025-04-24' },\n        { name: 'Task 38', deadline: '2025-04-28' },\n        { name: 'Task 39', deadline: '2025-04-22' },\n        { name: 'Task 43', deadline: '2025-04-09' },\n        { name: 'Task 46', deadline: '2025-04-14' },\n        { name: 'Task 50', deadline: '2025-04-29' },\n        { name: 'Task 51', deadline: '2025-04-28' },\n        { name: 'Task 52', deadline: '2025-04-22' },\n        { name: 'Task 59', deadline: '2025-04-10' },\n        { name: 'Task 61', deadline: '2025-04-20' },\n  ];\n\n  // Filtered Deadlines\n  filteredDeadlines = [...this.upcomingDeadlines];\n  selectedDeadline = 'All';\n\n  // For Pagination\n  taskStatusLimit = 6;\n  teamPerformanceLimit = 6;\n  upcomingDeadlinesLimit = 6;\n\n  showMoreTaskStatus = true;\n  showMoreTeamPerformance = true;\n  showMoreUpcomingDeadlines = true;\n\n  // Columns for task status table\n  // Columns for task status table\n  displayedColumns: string[] = ['task', 'status'];\n\n  // Columns for team performance table\n  displayedColumnsTeam: string[] = ['member', 'tasksAssigned', 'tasksCompleted'];\n\n  // Columns for upcoming deadlines table\n  displayedColumnsDeadlines: string[] = ['task', 'deadline'];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.calculateTaskSummary();\n  }\n\n  // Calculate task summary dynamically based on task data\n  calculateTaskSummary() {\n    this.totalTasks = this.taskStatus.length;\n    this.tasksCompleted = this.taskStatus.filter(task => task.status === 'Completed').length;\n    const currentDate = new Date();\n    this.overdueTasks = this.taskStatus.filter(task => task.dueDate < currentDate && task.status !== 'Completed').length;\n    this.progress = (this.tasksCompleted / this.totalTasks) * 100;\n  }\n\n  // Load More functionality for Task Status Table\n  loadMoreTaskStatus() {\n    this.taskStatusLimit += 6;\n    if (this.taskStatusLimit >= this.taskStatus.length) {\n      this.showMoreTaskStatus = false;\n    }\n  }\n\n  // Load More functionality for Team Performance Table\n  loadMoreTeamPerformance() {\n    this.teamPerformanceLimit += 6;\n    if (this.teamPerformanceLimit >= this.teamData.length) {\n      this.showMoreTeamPerformance = false;\n    }\n  }\n\n  // Load More functionality for Upcoming Deadlines Table\n  loadMoreUpcomingDeadlines() {\n    this.upcomingDeadlinesLimit += 6;\n    if (this.upcomingDeadlinesLimit >= this.upcomingDeadlines.length) {\n      this.showMoreUpcomingDeadlines = false;\n    }\n  }\n\n  // Show Less functionality for Task Status Table\n  showLessTaskStatus() {\n    this.taskStatusLimit = 6;\n    this.showMoreTaskStatus = true;\n  }\n\n  // Show Less functionality for Team Performance Table\n  showLessTeamPerformance() {\n    this.teamPerformanceLimit = 6;\n    this.showMoreTeamPerformance = true;\n  }\n\n  // Show Less functionality for Upcoming Deadlines Table\n  showLessUpcomingDeadlines() {\n    this.upcomingDeadlinesLimit = 6;\n    this.showMoreUpcomingDeadlines = true;\n  }\n\n  // Filter tasks based on selected status\n  filterTasks(status: string): void {\n    if (status === 'All') {\n      this.filteredTasks = [...this.taskStatus];\n    } else {\n      this.filteredTasks = this.taskStatus.filter(task => task.status === status);\n    }\n  }\n\n  // Filter team performance by member\n  filterTeamMember(member: string): void {\n    if (member === 'All') {\n      this.filteredTeamData = [...this.teamData];\n    } else {\n      this.filteredTeamData = this.teamData.filter(team => team.member === member);\n    }\n  }\n\n  // Filter upcoming deadlines by date\n  filterDeadlines(date: string): void {\n    if (date === 'All') {\n      this.filteredDeadlines = [...this.upcomingDeadlines];\n    } else {\n      this.filteredDeadlines = this.upcomingDeadlines.filter(deadline => deadline.deadline === date);\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}