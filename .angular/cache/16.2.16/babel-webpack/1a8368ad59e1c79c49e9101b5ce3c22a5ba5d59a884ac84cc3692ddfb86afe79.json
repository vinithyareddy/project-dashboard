{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TeamsComponent_div_13_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const email_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(email_r3);\n  }\n}\nfunction TeamsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"div\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 12);\n    i0.ɵɵelement(4, \"path\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"div\", 14)(6, \"div\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 16);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 17)(11, \"div\", 18);\n    i0.ɵɵtemplate(12, TeamsComponent_div_13_div_12_Template, 2, 1, \"div\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 20);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 21)(16, \"button\", 22);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(17, \"svg\", 23);\n    i0.ɵɵelement(18, \"path\", 24);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const member_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", member_r1.avatarColor);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(member_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r1.role);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", member_r1.emails);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r1.role);\n  }\n}\nexport class TeamsComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.teamMembers = [\n    // Added IDs\n    {\n      id: 1,\n      name: 'Alice Smith',\n      role: 'Designer',\n      emails: ['alice@smith.com', 'alice.personal@email.com'],\n      avatarColor: '#4361ee'\n    }, {\n      id: 2,\n      name: 'Bob Johnson',\n      role: 'Developer',\n      emails: ['bob.j@company.dev'],\n      avatarColor: '#7209b7'\n    }, {\n      id: 3,\n      name: 'Carol Williams',\n      role: 'Manager',\n      emails: ['carol.w@org.net'],\n      avatarColor: '#4cc9f0'\n    }, {\n      id: 4,\n      name: 'David Brown',\n      role: 'Developer',\n      emails: ['david.brown@company.dev', 'db@personal.io'],\n      avatarColor: '#ef4444'\n    }];\n    this.filteredTeamMembers = [];\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.nextId = 5;\n    // Filter properties\n    this.roleList = [];\n    this.filterName = '';\n    this.selectedRole = 'All';\n  }\n  ngOnInit() {\n    this.teamMemberForm = this.fb.group({\n      name: ['', Validators.required],\n      role: ['', Validators.required],\n      emails: [''],\n      avatarColor: [this.getRandomColor()] // Example: Assign random color\n    });\n\n    this.updateRoleList();\n    this.applyFilters(); // Initial load\n    console.log('Teams component initialized');\n  }\n  updateRoleList() {\n    const roles = new Set(this.teamMembers.map(member => member.role));\n    this.roleList = ['All', ...Array.from(roles).sort()];\n  }\n  applyFilters() {\n    let tempMembers = [...this.teamMembers];\n    // Filter by Name (case-insensitive)\n    if (this.filterName) {\n      const filterLower = this.filterName.toLowerCase();\n      tempMembers = tempMembers.filter(member => member.name.toLowerCase().includes(filterLower));\n    }\n    // Filter by Role\n    if (this.selectedRole && this.selectedRole !== 'All') {\n      tempMembers = tempMembers.filter(member => member.role === this.selectedRole);\n    }\n    this.filteredTeamMembers = tempMembers;\n  }\n  clearNameFilter() {\n    this.filterName = '';\n    this.applyFilters();\n  }\n  // --- CRUD Methods ---\n  showAddMemberForm() {\n    this.isEditing = true;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({\n      avatarColor: this.getRandomColor()\n    });\n    // TODO: Handle email input/editing if needed\n  }\n\n  editMember(member) {\n    this.isEditing = true;\n    this.editingMemberId = member.id;\n    this.teamMemberForm.patchValue({\n      name: member.name,\n      role: member.role,\n      // emails: member.emails.join(', '), // Example: Join emails for editing?\n      avatarColor: member.avatarColor\n    });\n    // TODO: Handle email input/editing if needed\n  }\n\n  saveMember() {\n    if (this.teamMemberForm.invalid) {\n      return;\n    }\n    const formValue = this.teamMemberForm.value;\n    // TODO: Handle email parsing/saving if edited\n    // const emails = formValue.emails?.split(',').map((e: string) => e.trim()).filter((e: string) => e) || [];\n    if (this.editingMemberId !== null) {\n      // Update\n      const index = this.teamMembers.findIndex(m => m.id === this.editingMemberId);\n      if (index > -1) {\n        this.teamMembers[index] = {\n          ...this.teamMembers[index],\n          name: formValue.name,\n          role: formValue.role,\n          avatarColor: formValue.avatarColor\n          // emails: emails // Update emails if handled\n        };\n      }\n    } else {\n      // Add\n      const newMember = {\n        id: this.nextId++,\n        name: formValue.name,\n        role: formValue.role,\n        avatarColor: formValue.avatarColor,\n        emails: [] // Start with empty emails or parse from form\n        // emails: emails\n      };\n\n      this.teamMembers.push(newMember);\n    }\n    this.updateRoleList();\n    this.applyFilters();\n    this.cancelEdit();\n  }\n  // Updated delete method\n  deleteTeamMember(memberId) {\n    this.teamMembers = this.teamMembers.filter(m => m.id !== memberId);\n    if (this.editingMemberId === memberId) {\n      this.cancelEdit();\n    }\n    this.updateRoleList();\n    this.applyFilters();\n  }\n  cancelEdit() {\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({\n      avatarColor: this.getRandomColor()\n    });\n  }\n  // Helper to get a random color for new members\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  static {\n    this.ɵfac = function TeamsComponent_Factory(t) {\n      return new (t || TeamsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TeamsComponent,\n      selectors: [[\"app-teams\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 1,\n      consts: [[1, \"teams-container\"], [1, \"team-table\"], [1, \"table-header\"], [1, \"header-cell\", \"name-cell\"], [1, \"header-cell\", \"email-cell\"], [1, \"header-cell\", \"role-cell\"], [1, \"header-cell\", \"actions-cell\"], [1, \"table-body\"], [\"class\", \"table-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-row\"], [1, \"table-cell\", \"name-cell\"], [1, \"member-avatar\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\"], [\"d\", \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\", \"fill\", \"currentColor\"], [1, \"member-info\"], [1, \"member-name\"], [1, \"member-role\"], [1, \"table-cell\", \"email-cell\"], [1, \"email-list\"], [\"class\", \"email\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-cell\", \"role-cell\"], [1, \"table-cell\", \"actions-cell\"], [1, \"delete-btn\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\"], [\"d\", \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"email\"]],\n      template: function TeamsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Team Members\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 4);\n          i0.ɵɵtext(8, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 5);\n          i0.ɵɵtext(10, \"Role\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 7);\n          i0.ɵɵtemplate(13, TeamsComponent_div_13_Template, 19, 6, \"div\", 8);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.teamMembers);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\".teams-container[_ngcontent-%COMP%] {\\n  padding: 2rem;\\n  color: #ffffff;\\n}\\n.teams-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  font-weight: 500;\\n  margin-bottom: 2rem;\\n}\\n\\n.team-table[_ngcontent-%COMP%] {\\n  background: #1a1d25;\\n  border-radius: 12px;\\n  overflow: hidden;\\n  border: 1px solid #2a2d35;\\n}\\n\\n.table-header[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 1fr 60px;\\n  padding: 1rem 1.5rem;\\n  background: #1a1d25;\\n  border-bottom: 1px solid #2a2d35;\\n}\\n.table-header[_ngcontent-%COMP%]   .header-cell[_ngcontent-%COMP%] {\\n  color: #a0aec0;\\n  font-size: 0.9rem;\\n  font-weight: 500;\\n}\\n\\n.table-body[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 1fr 60px;\\n  padding: 1rem 1.5rem;\\n  align-items: center;\\n  border-bottom: 1px solid #2a2d35;\\n  transition: background-color 0.2s ease;\\n}\\n.table-body[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n}\\n.table-body[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.name-cell[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n.name-cell[_ngcontent-%COMP%]   .member-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #ffffff;\\n}\\n.name-cell[_ngcontent-%COMP%]   .member-avatar[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%] {\\n  width: 24px;\\n  height: 24px;\\n}\\n.name-cell[_ngcontent-%COMP%]   .member-info[_ngcontent-%COMP%]   .member-name[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  font-size: 0.95rem;\\n  font-weight: 500;\\n}\\n.name-cell[_ngcontent-%COMP%]   .member-info[_ngcontent-%COMP%]   .member-role[_ngcontent-%COMP%] {\\n  color: #a0aec0;\\n  font-size: 0.85rem;\\n  margin-top: 0.25rem;\\n}\\n\\n.email-cell[_ngcontent-%COMP%]   .email-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.25rem;\\n}\\n.email-cell[_ngcontent-%COMP%]   .email-list[_ngcontent-%COMP%]   .email[_ngcontent-%COMP%] {\\n  color: #a0aec0;\\n  font-size: 0.9rem;\\n}\\n\\n.role-cell[_ngcontent-%COMP%] {\\n  color: #a0aec0;\\n  font-size: 0.9rem;\\n}\\n\\n.actions-cell[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n.actions-cell[_ngcontent-%COMP%]   .delete-btn[_ngcontent-%COMP%] {\\n  width: 32px;\\n  height: 32px;\\n  border-radius: 6px;\\n  border: none;\\n  background: transparent;\\n  color: #a0aec0;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.2s ease;\\n}\\n.actions-cell[_ngcontent-%COMP%]   .delete-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.05);\\n  color: #ef4444;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVhbXMvdGVhbXMuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMGdpdGh1YiUyMHByb2plY3RzL3Byb2plY3QtZGFzaGJvYXJkL3NyYy9hcHAvdGVhbXMvdGVhbXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsY0FBQTtBQ0NGO0FEQ0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREdBO0VBQ0UsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7QUNBRjs7QURHQTtFQUNFLGFBQUE7RUFDQSx1Q0FBQTtFQUNBLG9CQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQ0FGO0FERUU7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0FKOztBREtFO0VBQ0UsYUFBQTtFQUNBLHVDQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdDQUFBO0VBQ0Esc0NBQUE7QUNGSjtBRElJO0VBQ0UsbUJBQUE7QUNGTjtBREtJO0VBQ0UscUNBQUE7QUNITjs7QURRQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7QUNMRjtBRE9FO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsY0FBQTtBQ0xKO0FET0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ0xOO0FEVUk7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQ1JOO0FEV0k7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQ1ROOztBRGVFO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ1pKO0FEY0k7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QUNaTjs7QURpQkE7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7QUNkRjs7QURpQkE7RUFDRSxhQUFBO0VBQ0EseUJBQUE7QUNkRjtBRGdCRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EseUJBQUE7QUNkSjtBRGdCSTtFQUNFLHFDQUFBO0VBQ0EsY0FBQTtBQ2ROIiwic291cmNlc0NvbnRlbnQiOlsiLnRlYW1zLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xuXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICB9XG59XG5cbi50ZWFtLXRhYmxlIHtcbiAgYmFja2dyb3VuZDogIzFhMWQyNTtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzJhMmQzNTtcbn1cblxuLnRhYmxlLWhlYWRlciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAxZnIgNjBweDtcbiAgcGFkZGluZzogMXJlbSAxLjVyZW07XG4gIGJhY2tncm91bmQ6ICMxYTFkMjU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMmEyZDM1O1xuXG4gIC5oZWFkZXItY2VsbCB7XG4gICAgY29sb3I6ICNhMGFlYzA7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxufVxuXG4udGFibGUtYm9keSB7XG4gIC50YWJsZS1yb3cge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMmZyIDFmciA2MHB4O1xuICAgIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMyYTJkMzU7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2U7XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wMik7XG4gICAgfVxuICB9XG59XG5cbi5uYW1lLWNlbGwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDFyZW07XG5cbiAgLm1lbWJlci1hdmF0YXIge1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuXG4gICAgc3ZnIHtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgIH1cbiAgfVxuXG4gIC5tZW1iZXItaW5mbyB7XG4gICAgLm1lbWJlci1uYW1lIHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgZm9udC1zaXplOiAwLjk1cmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICB9XG5cbiAgICAubWVtYmVyLXJvbGUge1xuICAgICAgY29sb3I6ICNhMGFlYzA7XG4gICAgICBmb250LXNpemU6IDAuODVyZW07XG4gICAgICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xuICAgIH1cbiAgfVxufVxuXG4uZW1haWwtY2VsbCB7XG4gIC5lbWFpbC1saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAwLjI1cmVtO1xuXG4gICAgLmVtYWlsIHtcbiAgICAgIGNvbG9yOiAjYTBhZWMwO1xuICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgfVxuICB9XG59XG5cbi5yb2xlLWNlbGwge1xuICBjb2xvcjogI2EwYWVjMDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG59XG5cbi5hY3Rpb25zLWNlbGwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuXG4gIC5kZWxldGUtYnRuIHtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogI2EwYWVjMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7XG4gICAgICBjb2xvcjogI2VmNDQ0NDtcbiAgICB9XG4gIH1cbn0gIiwiLnRlYW1zLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLnRlYW1zLWNvbnRhaW5lciBoMSB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbn1cblxuLnRlYW0tdGFibGUge1xuICBiYWNrZ3JvdW5kOiAjMWExZDI1O1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmEyZDM1O1xufVxuXG4udGFibGUtaGVhZGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMmZyIDFmciA2MHB4O1xuICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgYmFja2dyb3VuZDogIzFhMWQyNTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMyYTJkMzU7XG59XG4udGFibGUtaGVhZGVyIC5oZWFkZXItY2VsbCB7XG4gIGNvbG9yOiAjYTBhZWMwO1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnRhYmxlLWJvZHkgLnRhYmxlLXJvdyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAxZnIgNjBweDtcbiAgcGFkZGluZzogMXJlbSAxLjVyZW07XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMmEyZDM1O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZTtcbn1cbi50YWJsZS1ib2R5IC50YWJsZS1yb3c6bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG59XG4udGFibGUtYm9keSAudGFibGUtcm93OmhvdmVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAyKTtcbn1cblxuLm5hbWUtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMXJlbTtcbn1cbi5uYW1lLWNlbGwgLm1lbWJlci1hdmF0YXIge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbi5uYW1lLWNlbGwgLm1lbWJlci1hdmF0YXIgc3ZnIHtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbn1cbi5uYW1lLWNlbGwgLm1lbWJlci1pbmZvIC5tZW1iZXItbmFtZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBmb250LXNpemU6IDAuOTVyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4ubmFtZS1jZWxsIC5tZW1iZXItaW5mbyAubWVtYmVyLXJvbGUge1xuICBjb2xvcjogI2EwYWVjMDtcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xuICBtYXJnaW4tdG9wOiAwLjI1cmVtO1xufVxuXG4uZW1haWwtY2VsbCAuZW1haWwtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMC4yNXJlbTtcbn1cbi5lbWFpbC1jZWxsIC5lbWFpbC1saXN0IC5lbWFpbCB7XG4gIGNvbG9yOiAjYTBhZWMwO1xuICBmb250LXNpemU6IDAuOXJlbTtcbn1cblxuLnJvbGUtY2VsbCB7XG4gIGNvbG9yOiAjYTBhZWMwO1xuICBmb250LXNpemU6IDAuOXJlbTtcbn1cblxuLmFjdGlvbnMtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG4uYWN0aW9ucy1jZWxsIC5kZWxldGUtYnRuIHtcbiAgd2lkdGg6IDMycHg7XG4gIGhlaWdodDogMzJweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogI2EwYWVjMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cbi5hY3Rpb25zLWNlbGwgLmRlbGV0ZS1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpO1xuICBjb2xvcjogI2VmNDQ0NDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","email_r3","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","ɵɵtemplate","TeamsComponent_div_13_div_12_Template","ɵɵstyleProp","member_r1","avatarColor","name","role","ɵɵproperty","emails","TeamsComponent","constructor","fb","teamMembers","id","filteredTeamMembers","isEditing","editingMemberId","nextId","roleList","filterName","selectedRole","ngOnInit","teamMemberForm","group","required","getRandomColor","updateRoleList","applyFilters","console","log","roles","Set","map","member","Array","from","sort","tempMembers","filterLower","toLowerCase","filter","includes","clearNameFilter","showAddMemberForm","reset","editMember","patchValue","saveMember","invalid","formValue","value","index","findIndex","m","newMember","push","cancelEdit","deleteTeamMember","memberId","letters","color","i","Math","floor","random","ɵɵdirectiveInject","i1","FormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TeamsComponent_Template","rf","ctx","TeamsComponent_div_13_Template"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/teams/teams.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/teams/teams.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips'; // For emails\n\ninterface TeamMember {\n  id: number; // Add ID\n  name: string;\n  role: string;\n  emails: string[];\n  avatarColor: string;\n}\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.scss'],\n  standalone: true, // Make standalone\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatChipsModule // Add\n  ]\n})\nexport class TeamsComponent implements OnInit {\n  teamMembers: TeamMember[] = [\n    // Added IDs\n    { id: 1, name: 'Alice Smith', role: 'Designer', emails: ['alice@smith.com', 'alice.personal@email.com'], avatarColor: '#4361ee' },\n    { id: 2, name: 'Bob Johnson', role: 'Developer', emails: ['bob.j@company.dev'], avatarColor: '#7209b7' },\n    { id: 3, name: 'Carol Williams', role: 'Manager', emails: ['carol.w@org.net'], avatarColor: '#4cc9f0' },\n    { id: 4, name: 'David Brown', role: 'Developer', emails: ['david.brown@company.dev', 'db@personal.io'], avatarColor: '#ef4444' }\n  ];\n\n  filteredTeamMembers: TeamMember[] = [];\n  teamMemberForm!: FormGroup;\n  isEditing = false;\n  editingMemberId: number | null = null;\n  nextId = 5;\n\n  // Filter properties\n  roleList: string[] = [];\n  filterName: string = '';\n  selectedRole: string = 'All';\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.teamMemberForm = this.fb.group({\n      name: ['', Validators.required],\n      role: ['', Validators.required],\n      emails: [''], // Handled separately? Or just display?\n      avatarColor: [this.getRandomColor()] // Example: Assign random color\n    });\n    this.updateRoleList();\n    this.applyFilters(); // Initial load\n    console.log('Teams component initialized');\n  }\n\n  updateRoleList(): void {\n    const roles = new Set(this.teamMembers.map(member => member.role));\n    this.roleList = ['All', ...Array.from(roles).sort()];\n  }\n\n  applyFilters(): void {\n    let tempMembers = [...this.teamMembers];\n\n    // Filter by Name (case-insensitive)\n    if (this.filterName) {\n      const filterLower = this.filterName.toLowerCase();\n      tempMembers = tempMembers.filter(member => \n        member.name.toLowerCase().includes(filterLower)\n      );\n    }\n\n    // Filter by Role\n    if (this.selectedRole && this.selectedRole !== 'All') {\n      tempMembers = tempMembers.filter(member => member.role === this.selectedRole);\n    }\n\n    this.filteredTeamMembers = tempMembers;\n  }\n\n  clearNameFilter(): void {\n      this.filterName = '';\n      this.applyFilters();\n  }\n\n  // --- CRUD Methods ---\n  showAddMemberForm(): void {\n    this.isEditing = true;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({ avatarColor: this.getRandomColor() });\n    // TODO: Handle email input/editing if needed\n  }\n\n  editMember(member: TeamMember): void {\n    this.isEditing = true;\n    this.editingMemberId = member.id;\n    this.teamMemberForm.patchValue({\n      name: member.name,\n      role: member.role,\n      // emails: member.emails.join(', '), // Example: Join emails for editing?\n      avatarColor: member.avatarColor\n    });\n     // TODO: Handle email input/editing if needed\n  }\n\n  saveMember(): void {\n    if (this.teamMemberForm.invalid) {\n      return;\n    }\n    const formValue = this.teamMemberForm.value;\n    // TODO: Handle email parsing/saving if edited\n    // const emails = formValue.emails?.split(',').map((e: string) => e.trim()).filter((e: string) => e) || [];\n\n    if (this.editingMemberId !== null) {\n      // Update\n      const index = this.teamMembers.findIndex(m => m.id === this.editingMemberId);\n      if (index > -1) {\n        this.teamMembers[index] = {\n          ...this.teamMembers[index], // Keep existing ID, emails etc.\n          name: formValue.name,\n          role: formValue.role,\n          avatarColor: formValue.avatarColor \n          // emails: emails // Update emails if handled\n        };\n      }\n    } else {\n      // Add\n      const newMember: TeamMember = {\n        id: this.nextId++,\n        name: formValue.name,\n        role: formValue.role,\n        avatarColor: formValue.avatarColor,\n        emails: [] // Start with empty emails or parse from form\n        // emails: emails\n      };\n      this.teamMembers.push(newMember);\n    }\n\n    this.updateRoleList();\n    this.applyFilters();\n    this.cancelEdit();\n  }\n\n  // Updated delete method\n  deleteTeamMember(memberId: number): void { \n    this.teamMembers = this.teamMembers.filter(m => m.id !== memberId);\n    if (this.editingMemberId === memberId) {\n      this.cancelEdit();\n    }\n    this.updateRoleList();\n    this.applyFilters();\n  }\n\n  cancelEdit(): void {\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({ avatarColor: this.getRandomColor() });\n  }\n\n  // Helper to get a random color for new members\n  getRandomColor(): string {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n} ","<div class=\"teams-container\">\n  <h1>Team Members</h1>\n\n  <div class=\"team-table\">\n    <div class=\"table-header\">\n      <div class=\"header-cell name-cell\">Name</div>\n      <div class=\"header-cell email-cell\">Email</div>\n      <div class=\"header-cell role-cell\">Role</div>\n      <div class=\"header-cell actions-cell\"></div>\n    </div>\n\n    <div class=\"table-body\">\n      <div class=\"table-row\" *ngFor=\"let member of teamMembers\">\n        <div class=\"table-cell name-cell\">\n          <div class=\"member-avatar\" [style.background-color]=\"member.avatarColor\">\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" fill=\"currentColor\"/>\n            </svg>\n          </div>\n          <div class=\"member-info\">\n            <div class=\"member-name\">{{ member.name }}</div>\n            <div class=\"member-role\">{{ member.role }}</div>\n          </div>\n        </div>\n        <div class=\"table-cell email-cell\">\n          <div class=\"email-list\">\n            <div class=\"email\" *ngFor=\"let email of member.emails\">{{ email }}</div>\n          </div>\n        </div>\n        <div class=\"table-cell role-cell\">{{ member.role }}</div>\n        <div class=\"table-cell actions-cell\">\n          <button class=\"delete-btn\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n              <path d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}