{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    // Data for Task Summary\n    this.totalTasks = 45;\n    this.tasksCompleted = 20;\n    this.overdueTasks = 5;\n    // Task Completion Percentage\n    this.progress = this.tasksCompleted / this.totalTasks * 100;\n    // Task Data for different statuses (All Tasks, In Progress, Completed)\n    this.allTasks = [{\n      id: 1,\n      name: 'Task 1',\n      status: 'Completed'\n    }, {\n      id: 2,\n      name: 'Task 2',\n      status: 'In Progress'\n    }, {\n      id: 3,\n      name: 'Task 3',\n      status: 'Completed'\n    }, {\n      id: 4,\n      name: 'Task 4',\n      status: 'Overdue'\n    }, {\n      id: 5,\n      name: 'Task 5',\n      status: 'In Progress'\n    }, {\n      id: 6,\n      name: 'Task 6',\n      status: 'Completed'\n    }];\n    // Filtered Tasks (default to All Tasks)\n    this.filteredTasks = [...this.allTasks];\n    // Columns for the table\n    this.displayedColumns = ['task', 'status'];\n  }\n  ngOnInit() {}\n  // Function to filter tasks based on status\n  filterTasks(status) {\n    if (status === 'All') {\n      this.filteredTasks = [...this.allTasks];\n    } else {\n      this.filteredTasks = this.allTasks.filter(task => task.status === status);\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);","map":{"version":3,"names":["Component","DashboardComponent","constructor","totalTasks","tasksCompleted","overdueTasks","progress","allTasks","id","name","status","filteredTasks","displayedColumns","ngOnInit","filterTasks","filter","task","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  // Data for Task Summary\n  totalTasks: number = 45;\n  tasksCompleted: number = 20;\n  overdueTasks: number = 5;\n\n  // Task Completion Percentage\n  progress: number = (this.tasksCompleted / this.totalTasks) * 100;\n\n  // Task Data for different statuses (All Tasks, In Progress, Completed)\n  allTasks = [\n    { id: 1, name: 'Task 1', status: 'Completed' },\n    { id: 2, name: 'Task 2', status: 'In Progress' },\n    { id: 3, name: 'Task 3', status: 'Completed' },\n    { id: 4, name: 'Task 4', status: 'Overdue' },\n    { id: 5, name: 'Task 5', status: 'In Progress' },\n    { id: 6, name: 'Task 6', status: 'Completed' }\n  ];\n\n  // Filtered Tasks (default to All Tasks)\n  filteredTasks = [...this.allTasks];\n\n  // Columns for the table\n  displayedColumns: string[] = ['task', 'status'];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  // Function to filter tasks based on status\n  filterTasks(status: string) {\n    if (status === 'All') {\n      this.filteredTasks = [...this.allTasks];\n    } else {\n      this.filteredTasks = this.allTasks.filter(task => task.status === status);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAyB7BC,YAAA;IAxBA;IACA,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,YAAY,GAAW,CAAC;IAExB;IACA,KAAAC,QAAQ,GAAY,IAAI,CAACF,cAAc,GAAG,IAAI,CAACD,UAAU,GAAI,GAAG;IAEhE;IACA,KAAAI,QAAQ,GAAG,CACT;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAW,CAAE,EAC9C;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAa,CAAE,EAChD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAW,CAAE,EAC9C;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAS,CAAE,EAC5C;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAa,CAAE,EAChD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAW,CAAE,CAC/C;IAED;IACA,KAAAC,aAAa,GAAG,CAAC,GAAG,IAAI,CAACJ,QAAQ,CAAC;IAElC;IACA,KAAAK,gBAAgB,GAAa,CAAC,MAAM,EAAE,QAAQ,CAAC;EAEhC;EAEfC,QAAQA,CAAA,GAAU;EAElB;EACAC,WAAWA,CAACJ,MAAc;IACxB,IAAIA,MAAM,KAAK,KAAK,EAAE;MACpB,IAAI,CAACC,aAAa,GAAG,CAAC,GAAG,IAAI,CAACJ,QAAQ,CAAC;KACxC,MAAM;MACL,IAAI,CAACI,aAAa,GAAG,IAAI,CAACJ,QAAQ,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,MAAM,KAAKA,MAAM,CAAC;;EAE7E;CACD;AArCYT,kBAAkB,GAAAgB,UAAA,EAL9BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWnB,kBAAkB,CAqC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}