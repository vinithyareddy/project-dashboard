{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips'; // For emails\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/chips\";\nfunction TeamsComponent_div_3_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeamsComponent_div_3_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeamsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function TeamsComponent_div_3_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.saveMember());\n    });\n    i0.ɵɵelementStart(4, \"mat-form-field\", 5)(5, \"mat-label\");\n    i0.ɵɵtext(6, \"Member Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵtemplate(8, TeamsComponent_div_3_mat_error_8_Template, 2, 0, \"mat-error\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\", 5)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 8);\n    i0.ɵɵtemplate(13, TeamsComponent_div_3_mat_error_13_Template, 2, 0, \"mat-error\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 10);\n    i0.ɵɵtext(16, \"Save Member\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function TeamsComponent_div_3_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cancelEdit());\n    });\n    i0.ɵɵtext(18, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.editingMemberId === null ? \"Add New Member\" : \"Edit Member\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.teamMemberForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.teamMemberForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.teamMemberForm.get(\"role\")) == null ? null : tmp_3_0.hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.teamMemberForm.invalid);\n  }\n}\nfunction TeamsComponent_div_4_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function TeamsComponent_div_4_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.clearNameFilter());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TeamsComponent_div_4_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r13, \" \");\n  }\n}\nfunction TeamsComponent_div_4_div_17_mat_chip_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const email_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(email_r16);\n  }\n}\nfunction TeamsComponent_div_4_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 28)(4, \"h3\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 30);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-chip-list\", 31);\n    i0.ɵɵtemplate(9, TeamsComponent_div_4_div_17_mat_chip_9_Template, 2, 1, \"mat-chip\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 33)(11, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TeamsComponent_div_4_div_17_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const member_r14 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.editMember(member_r14));\n    });\n    i0.ɵɵelementStart(12, \"mat-icon\");\n    i0.ɵɵtext(13, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function TeamsComponent_div_4_div_17_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const member_r14 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.deleteTeamMember(member_r14.id));\n    });\n    i0.ɵɵelementStart(15, \"mat-icon\");\n    i0.ɵɵtext(16, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const member_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", member_r14.avatarColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r14.name.charAt(0), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(member_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r14.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", member_r14.emails);\n  }\n}\nfunction TeamsComponent_div_4_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1, \" No team members found matching the current filters. Try clearing filters or adding a member! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeamsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"mat-form-field\", 14)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Filter by Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TeamsComponent_div_4_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.filterName = $event);\n    })(\"ngModelChange\", function TeamsComponent_div_4_Template_input_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.applyFilters());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TeamsComponent_div_4_button_6_Template, 3, 0, \"button\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-form-field\", 17)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Filter by Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function TeamsComponent_div_4_Template_mat_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.selectedRole = $event);\n    })(\"ngModelChange\", function TeamsComponent_div_4_Template_mat_select_ngModelChange_10_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.applyFilters());\n    });\n    i0.ɵɵtemplate(11, TeamsComponent_div_4_mat_option_11_Template, 2, 2, \"mat-option\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TeamsComponent_div_4_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.showAddMemberForm());\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" Add Member \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 21);\n    i0.ɵɵtemplate(17, TeamsComponent_div_4_div_17_Template, 17, 6, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, TeamsComponent_div_4_div_18_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.filterName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.filterName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedRole);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.roleList);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.filteredTeamMembers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.filteredTeamMembers.length === 0);\n  }\n}\nexport class TeamsComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.teamMembers = [\n    // Added IDs\n    {\n      id: 1,\n      name: 'Alice Smith',\n      role: 'Designer',\n      emails: ['alice@smith.com', 'alice.personal@email.com'],\n      avatarColor: '#4361ee'\n    }, {\n      id: 2,\n      name: 'Bob Johnson',\n      role: 'Developer',\n      emails: ['bob.j@company.dev'],\n      avatarColor: '#7209b7'\n    }, {\n      id: 3,\n      name: 'Carol Williams',\n      role: 'Manager',\n      emails: ['carol.w@org.net'],\n      avatarColor: '#4cc9f0'\n    }, {\n      id: 4,\n      name: 'David Brown',\n      role: 'Developer',\n      emails: ['david.brown@company.dev', 'db@personal.io'],\n      avatarColor: '#ef4444'\n    }];\n    this.filteredTeamMembers = [];\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.nextId = 5;\n    // Filter properties\n    this.roleList = [];\n    this.filterName = '';\n    this.selectedRole = 'All';\n  }\n  ngOnInit() {\n    this.teamMemberForm = this.fb.group({\n      name: ['', Validators.required],\n      role: ['', Validators.required],\n      emails: [''],\n      avatarColor: [this.getRandomColor()] // Example: Assign random color\n    });\n\n    this.updateRoleList();\n    this.applyFilters(); // Initial load\n    console.log('Teams component initialized');\n  }\n  updateRoleList() {\n    const roles = new Set(this.teamMembers.map(member => member.role));\n    this.roleList = ['All', ...Array.from(roles).sort()];\n  }\n  applyFilters() {\n    let tempMembers = [...this.teamMembers];\n    // Filter by Name (case-insensitive)\n    if (this.filterName) {\n      const filterLower = this.filterName.toLowerCase();\n      tempMembers = tempMembers.filter(member => member.name.toLowerCase().includes(filterLower));\n    }\n    // Filter by Role\n    if (this.selectedRole && this.selectedRole !== 'All') {\n      tempMembers = tempMembers.filter(member => member.role === this.selectedRole);\n    }\n    this.filteredTeamMembers = tempMembers;\n  }\n  clearNameFilter() {\n    this.filterName = '';\n    this.applyFilters();\n  }\n  // --- CRUD Methods ---\n  showAddMemberForm() {\n    this.isEditing = true;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({\n      avatarColor: this.getRandomColor()\n    });\n    // TODO: Handle email input/editing if needed\n  }\n\n  editMember(member) {\n    this.isEditing = true;\n    this.editingMemberId = member.id;\n    this.teamMemberForm.patchValue({\n      name: member.name,\n      role: member.role,\n      // emails: member.emails.join(', '), // Example: Join emails for editing?\n      avatarColor: member.avatarColor\n    });\n    // TODO: Handle email input/editing if needed\n  }\n\n  saveMember() {\n    if (this.teamMemberForm.invalid) {\n      return;\n    }\n    const formValue = this.teamMemberForm.value;\n    // TODO: Handle email parsing/saving if edited\n    // const emails = formValue.emails?.split(',').map((e: string) => e.trim()).filter((e: string) => e) || [];\n    if (this.editingMemberId !== null) {\n      // Update\n      const index = this.teamMembers.findIndex(m => m.id === this.editingMemberId);\n      if (index > -1) {\n        this.teamMembers[index] = {\n          ...this.teamMembers[index],\n          name: formValue.name,\n          role: formValue.role,\n          avatarColor: formValue.avatarColor\n          // emails: emails // Update emails if handled\n        };\n      }\n    } else {\n      // Add\n      const newMember = {\n        id: this.nextId++,\n        name: formValue.name,\n        role: formValue.role,\n        avatarColor: formValue.avatarColor,\n        emails: [] // Start with empty emails or parse from form\n        // emails: emails\n      };\n\n      this.teamMembers.push(newMember);\n    }\n    this.updateRoleList();\n    this.applyFilters();\n    this.cancelEdit();\n  }\n  // Updated delete method\n  deleteTeamMember(memberId) {\n    this.teamMembers = this.teamMembers.filter(m => m.id !== memberId);\n    if (this.editingMemberId === memberId) {\n      this.cancelEdit();\n    }\n    this.updateRoleList();\n    this.applyFilters();\n  }\n  cancelEdit() {\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({\n      avatarColor: this.getRandomColor()\n    });\n  }\n  // Helper to get a random color for new members\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  static {\n    this.ɵfac = function TeamsComponent_Factory(t) {\n      return new (t || TeamsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TeamsComponent,\n      selectors: [[\"app-teams\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"teams-container\"], [\"class\", \"team-form-container\", 4, \"ngIf\"], [\"class\", \"team-list-container\", 4, \"ngIf\"], [1, \"team-form-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"role\", \"required\", \"\"], [1, \"form-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"team-list-container\"], [1, \"filter-controls\"], [\"appearance\", \"outline\", 1, \"filter-name\"], [\"matInput\", \"\", \"placeholder\", \"Enter name...\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clear name filter\", 3, \"click\", 4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"filter-role\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"add-member-button\", 3, \"click\"], [1, \"teams-grid\"], [\"class\", \"team-card\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-members\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clear name filter\", 3, \"click\"], [3, \"value\"], [1, \"team-card\"], [1, \"avatar\"], [1, \"member-info\"], [1, \"member-name\"], [1, \"member-role\"], [\"aria-label\", \"Member emails\"], [4, \"ngFor\", \"ngForOf\"], [1, \"member-actions\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"aria-label\", \"Edit member\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"aria-label\", \"Delete member\", 3, \"click\"], [1, \"no-members\"]],\n      template: function TeamsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Team Members\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, TeamsComponent_div_3_Template, 19, 5, \"div\", 1);\n          i0.ɵɵtemplate(4, TeamsComponent_div_4_Template, 19, 6, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEditing);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isEditing);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, FormsModule, i1.NgModel, MatButtonModule, i3.MatButton, i3.MatIconButton, MatIconModule, i4.MatIcon, MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatError, i5.MatSuffix, MatInputModule, i6.MatInput, MatSelectModule, i7.MatSelect, i8.MatOption, MatChipsModule // Add\n      , i9.MatChip],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","FormsModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatChipsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TeamsComponent_div_3_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","saveMember","ɵɵelement","ɵɵtemplate","TeamsComponent_div_3_mat_error_8_Template","TeamsComponent_div_3_mat_error_13_Template","TeamsComponent_div_3_Template_button_click_17_listener","ctx_r6","cancelEdit","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","editingMemberId","ɵɵproperty","teamMemberForm","tmp_2_0","get","hasError","tmp_3_0","invalid","TeamsComponent_div_4_button_6_Template_button_click_0_listener","_r12","ctx_r11","clearNameFilter","role_r13","ɵɵtextInterpolate1","email_r16","TeamsComponent_div_4_div_17_mat_chip_9_Template","TeamsComponent_div_4_div_17_Template_button_click_11_listener","restoredCtx","_r18","member_r14","$implicit","ctx_r17","editMember","TeamsComponent_div_4_div_17_Template_button_click_14_listener","ctx_r19","deleteTeamMember","id","ɵɵstyleProp","avatarColor","name","charAt","role","emails","TeamsComponent_div_4_Template_input_ngModelChange_5_listener","$event","_r21","ctx_r20","filterName","ctx_r22","applyFilters","TeamsComponent_div_4_button_6_Template","TeamsComponent_div_4_Template_mat_select_ngModelChange_10_listener","ctx_r23","selectedRole","ctx_r24","TeamsComponent_div_4_mat_option_11_Template","TeamsComponent_div_4_Template_button_click_12_listener","ctx_r25","showAddMemberForm","TeamsComponent_div_4_div_17_Template","TeamsComponent_div_4_div_18_Template","ctx_r1","roleList","filteredTeamMembers","length","TeamsComponent","constructor","fb","teamMembers","isEditing","nextId","ngOnInit","group","required","getRandomColor","updateRoleList","console","log","roles","Set","map","member","Array","from","sort","tempMembers","filterLower","toLowerCase","filter","includes","reset","patchValue","formValue","value","index","findIndex","m","newMember","push","memberId","letters","color","i","Math","floor","random","ɵɵdirectiveInject","i1","FormBuilder","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TeamsComponent_Template","rf","ctx","TeamsComponent_div_3_Template","TeamsComponent_div_4_Template","i2","NgForOf","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","NgModel","i3","MatButton","MatIconButton","i4","MatIcon","i5","MatFormField","MatLabel","MatError","MatSuffix","i6","MatInput","i7","MatSelect","i8","MatOption"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/teams/teams.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/teams/teams.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips'; // For emails\n\ninterface TeamMember {\n  id: number; // Add ID\n  name: string;\n  role: string;\n  emails: string[];\n  avatarColor: string;\n}\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.scss'],\n  standalone: true, // Make standalone\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatChipsModule // Add\n  ]\n})\nexport class TeamsComponent implements OnInit {\n  teamMembers: TeamMember[] = [\n    // Added IDs\n    { id: 1, name: 'Alice Smith', role: 'Designer', emails: ['alice@smith.com', 'alice.personal@email.com'], avatarColor: '#4361ee' },\n    { id: 2, name: 'Bob Johnson', role: 'Developer', emails: ['bob.j@company.dev'], avatarColor: '#7209b7' },\n    { id: 3, name: 'Carol Williams', role: 'Manager', emails: ['carol.w@org.net'], avatarColor: '#4cc9f0' },\n    { id: 4, name: 'David Brown', role: 'Developer', emails: ['david.brown@company.dev', 'db@personal.io'], avatarColor: '#ef4444' }\n  ];\n\n  filteredTeamMembers: TeamMember[] = [];\n  teamMemberForm!: FormGroup;\n  isEditing = false;\n  editingMemberId: number | null = null;\n  nextId = 5;\n\n  // Filter properties\n  roleList: string[] = [];\n  filterName: string = '';\n  selectedRole: string = 'All';\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.teamMemberForm = this.fb.group({\n      name: ['', Validators.required],\n      role: ['', Validators.required],\n      emails: [''], // Handled separately? Or just display?\n      avatarColor: [this.getRandomColor()] // Example: Assign random color\n    });\n    this.updateRoleList();\n    this.applyFilters(); // Initial load\n    console.log('Teams component initialized');\n  }\n\n  updateRoleList(): void {\n    const roles = new Set(this.teamMembers.map(member => member.role));\n    this.roleList = ['All', ...Array.from(roles).sort()];\n  }\n\n  applyFilters(): void {\n    let tempMembers = [...this.teamMembers];\n\n    // Filter by Name (case-insensitive)\n    if (this.filterName) {\n      const filterLower = this.filterName.toLowerCase();\n      tempMembers = tempMembers.filter(member => \n        member.name.toLowerCase().includes(filterLower)\n      );\n    }\n\n    // Filter by Role\n    if (this.selectedRole && this.selectedRole !== 'All') {\n      tempMembers = tempMembers.filter(member => member.role === this.selectedRole);\n    }\n\n    this.filteredTeamMembers = tempMembers;\n  }\n\n  clearNameFilter(): void {\n      this.filterName = '';\n      this.applyFilters();\n  }\n\n  // --- CRUD Methods ---\n  showAddMemberForm(): void {\n    this.isEditing = true;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({ avatarColor: this.getRandomColor() });\n    // TODO: Handle email input/editing if needed\n  }\n\n  editMember(member: TeamMember): void {\n    this.isEditing = true;\n    this.editingMemberId = member.id;\n    this.teamMemberForm.patchValue({\n      name: member.name,\n      role: member.role,\n      // emails: member.emails.join(', '), // Example: Join emails for editing?\n      avatarColor: member.avatarColor\n    });\n     // TODO: Handle email input/editing if needed\n  }\n\n  saveMember(): void {\n    if (this.teamMemberForm.invalid) {\n      return;\n    }\n    const formValue = this.teamMemberForm.value;\n    // TODO: Handle email parsing/saving if edited\n    // const emails = formValue.emails?.split(',').map((e: string) => e.trim()).filter((e: string) => e) || [];\n\n    if (this.editingMemberId !== null) {\n      // Update\n      const index = this.teamMembers.findIndex(m => m.id === this.editingMemberId);\n      if (index > -1) {\n        this.teamMembers[index] = {\n          ...this.teamMembers[index], // Keep existing ID, emails etc.\n          name: formValue.name,\n          role: formValue.role,\n          avatarColor: formValue.avatarColor \n          // emails: emails // Update emails if handled\n        };\n      }\n    } else {\n      // Add\n      const newMember: TeamMember = {\n        id: this.nextId++,\n        name: formValue.name,\n        role: formValue.role,\n        avatarColor: formValue.avatarColor,\n        emails: [] // Start with empty emails or parse from form\n        // emails: emails\n      };\n      this.teamMembers.push(newMember);\n    }\n\n    this.updateRoleList();\n    this.applyFilters();\n    this.cancelEdit();\n  }\n\n  // Updated delete method\n  deleteTeamMember(memberId: number): void { \n    this.teamMembers = this.teamMembers.filter(m => m.id !== memberId);\n    if (this.editingMemberId === memberId) {\n      this.cancelEdit();\n    }\n    this.updateRoleList();\n    this.applyFilters();\n  }\n\n  cancelEdit(): void {\n    this.isEditing = false;\n    this.editingMemberId = null;\n    this.teamMemberForm.reset({ avatarColor: this.getRandomColor() });\n  }\n\n  // Helper to get a random color for new members\n  getRandomColor(): string {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n} ","<div class=\"teams-container\">\n  <h1>Team Members</h1>\n\n  <!-- Add/Edit Team Member Form (Conditionally Displayed) -->\n  <div class=\"team-form-container\" *ngIf=\"isEditing\">\n    <h2>{{ editingMemberId === null ? 'Add New Member' : 'Edit Member' }}</h2>\n    <form [formGroup]=\"teamMemberForm\" (ngSubmit)=\"saveMember()\">\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Member Name</mat-label>\n        <input matInput formControlName=\"name\" required>\n        <mat-error *ngIf=\"teamMemberForm.get('name')?.hasError('required')\">Name is required</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Role</mat-label>\n        <input matInput formControlName=\"role\" required>\n        <mat-error *ngIf=\"teamMemberForm.get('role')?.hasError('required')\">Role is required</mat-error>\n      </mat-form-field>\n\n      <!-- Add input for emails if editing is desired -->\n      <!-- \n      <mat-form-field appearance=\"outline\">\n        <mat-label>Emails (comma-separated)</mat-label>\n        <input matInput formControlName=\"emails\">\n      </mat-form-field> \n      -->\n\n      <div class=\"form-actions\">\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"teamMemberForm.invalid\">Save Member</button>\n        <button mat-stroked-button type=\"button\" (click)=\"cancelEdit()\">Cancel</button>\n      </div>\n    </form>\n  </div>\n\n  <!-- Team List & Filters -->\n  <div class=\"team-list-container\" *ngIf=\"!isEditing\">\n\n    <!-- Filter Controls -->\n    <div class=\"filter-controls\">\n       <mat-form-field appearance=\"outline\" class=\"filter-name\">\n        <mat-label>Filter by Name</mat-label>\n        <input matInput \n               [(ngModel)]=\"filterName\" \n               (ngModelChange)=\"applyFilters()\" \n               placeholder=\"Enter name...\">\n         <button mat-icon-button matSuffix *ngIf=\"filterName\" (click)=\"clearNameFilter()\" aria-label=\"Clear name filter\">\n            <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"filter-role\">\n        <mat-label>Filter by Role</mat-label>\n        <mat-select [(ngModel)]=\"selectedRole\" (ngModelChange)=\"applyFilters()\">\n          <mat-option *ngFor=\"let role of roleList\" [value]=\"role\">\n            {{ role }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-flat-button color=\"primary\" class=\"add-member-button\" (click)=\"showAddMemberForm()\">\n        <mat-icon>add</mat-icon> Add Member\n      </button>\n    </div>\n\n    <!-- Team Grid Display -->\n    <div class=\"teams-grid\">\n      <!-- Iterate over filteredTeamMembers -->\n      <div class=\"team-card\" *ngFor=\"let member of filteredTeamMembers\">\n        <div class=\"avatar\" [style.background-color]=\"member.avatarColor\">\n          {{ member.name.charAt(0) }}\n        </div>\n        <div class=\"member-info\">\n          <h3 class=\"member-name\">{{ member.name }}</h3>\n          <p class=\"member-role\">{{ member.role }}</p>\n          <mat-chip-list aria-label=\"Member emails\">\n            <mat-chip *ngFor=\"let email of member.emails\">{{ email }}</mat-chip>\n          </mat-chip-list>\n        </div>\n        <div class=\"member-actions\">\n          <button mat-icon-button color=\"primary\" aria-label=\"Edit member\" (click)=\"editMember(member)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" aria-label=\"Delete member\" (click)=\"deleteTeamMember(member.id)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message when no members match filter -->\n    <div *ngIf=\"filteredTeamMembers.length === 0\" class=\"no-members\">\n       No team members found matching the current filters. Try clearing filters or adding a member!\n    </div>\n\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}