{"ast":null,"code":"import { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n  }\n  canActivate() {\n    return this.authService.getUser().pipe(map(user => {\n      if (user) {\n        return true;\n      } else {\n        this.router.navigate(['/auth']);\n        return false;\n      }\n    }));\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Router","map","inject","AuthService","AuthGuard","constructor","authService","router","canActivate","getUser","pipe","user","navigate","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Auth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n\n  canActivate() {\n    return this.authService.getUser().pipe(\n      map(user => {\n        if (user) {\n          return true;\n        } else {\n          this.router.navigate(['/auth']);\n          return false;\n        }\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAAsBA,MAAM,QAAQ,iBAAiB;AAErD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;;AAKtD,OAAM,MAAOC,SAAS;EAHtBC,YAAA;IAIU,KAAAC,WAAW,GAAGJ,MAAM,CAACC,WAAW,CAAC;IACjC,KAAAI,MAAM,GAAGL,MAAM,CAACF,MAAM,CAAC;;EAE/BQ,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE,CAACC,IAAI,CACpCT,GAAG,CAACU,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE;QACR,OAAO,IAAI;OACZ,MAAM;QACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EACH;;;uBAfWR,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAS,OAAA,EAATT,SAAS,CAAAU,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}