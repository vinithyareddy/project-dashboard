{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.afAuth.authState.subscribe(user => {\n      this.currentUserSubject.next(user);\n    });\n  }\n  /** Register */\n  register(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\n  }\n  /** Login */\n  login(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n  /** Logout */\n  logout() {\n    return this.afAuth.signOut();\n  }\n  /** Observable for user changes */\n  getUser() {\n    return this.currentUserSubject.asObservable();\n  }\n  /** Get current UID */\n  getUserId() {\n    return this.currentUserSubject.value?.uid || null;\n  }\n  /** Raw user object */\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","afAuth","currentUserSubject","authState","subscribe","user","next","register","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","getUser","asObservable","getUserId","value","uid","getCurrentUser","i0","ɵɵinject","i1","AngularFireAuth","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<firebase.User | null>(null);\n\n  constructor(private afAuth: AngularFireAuth) {\n    this.afAuth.authState.subscribe(user => {\n      this.currentUserSubject.next(user);\n    });\n  }\n\n  /** Register */\n  register(email: string, password: string) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password);\n  }\n\n  /** Login */\n  login(email: string, password: string) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  /** Logout */\n  logout() {\n    return this.afAuth.signOut();\n  }\n\n  /** Observable for user changes */\n  getUser() {\n    return this.currentUserSubject.asObservable();\n  }\n\n  /** Get current UID */\n  getUserId(): string | null {\n    return this.currentUserSubject.value?.uid || null;\n  }\n\n  /** Raw user object */\n  getCurrentUser(): firebase.User | null {\n    return this.currentUserSubject.value;\n  }\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;;;AAGtC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;IAFlB,KAAAC,kBAAkB,GAAG,IAAIJ,eAAe,CAAuB,IAAI,CAAC;IAG1E,IAAI,CAACG,MAAM,CAACE,SAAS,CAACC,SAAS,CAACC,IAAI,IAAG;MACrC,IAAI,CAACH,kBAAkB,CAACI,IAAI,CAACD,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ;EAEA;EACAE,QAAQA,CAACC,KAAa,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACR,MAAM,CAACS,8BAA8B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EACpE;EAEA;EACAE,KAAKA,CAACH,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACR,MAAM,CAACW,0BAA0B,CAACJ,KAAK,EAAEC,QAAQ,CAAC;EAChE;EAEA;EACAI,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACZ,MAAM,CAACa,OAAO,EAAE;EAC9B;EAEA;EACAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACb,kBAAkB,CAACc,YAAY,EAAE;EAC/C;EAEA;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACf,kBAAkB,CAACgB,KAAK,EAAEC,GAAG,IAAI,IAAI;EACnD;EAEA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAClB,kBAAkB,CAACgB,KAAK;EACtC;;;uBArCWnB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;aAAXzB,WAAW;MAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}