{"ast":null,"code":"import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nconst firebaseApp = initializeApp(environment.firebase);\nconst auth = getAuth(firebaseApp);\nexport class AuthService {\n  register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  logout() {\n    return signOut(auth);\n  }\n  getCurrentUser() {\n    return auth.currentUser;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","initializeApp","environment","firebaseApp","firebase","auth","AuthService","register","email","password","login","logout","getCurrentUser","currentUser","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["// src/app/services/auth.service.ts\nimport { Injectable } from '@angular/core';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, User } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { environment } from 'src/environments/environment';\n\nconst firebaseApp = initializeApp(environment.firebase);\nconst auth = getAuth(firebaseApp);\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  register(email: string, password: string) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  login(email: string, password: string) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  logout() {\n    return signOut(auth);\n  }\n\n  getCurrentUser(): User | null {\n    return auth.currentUser;\n  }\n}\n"],"mappings":"AAEA,SAASA,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,QAAc,eAAe;AAClH,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,WAAW,QAAQ,8BAA8B;;AAE1D,MAAMC,WAAW,GAAGF,aAAa,CAACC,WAAW,CAACE,QAAQ,CAAC;AACvD,MAAMC,IAAI,GAAGR,OAAO,CAACM,WAAW,CAAC;AAGjC,OAAM,MAAOG,WAAW;EACtBC,QAAQA,CAACC,KAAa,EAAEC,QAAgB;IACtC,OAAOX,8BAA8B,CAACO,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;EAC9D;EAEAC,KAAKA,CAACF,KAAa,EAAEC,QAAgB;IACnC,OAAOV,0BAA0B,CAACM,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;EAC1D;EAEAE,MAAMA,CAAA;IACJ,OAAOX,OAAO,CAACK,IAAI,CAAC;EACtB;EAEAO,cAAcA,CAAA;IACZ,OAAOP,IAAI,CAACQ,WAAW;EACzB;;;uBAfWP,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}