{"ast":null,"code":"import { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../services/firestore.service\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"src/app/services/refresh.service\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nconst _c0 = [\"donutChart\"];\nfunction DashboardComponent_div_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 32)(1, \"span\", 33);\n    i0.ÉµÉµtext(2);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"span\", 34);\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµpipe(5, \"date\");\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const deadline_r4 = ctx.$implicit;\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(deadline_r4.name);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(i0.ÉµÉµpipeBind2(5, 2, deadline_r4.deadline, \"MMM d, yyyy\"));\n  }\n}\nfunction DashboardComponent_div_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 35);\n    i0.ÉµÉµtext(1, \" No upcoming deadlines. \");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction DashboardComponent_div_98_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 36)(1, \"button\", 37);\n    i0.ÉµÉµlistener(\"click\", function DashboardComponent_div_98_Template_button_click_1_listener() {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r5 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r5.toggleTasks());\n    });\n    i0.ÉµÉµelementStart(2, \"mat-icon\");\n    i0.ÉµÉµtext(3);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµtextInterpolate(ctx_r3.showAllTasks ? \"expand_less\" : \"expand_more\");\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r3.showAllTasks ? \"Show Less\" : \"Show More\", \" \");\n  }\n}\nChart.register(...registerables);\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(datePipe, firestoreService, authService, refreshService) {\n      this.datePipe = datePipe;\n      this.firestoreService = firestoreService;\n      this.authService = authService;\n      this.refreshService = refreshService;\n      this.tasks = [];\n      this.projects = [];\n      this.totalTasks = 0;\n      this.tasksCompleted = 0;\n      this.tasksInProgress = 0;\n      this.tasksNotStarted = 0;\n      this.overdueTasks = 0;\n      this.totalProjects = 0;\n      this.projectsCompleted = 0;\n      this.projectsInProgress = 0;\n      this.projectsNotStarted = 0;\n      this.overallProgress = 0;\n      this.upcomingDeadlines = [];\n      this.donutChartData = [];\n      this.donutChartLabels = ['Completed', 'In Progress', 'Not Started'];\n      this.currentProjectName = 'N/A';\n      this.currentProjectProgress = 0;\n      this.currentProjectDaysRemaining = 0;\n      this.showAllProjects = false;\n      this.showAllTasks = false;\n      this.currentDate = new Date();\n      this.currentMonth = this.currentDate.getMonth();\n      this.currentYear = this.currentDate.getFullYear();\n      this.calendar = [];\n    }\n    ngOnInit() {\n      this.authService.getUser().subscribe(user => {\n        console.log('ðŸ”¥ Firebase UID:', user?.uid);\n      });\n      this.generateCalendar();\n      this.loadData();\n      this.refreshService.refresh$.subscribe(() => {\n        this.loadData();\n      });\n    }\n    fetchData() {\n      this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n        this.tasks = tasks;\n        this.calculateAllSummaries();\n        this.prepareUpcomingDeadlines();\n        this.prepareChartData();\n      });\n      this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n        this.projects = projects;\n        this.prepareProjectOverview();\n      });\n    }\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this.initializeDonutChart();\n      }, 100);\n    }\n    convertToDate(date) {\n      return date instanceof Date ? date : date.toDate();\n    }\n    calculateAllSummaries() {\n      const now = new Date();\n      this.totalTasks = this.tasks.length;\n      this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n      this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n      this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n      this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && this.convertToDate(t.dueDate) < now).length;\n      this.overallProgress = this.totalTasks > 0 ? Math.round(this.tasksCompleted / this.totalTasks * 100) : 0;\n    }\n    prepareUpcomingDeadlines() {\n      this.upcomingDeadlines = this.tasks.map(t => ({\n        name: t.name,\n        deadline: this.convertToDate(t.dueDate),\n        type: 'Task'\n      })).filter(d => d.deadline >= new Date()).sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n    }\n    prepareChartData() {\n      this.donutChartData = [this.projectsCompleted, this.projectsInProgress, this.projectsNotStarted];\n      this.updateDonutChart();\n    }\n    updateDonutChart() {\n      if (!this.donutChartRef || this.donutChartData.length === 0) return;\n      const ctx = this.donutChartRef.nativeElement.getContext('2d');\n      if (this.donutChart) {\n        this.donutChart.destroy();\n      }\n      this.donutChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Completed', 'In Progress', 'Not Started'],\n          datasets: [{\n            data: this.donutChartData,\n            backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n            borderWidth: 0\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '75%',\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              enabled: true\n            }\n          }\n        }\n      });\n    }\n    prepareProjectOverview() {\n      this.totalProjects = this.projects.length;\n      this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n      this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n      this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n    }\n    initializeDonutChart() {\n      if (!this.donutChartRef || this.donutChartData.length === 0) return;\n      const canvas = this.donutChartRef.nativeElement;\n      const ctx = canvas.getContext('2d');\n      if (this.donutChart) this.donutChart.destroy();\n      this.donutChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: this.donutChartLabels,\n          datasets: [{\n            data: this.donutChartData,\n            backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n            borderWidth: 0\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '75%',\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              enabled: true\n            }\n          }\n        }\n      });\n    }\n    toggleProjects() {\n      this.showAllProjects = !this.showAllProjects;\n    }\n    toggleTasks() {\n      this.showAllTasks = !this.showAllTasks;\n    }\n    generateCalendar() {\n      const firstDay = new Date(this.currentYear, this.currentMonth, 1);\n      const lastDay = new Date(this.currentYear, this.currentMonth + 1, 0);\n      const weeks = [];\n      let currentWeek = [];\n      const startingDay = firstDay.getDay();\n      for (let i = 0; i < startingDay; i++) currentWeek.push(null);\n      for (let day = 1; day <= lastDay.getDate(); day++) {\n        if (currentWeek.length === 7) {\n          weeks.push(currentWeek);\n          currentWeek = [];\n        }\n        currentWeek.push(new Date(this.currentYear, this.currentMonth, day));\n      }\n      while (currentWeek.length < 7) currentWeek.push(null);\n      weeks.push(currentWeek);\n      this.calendar = weeks;\n    }\n    loadData() {\n      this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n        this.tasks = tasks;\n        this.calculateAllSummaries();\n        this.prepareUpcomingDeadlines();\n        this.prepareChartData();\n      });\n      this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n        this.projects = projects.map(project => {\n          let progress = 0;\n          if (project.status === 'Completed') progress = 100;else if (project.status === 'In Progress') progress = 50;\n          return {\n            ...project,\n            progress\n          };\n        });\n        this.prepareProjectOverview();\n        this.prepareChartData();\n      });\n    }\n    static {\n      this.Éµfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ÉµÉµdirectiveInject(i1.DatePipe), i0.ÉµÉµdirectiveInject(i2.FirestoreService), i0.ÉµÉµdirectiveInject(i3.AuthService), i0.ÉµÉµdirectiveInject(i4.RefreshService));\n      };\n    }\n    static {\n      this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        viewQuery: function DashboardComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ÉµÉµviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.donutChartRef = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ÉµÉµProvidersFeature([DatePipe]), i0.ÉµÉµStandaloneFeature],\n        decls: 99,\n        vars: 14,\n        consts: [[1, \"dashboard-container-original\"], [1, \"left-column\"], [1, \"dashboard-card\", \"task-status-card-original\"], [1, \"donut-chart-container\"], [2, \"width\", \"100%\", \"height\", \"200px\"], [\"donutChart\", \"\"], [1, \"status-legend-original\"], [1, \"status-item\"], [1, \"status-dot\", \"completed\"], [1, \"status-text\"], [1, \"status-count\"], [1, \"status-dot\", \"in-progress\"], [1, \"status-dot\", \"not-started\"], [1, \"dashboard-card\", \"task-summary-card-original\"], [1, \"summary-list\"], [1, \"summary-item\"], [1, \"overdue\"], [1, \"right-column\"], [1, \"project-overview-card\"], [1, \"overview-title\"], [1, \"overview-grid\"], [1, \"overview-item\"], [1, \"icon-circle\", \"blue-icon\"], [1, \"overview-text\"], [1, \"icon-circle\", \"orange-icon\"], [1, \"icon-circle\", \"gray-icon\"], [1, \"icon-circle\", \"green-icon\"], [1, \"dashboard-card\", \"upcoming-deadlines-card-original\"], [1, \"deadline-list-original\"], [\"class\", \"deadline-item\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-items\", 4, \"ngIf\"], [\"class\", \"show-more-container\", 4, \"ngIf\"], [1, \"deadline-item\"], [1, \"item-name\"], [1, \"due-date\"], [1, \"no-items\"], [1, \"show-more-container\"], [\"mat-stroked-button\", \"\", 3, \"click\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n            i0.ÉµÉµtext(4, \"Project Status\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(5, \"div\", 3);\n            i0.ÉµÉµelement(6, \"canvas\", 4, 5);\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(8, \"div\", 6)(9, \"div\", 7);\n            i0.ÉµÉµelement(10, \"span\", 8);\n            i0.ÉµÉµelementStart(11, \"span\", 9);\n            i0.ÉµÉµtext(12, \"Completed\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(13, \"span\", 10);\n            i0.ÉµÉµtext(14);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(15, \"div\", 7);\n            i0.ÉµÉµelement(16, \"span\", 11);\n            i0.ÉµÉµelementStart(17, \"span\", 9);\n            i0.ÉµÉµtext(18, \"In Progress\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(19, \"span\", 10);\n            i0.ÉµÉµtext(20);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(21, \"div\", 7);\n            i0.ÉµÉµelement(22, \"span\", 12);\n            i0.ÉµÉµelementStart(23, \"span\", 9);\n            i0.ÉµÉµtext(24, \"Not Started\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(25, \"span\", 10);\n            i0.ÉµÉµtext(26);\n            i0.ÉµÉµelementEnd()()()();\n            i0.ÉµÉµelementStart(27, \"div\", 13)(28, \"h2\");\n            i0.ÉµÉµtext(29, \"Task Summary\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(30, \"div\", 14)(31, \"div\", 15)(32, \"span\");\n            i0.ÉµÉµtext(33, \"Total Tasks\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(34, \"span\");\n            i0.ÉµÉµtext(35);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(36, \"div\", 15)(37, \"span\");\n            i0.ÉµÉµtext(38, \"Completed\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(39, \"span\");\n            i0.ÉµÉµtext(40);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(41, \"div\", 15)(42, \"span\");\n            i0.ÉµÉµtext(43, \"In Progress\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(44, \"span\");\n            i0.ÉµÉµtext(45);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(46, \"div\", 15)(47, \"span\");\n            i0.ÉµÉµtext(48, \"Not Started\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(49, \"span\", 16);\n            i0.ÉµÉµtext(50);\n            i0.ÉµÉµelementEnd()()()()();\n            i0.ÉµÉµelementStart(51, \"div\", 17)(52, \"div\", 18)(53, \"h2\", 19);\n            i0.ÉµÉµtext(54, \"Project Overview\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(55, \"div\", 20)(56, \"div\", 21)(57, \"div\", 22)(58, \"mat-icon\");\n            i0.ÉµÉµtext(59, \"assignment\");\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(60, \"div\", 23)(61, \"p\");\n            i0.ÉµÉµtext(62, \"Total Projects\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(63, \"h3\");\n            i0.ÉµÉµtext(64);\n            i0.ÉµÉµelementEnd()()();\n            i0.ÉµÉµelementStart(65, \"div\", 21)(66, \"div\", 24)(67, \"mat-icon\");\n            i0.ÉµÉµtext(68, \"hourglass_empty\");\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(69, \"div\", 23)(70, \"p\");\n            i0.ÉµÉµtext(71, \"In Progress\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(72, \"h3\");\n            i0.ÉµÉµtext(73);\n            i0.ÉµÉµelementEnd()()();\n            i0.ÉµÉµelementStart(74, \"div\", 21)(75, \"div\", 25)(76, \"mat-icon\");\n            i0.ÉµÉµtext(77, \"pause_circle\");\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(78, \"div\", 23)(79, \"p\");\n            i0.ÉµÉµtext(80, \"Not Started\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(81, \"h3\");\n            i0.ÉµÉµtext(82);\n            i0.ÉµÉµelementEnd()()();\n            i0.ÉµÉµelementStart(83, \"div\", 21)(84, \"div\", 26)(85, \"mat-icon\");\n            i0.ÉµÉµtext(86, \"check_circle\");\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(87, \"div\", 23)(88, \"p\");\n            i0.ÉµÉµtext(89, \"Completed\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(90, \"h3\");\n            i0.ÉµÉµtext(91);\n            i0.ÉµÉµelementEnd()()()()();\n            i0.ÉµÉµelementStart(92, \"div\", 27)(93, \"h2\");\n            i0.ÉµÉµtext(94, \"Upcoming Deadlines\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(95, \"div\", 28);\n            i0.ÉµÉµtemplate(96, DashboardComponent_div_96_Template, 6, 5, \"div\", 29);\n            i0.ÉµÉµtemplate(97, DashboardComponent_div_97_Template, 2, 0, \"div\", 30);\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµtemplate(98, DashboardComponent_div_98_Template, 5, 2, \"div\", 31);\n            i0.ÉµÉµelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ÉµÉµadvance(14);\n            i0.ÉµÉµtextInterpolate(ctx.projectsCompleted);\n            i0.ÉµÉµadvance(6);\n            i0.ÉµÉµtextInterpolate(ctx.projectsInProgress);\n            i0.ÉµÉµadvance(6);\n            i0.ÉµÉµtextInterpolate(ctx.projectsNotStarted);\n            i0.ÉµÉµadvance(9);\n            i0.ÉµÉµtextInterpolate(ctx.totalTasks);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksCompleted);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksInProgress);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksNotStarted);\n            i0.ÉµÉµadvance(14);\n            i0.ÉµÉµtextInterpolate(ctx.totalProjects);\n            i0.ÉµÉµadvance(9);\n            i0.ÉµÉµtextInterpolate(ctx.projectsInProgress);\n            i0.ÉµÉµadvance(9);\n            i0.ÉµÉµtextInterpolate(ctx.projectsNotStarted);\n            i0.ÉµÉµadvance(9);\n            i0.ÉµÉµtextInterpolate(ctx.projectsCompleted);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµproperty(\"ngForOf\", ctx.showAllTasks ? ctx.upcomingDeadlines : ctx.upcomingDeadlines.slice(0, 3));\n            i0.ÉµÉµadvance(1);\n            i0.ÉµÉµproperty(\"ngIf\", ctx.upcomingDeadlines.length === 0);\n            i0.ÉµÉµadvance(1);\n            i0.ÉµÉµproperty(\"ngIf\", ctx.upcomingDeadlines.length > 3);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.DatePipe, MatProgressBarModule, MatIconModule, i5.MatIcon, MatButtonModule, i6.MatButton],\n        styles: [\".dashboard-container-original[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 2fr;gap:2rem;padding:2rem;font-family:Inter,sans-serif;min-height:100vh;margin-top:30px;background-color:#fff}.left-column[_ngcontent-%COMP%], .right-column[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:2rem}.dashboard-card[_ngcontent-%COMP%]{border-radius:12px;padding:1.5rem;border:1px solid #2a2d35;box-shadow:0 4px 12px #0000001a}.dashboard-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;margin:0 0 1.5rem}.dashboard-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1rem;font-weight:500;margin:0 0 .5rem}.task-status-card-original[_ngcontent-%COMP%]   .donut-chart-container[_ngcontent-%COMP%]{position:relative;width:180px;height:200px;margin:1rem auto}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]{margin-top:2rem;display:flex;flex-direction:column;gap:.8rem}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.8rem;font-size:.9rem}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot[_ngcontent-%COMP%]{width:10px;height:10px;border-radius:50%}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.completed[_ngcontent-%COMP%]{background-color:#4ade80}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.in-progress[_ngcontent-%COMP%]{background-color:#60a5fa}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.not-started[_ngcontent-%COMP%]{background-color:#a78bfa}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-text[_ngcontent-%COMP%]{flex-grow:1}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-count[_ngcontent-%COMP%]{font-weight:500}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.8rem}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:.9rem;padding-bottom:.8rem;border-bottom:1px solid #2a2d35}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child{font-weight:500}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child.overdue{color:#f87171}.placeholder-card-original[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:.5rem 0 0;font-size:.9rem}.project-overview-card-original[_ngcontent-%COMP%]   .progress-bar-original[_ngcontent-%COMP%]{width:100%;height:8px;border-radius:4px;background-color:#151d34;overflow:hidden;margin:1rem 0}.project-overview-card-original[_ngcontent-%COMP%]   .progress-bar-original[_ngcontent-%COMP%]   .progress-fill[_ngcontent-%COMP%]{height:100%;background-color:#1a293b;border-radius:4px;transition:width .3s ease-in-out}.project-overview-card-original[_ngcontent-%COMP%]   .progress-info[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;font-size:.9rem}.project-overview-card-original[_ngcontent-%COMP%]   .progress-info[_ngcontent-%COMP%]   .progress-percentage[_ngcontent-%COMP%]{font-weight:500}.team-performance-card-original[_ngcontent-%COMP%]   .performance-chart-container[_ngcontent-%COMP%]{height:200px;margin-top:1rem}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.8rem}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:.9rem;padding-bottom:.8rem;border-bottom:1px solid #2a2d35}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]:last-child{border-bottom:none}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .no-items[_ngcontent-%COMP%]{font-style:italic;font-size:.9rem;padding:1rem 0}@media (max-width: 1024px){.dashboard-container-original[_ngcontent-%COMP%]{grid-template-columns:1fr}}@media (max-width: 768px){.dashboard-container-original[_ngcontent-%COMP%], .dashboard-card[_ngcontent-%COMP%]{padding:1rem}.task-status-card-original[_ngcontent-%COMP%]   .donut-chart-container[_ngcontent-%COMP%]{width:150px;height:150px}}.toggle-button[_ngcontent-%COMP%]{display:none}.show-more-container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-top:1.5rem;margin-bottom:.5rem}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:140px;padding:10px 20px;border:none;border-radius:30px;font-weight:500;letter-spacing:.5px;box-shadow:0 4px 12px #0003;transition:all .3s ease;position:relative;overflow:hidden;display:flex;align-items:center;justify-content:center;gap:8px}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:20px;height:20px;width:20px;transition:transform .3s ease}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(45deg,rgba(76,201,240,.15),rgba(114,9,183,.15));opacity:1;border-radius:30px}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;inset:-2px;border-radius:32px;background:linear-gradient(45deg,#4cc9f0,#7209b7);z-index:-1;opacity:.3;transition:opacity .3s ease}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 6px 15px #0000004d;background-color:#3a3d45;color:#fff}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:before{opacity:1;background:linear-gradient(45deg,rgba(76,201,240,.25),rgba(114,9,183,.25))}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:after{opacity:.8}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   mat-icon[_ngcontent-%COMP%]{transform:scale(1.2)}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{transform:translateY(1px);box-shadow:0 2px 8px #00000026}.progress-bar-original[_ngcontent-%COMP%]{position:relative}.progress-percentage-line[_ngcontent-%COMP%]{margin-left:95%;margin-top:-10px}.header-toolbar[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;z-index:1000;height:64px;display:flex;margin-right:85px;margin-bottom:30px;background-color:#fff}.header-toolbar[_ngcontent-%COMP%]   .header-actions[_ngcontent-%COMP%]{background-color:#fff;display:flex;align-items:center;gap:1rem;margin-left:auto}.header-toolbar[_ngcontent-%COMP%]   .mat-icon-button[_ngcontent-%COMP%]{color:#3f51b5}mat-icon[_ngcontent-%COMP%]{font-size:42px;width:42px;height:42px;color:#555!important;margin-left:-1rem}  .mat-menu-panel{background-color:#fff!important;color:#1a1a1a!important;padding:.5rem 1rem;border-radius:12px;box-shadow:0 4px 10px #00000026;min-width:260px}  .mat-menu-item{display:flex;align-items:center;gap:8px;font-size:14px;padding:6px 16px;color:#333!important}  .mat-menu-item mat-icon.user-icon{font-size:18px!important;min-width:20px;color:#555!important}  .mat-menu-item span{font-size:13px;line-height:1.3;color:#333}.head[_ngcontent-%COMP%]{position:fixed;top:1rem;right:1.5rem;z-index:1000}.head[_ngcontent-%COMP%]   button.mat-icon-button[_ngcontent-%COMP%]{width:48px;height:48px}.head[_ngcontent-%COMP%]   button.mat-icon-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:36px!important;width:36px!important;height:36px!important;color:#333!important}.user-info-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding-left:12px;margin-bottom:6px;gap:8px}.user-info-item[_ngcontent-%COMP%]   mat-icon.user-icon[_ngcontent-%COMP%]{font-size:18px!important;color:#666!important;min-width:20px;text-align:center;margin-left:7px;margin-top:5px}.user-info-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:13px;color:#333;line-height:1.4}.user-icon[_ngcontent-%COMP%]{font-size:18px!important;color:#666!important;margin-left:10px}  .snackbar-success{background-color:#1abc9c!important;color:#fff!important;font-weight:500}  .snackbar-error{background-color:#e74c3c!important;color:#fff!important;font-weight:500}.project-overview-card[_ngcontent-%COMP%]{background-color:var(--card-bg);padding:1.5rem;border-radius:16px;border:1px solid #2a2d35;margin-bottom:2rem;box-shadow:0 0 10px #00000014}.project-overview-card[_ngcontent-%COMP%]   .overview-title[_ngcontent-%COMP%]{font-size:1.4rem;font-weight:600;margin-bottom:1rem;text-align:center}.project-overview-card[_ngcontent-%COMP%]   .overview-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(2,1fr);gap:1.5rem}.project-overview-card[_ngcontent-%COMP%]   .overview-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:1rem;background:rgba(137,13,13,.02);padding:1rem;border-radius:12px;border:1px solid #2a2d35}.project-overview-card[_ngcontent-%COMP%]   .icon-circle[_ngcontent-%COMP%]{width:48px;height:48px;border-radius:50%;display:flex;align-items:center;justify-content:center;color:#fff;font-size:24px}.project-overview-card[_ngcontent-%COMP%]   .blue-icon[_ngcontent-%COMP%]{background-color:#3b82f6}.project-overview-card[_ngcontent-%COMP%]   .orange-icon[_ngcontent-%COMP%]{background-color:#f59e0b}.project-overview-card[_ngcontent-%COMP%]   .gray-icon[_ngcontent-%COMP%]{background-color:#6b7280}.project-overview-card[_ngcontent-%COMP%]   .green-icon[_ngcontent-%COMP%]{background-color:#10b981}.project-overview-card[_ngcontent-%COMP%]   .overview-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;font-size:.9rem;color:#0c0d0d}.project-overview-card[_ngcontent-%COMP%]   .overview-text[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;font-size:1rem;font-weight:700;color:#080707}.project-overview-card[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:27px!important;color:#fff!important;padding:26px;margin-top:14px}@media (max-width: 480px){.dashboard-container-original[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:1rem}.left-column[_ngcontent-%COMP%], .right-column[_ngcontent-%COMP%]{gap:1.5rem}.dashboard-card[_ngcontent-%COMP%]{padding:1rem}.task-status-card-original[_ngcontent-%COMP%]   .donut-chart-container[_ngcontent-%COMP%]{width:140px;height:140px}.status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]{font-size:.85rem}.status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot[_ngcontent-%COMP%]{width:8px;height:8px}.summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]{font-size:.85rem;padding-bottom:.6rem}.project-overview-card[_ngcontent-%COMP%]{padding:1rem}.project-overview-card[_ngcontent-%COMP%]   .overview-title[_ngcontent-%COMP%]{font-size:1.2rem}.project-overview-card[_ngcontent-%COMP%]   .overview-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:1rem}.project-overview-card[_ngcontent-%COMP%]   .overview-item[_ngcontent-%COMP%]{flex-direction:row;padding:.8rem}.project-overview-card[_ngcontent-%COMP%]   .icon-circle[_ngcontent-%COMP%]{width:40px;height:40px;font-size:22px;border-radius:50%;display:flex;align-items:center;justify-content:center;flex-shrink:0}.project-overview-card[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:22px!important;margin:0!important;padding:0!important;line-height:1;display:flex;align-items:center;justify-content:center}.project-overview-card[_ngcontent-%COMP%]   .overview-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.8rem}.project-overview-card[_ngcontent-%COMP%]   .overview-text[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:.95rem}.deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]{font-size:.85rem;padding-bottom:.6rem}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:8px 16px;font-size:.85rem}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:18px}}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}