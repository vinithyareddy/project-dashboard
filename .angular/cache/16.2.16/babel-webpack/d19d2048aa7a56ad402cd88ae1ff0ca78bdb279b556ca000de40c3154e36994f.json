{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"div\", 13)(1, \"a\", 14);\n    i0.…µ…µlistener(\"click\", function AuthComponent_div_16_Template_a_click_1_listener($event) {\n      i0.…µ…µrestoreView(_r4);\n      const ctx_r3 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r3.onForgotPassword($event));\n    });\n    i0.…µ…µtext(2, \"Forgot password?\");\n    i0.…µ…µelementEnd()();\n  }\n}\nfunction AuthComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementContainerStart(0);\n    i0.…µ…µelementStart(1, \"mat-form-field\", 5)(2, \"mat-label\");\n    i0.…µ…µtext(3, \"Confirm Password\");\n    i0.…µ…µelementEnd();\n    i0.…µ…µelement(4, \"input\", 15);\n    i0.…µ…µelementStart(5, \"button\", 7);\n    i0.…µ…µlistener(\"click\", function AuthComponent_ng_container_17_Template_button_click_5_listener() {\n      i0.…µ…µrestoreView(_r6);\n      const ctx_r5 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r5.toggleConfirmVisibility());\n    });\n    i0.…µ…µelementStart(6, \"mat-icon\");\n    i0.…µ…µtext(7);\n    i0.…µ…µelementEnd()()();\n    i0.…µ…µelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(4);\n    i0.…µ…µproperty(\"type\", ctx_r1.showConfirm ? \"text\" : \"password\");\n    i0.…µ…µadvance(1);\n    i0.…µ…µattribute(\"aria-label\", \"Toggle Confirm Password\");\n    i0.…µ…µadvance(2);\n    i0.…µ…µtextInterpolate(ctx_r1.showConfirm ? \"visibility_off\" : \"visibility\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"success\": a0,\n    \"error\": a1\n  };\n};\nfunction AuthComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 16);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.…µ…µnextContext();\n    i0.…µ…µproperty(\"ngClass\", i0.…µ…µpureFunction2(2, _c0, ctx_r2.errorMsg.includes(\"\\u2705\"), ctx_r2.errorMsg.includes(\"\\u274C\")));\n    i0.…µ…µadvance(1);\n    i0.…µ…µtextInterpolate1(\" \", ctx_r2.errorMsg, \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.isRegisterMode = false;\n      this.errorMsg = '';\n      this.showPassword = false;\n      this.showConfirm = false;\n      this.authForm = this.fb.group({\n        name: [''],\n        phone: [''],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.minLength(6)]],\n        confirmPassword: ['']\n      });\n    }\n    ngOnInit() {\n      this.authService.getUser().subscribe(user => {\n        if (user) {\n          this.router.navigate(['/dashboard']);\n        }\n      });\n    }\n    toggleMode() {\n      this.isRegisterMode = !this.isRegisterMode;\n      this.errorMsg = '';\n      this.authForm.get('password')?.reset();\n      this.authForm.get('confirmPassword')?.reset();\n    }\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n    toggleConfirmVisibility() {\n      this.showConfirm = !this.showConfirm;\n    }\n    onForgotPassword(event) {\n      event.preventDefault();\n      const email = this.authForm.get('email')?.value;\n      console.log('üì© Forgot password triggered with email:', email); // <-- add this\n      if (!email) {\n        this.errorMsg = '‚ùå Please enter your email to reset password';\n        return;\n      }\n      this.authService.sendPasswordResetEmail(email).then(() => {\n        this.errorMsg = '‚úÖ Password reset link sent to your email';\n      }).catch(err => {\n        const errorCode = err.code || '';\n        switch (errorCode) {\n          case 'auth/invalid-email':\n            this.errorMsg = '‚ùå Invalid email format';\n            break;\n          case 'auth/user-not-found':\n            this.errorMsg = '‚ùå Email not found';\n            break;\n          default:\n            this.errorMsg = '‚ùå Failed to send reset email';\n        }\n      });\n    }\n    onSubmit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const {\n          name,\n          phone,\n          email,\n          password,\n          confirmPassword\n        } = _this.authForm.value;\n        if (!email) {\n          _this.errorMsg = '‚ùå Email is required';\n          return;\n        }\n        // Register Flow\n        if (_this.isRegisterMode) {\n          if (!password || password.length < 6) {\n            _this.errorMsg = '‚ùå Password must be at least 6 characters';\n            return;\n          }\n          if (password !== confirmPassword) {\n            _this.errorMsg = '‚ùå Passwords do not match';\n            return;\n          }\n          try {\n            yield _this.authService.registerWithProfile({\n              name,\n              phone,\n              email,\n              password\n            });\n            _this.errorMsg = '‚úÖ Account has been created';\n            _this.router.navigate(['/dashboard']);\n          } catch (err) {\n            _this.handleFirebaseError(err);\n          }\n          return;\n        }\n        // Login Flow\n        if (!password) {\n          _this.errorMsg = '‚ùå Password is required';\n          return;\n        }\n        try {\n          yield _this.authService.login(email, password);\n          _this.router.navigate(['/dashboard']);\n        } catch (err) {\n          _this.handleFirebaseError(err);\n        }\n      })();\n    }\n    handleFirebaseError(err) {\n      const errorCode = err.code || '';\n      switch (errorCode) {\n        case 'auth/invalid-login-credentials':\n        case 'auth/user-not-found':\n        case 'auth/wrong-password':\n          this.errorMsg = '‚ùå Invalid Credentials';\n          break;\n        case 'auth/email-already-in-use':\n          this.errorMsg = '‚ùå Email already in use';\n          break;\n        case 'auth/too-many-requests':\n          this.errorMsg = '‚ùå Too many attempts. Try again later.';\n          break;\n        default:\n          this.errorMsg = err.message || '‚ùå An unexpected error occurred';\n      }\n    }\n    static {\n      this.…µfac = function AuthComponent_Factory(t) {\n        return new (t || AuthComponent)(i0.…µ…µdirectiveInject(i1.FormBuilder), i0.…µ…µdirectiveInject(i2.AuthService), i0.…µ…µdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n        type: AuthComponent,\n        selectors: [[\"app-auth\"]],\n        standalone: true,\n        features: [i0.…µ…µProvidersFeature([AuthService]), i0.…µ…µStandaloneFeature],\n        decls: 23,\n        vars: 10,\n        consts: [[1, \"auth-outer-wrapper\"], [1, \"auth-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\", \"custom-field\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"custom-input\"], [\"appearance\", \"outline\", 1, \"full-width\", \"password-field\"], [\"matInput\", \"\", \"formControlName\", \"password\", 1, \"custom-input\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [\"class\", \"forgot-link\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"error-msg\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"], [\"mat-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 1, \"full-width\", 3, \"click\"], [1, \"forgot-link\"], [\"href\", \"#\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 1, \"custom-input\", 3, \"type\"], [1, \"error-msg\", 3, \"ngClass\"]],\n        template: function AuthComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.…µ…µelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n            i0.…µ…µtext(3);\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(4, \"form\", 2);\n            i0.…µ…µlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.…µ…µelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n            i0.…µ…µtext(7, \"Email\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelement(8, \"input\", 4);\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(9, \"mat-form-field\", 5)(10, \"mat-label\");\n            i0.…µ…µtext(11, \"Password\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelement(12, \"input\", 6);\n            i0.…µ…µelementStart(13, \"button\", 7);\n            i0.…µ…µlistener(\"click\", function AuthComponent_Template_button_click_13_listener() {\n              return ctx.togglePasswordVisibility();\n            });\n            i0.…µ…µelementStart(14, \"mat-icon\");\n            i0.…µ…µtext(15);\n            i0.…µ…µelementEnd()()();\n            i0.…µ…µtemplate(16, AuthComponent_div_16_Template, 3, 0, \"div\", 8);\n            i0.…µ…µtemplate(17, AuthComponent_ng_container_17_Template, 8, 3, \"ng-container\", 9);\n            i0.…µ…µtemplate(18, AuthComponent_div_18_Template, 2, 5, \"div\", 10);\n            i0.…µ…µelementStart(19, \"button\", 11);\n            i0.…µ…µtext(20);\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(21, \"button\", 12);\n            i0.…µ…µlistener(\"click\", function AuthComponent_Template_button_click_21_listener() {\n              return ctx.toggleMode();\n            });\n            i0.…µ…µtext(22);\n            i0.…µ…µelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.…µ…µadvance(3);\n            i0.…µ…µtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n            i0.…µ…µadvance(1);\n            i0.…µ…µproperty(\"formGroup\", ctx.authForm);\n            i0.…µ…µadvance(8);\n            i0.…µ…µproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.…µ…µadvance(1);\n            i0.…µ…µattribute(\"aria-label\", \"Toggle Password\");\n            i0.…µ…µadvance(2);\n            i0.…µ…µtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n            i0.…µ…µadvance(1);\n            i0.…µ…µproperty(\"ngIf\", !ctx.isRegisterMode);\n            i0.…µ…µadvance(1);\n            i0.…µ…µproperty(\"ngIf\", ctx.isRegisterMode);\n            i0.…µ…µadvance(1);\n            i0.…µ…µproperty(\"ngIf\", ctx.errorMsg);\n            i0.…µ…µadvance(2);\n            i0.…µ…µtextInterpolate1(\" \", ctx.isRegisterMode ? \"Register\" : \"Login\", \" \");\n            i0.…µ…µadvance(2);\n            i0.…µ…µtextInterpolate1(\" Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.…µNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, i5.MatIconButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatInputModule, i7.MatInput, MatIconModule, i8.MatIcon, RouterModule],\n        styles: [\".auth-outer-wrapper[_ngcontent-%COMP%]{height:100vh;display:flex;justify-content:center;align-items:center;background:linear-gradient(to bottom right,#e9ecf5,#dcdff0)}.auth-container[_ngcontent-%COMP%]{width:100%;max-width:400px;padding:2.5rem;background-color:#2c2f36;border-radius:14px;box-shadow:0 10px 30px #0003;color:#f4f4f4;font-family:Inter,sans-serif;text-align:center}.auth-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:600;margin-bottom:2rem;color:#fff}.auth-container[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1.5rem}.auth-container[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]   .mat-form-field-outline[_ngcontent-%COMP%], .auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   .mat-form-field-outline[_ngcontent-%COMP%]{color:#666}.auth-container[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%], .auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%]{padding:.5rem 0}.auth-container[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%], .auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]{color:#f4f4f4}.auth-container[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], .auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:#b0b0b0}.auth-container[_ngcontent-%COMP%]   .primary-btn[_ngcontent-%COMP%]{background-color:#5c6bf2;color:#fff;font-weight:600;border-radius:8px;height:40px;margin-top:10px}.auth-container[_ngcontent-%COMP%]   .primary-btn[_ngcontent-%COMP%]:hover{background-color:#4a5de0}.auth-container[_ngcontent-%COMP%]   .forgot-link[_ngcontent-%COMP%]{text-align:right;margin-top:-1rem;margin-bottom:1.5rem}.auth-container[_ngcontent-%COMP%]   .forgot-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:.85rem;color:#9aa6f2;text-decoration:none}.auth-container[_ngcontent-%COMP%]   .forgot-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}.auth-container[_ngcontent-%COMP%]   .switch-mode[_ngcontent-%COMP%]{font-size:.9rem;margin-top:1.5rem;color:#c9c9c9}.auth-container[_ngcontent-%COMP%]   .switch-mode[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#9aa6f2;text-decoration:none;margin-left:6px}.auth-container[_ngcontent-%COMP%]   .switch-mode[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}.auth-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%]{font-weight:500;margin:10px 0;font-size:.85rem;text-align:center}.auth-container[_ngcontent-%COMP%]   .error-msg.success[_ngcontent-%COMP%]{color:#4cd964}.auth-container[_ngcontent-%COMP%]   .error-msg.error[_ngcontent-%COMP%]{color:#ff4d4f}.error-msg[_ngcontent-%COMP%]{color:red;font-size:1rem;font-weight:700;margin-top:1rem}\"]\n      });\n    }\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}