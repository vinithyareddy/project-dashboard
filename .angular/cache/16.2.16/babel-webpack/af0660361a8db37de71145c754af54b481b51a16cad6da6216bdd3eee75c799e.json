{"ast":null,"code":"import { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemeToggleComponent } from '../shared/theme-toggle/theme-toggle.component';\nimport { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../services/firestore.service\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nconst _c0 = [\"donutChart\"];\nconst _c1 = [\"performanceChart\"];\nfunction DashboardComponent_div_56_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 35);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµpipe(2, \"date\");\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const project_r6 = i0.ÉµÉµnextContext().$implicit;\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate(i0.ÉµÉµpipeBind2(2, 1, project_r6.dueDate, \"MMM d, yyyy\"));\n  }\n}\nfunction DashboardComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\")(1, \"h3\");\n    i0.ÉµÉµtext(2);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"div\", 30);\n    i0.ÉµÉµelement(4, \"div\", 31);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(5, \"div\", 32);\n    i0.ÉµÉµtext(6);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(7, \"div\", 33);\n    i0.ÉµÉµtemplate(8, DashboardComponent_div_56_span_8_Template, 3, 4, \"span\", 34);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const project_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(project_r6.name);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµstyleProp(\"width\", project_r6.progress, \"%\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"\", project_r6.progress, \"%\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.showAllProjects);\n  }\n}\nfunction DashboardComponent_div_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 36)(1, \"span\", 37);\n    i0.ÉµÉµtext(2);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"span\", 38);\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµpipe(5, \"date\");\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const deadline_r9 = ctx.$implicit;\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(deadline_r9.name);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate(i0.ÉµÉµpipeBind2(5, 2, deadline_r9.deadline, \"MMM d, yyyy\"));\n  }\n}\nfunction DashboardComponent_div_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 39);\n    i0.ÉµÉµtext(1, \" No upcoming deadlines. \");\n    i0.ÉµÉµelementEnd();\n  }\n}\nfunction DashboardComponent_div_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 20)(1, \"button\", 21);\n    i0.ÉµÉµlistener(\"click\", function DashboardComponent_div_74_Template_button_click_1_listener() {\n      i0.ÉµÉµrestoreView(_r11);\n      const ctx_r10 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r10.toggleTasks());\n    });\n    i0.ÉµÉµelementStart(2, \"mat-icon\");\n    i0.ÉµÉµtext(3);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(3);\n    i0.ÉµÉµtextInterpolate(ctx_r5.showAllTasks ? \"expand_less\" : \"expand_more\");\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r5.showAllTasks ? \"Show Less\" : \"Show More\", \" \");\n  }\n}\nChart.register(...registerables);\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(datePipe, firestoreService, authService) {\n      this.datePipe = datePipe;\n      this.firestoreService = firestoreService;\n      this.authService = authService;\n      this.tasks = [];\n      this.projects = [];\n      this.totalTasks = 0;\n      this.tasksCompleted = 0;\n      this.tasksInProgress = 0;\n      this.tasksNotStarted = 0;\n      this.overdueTasks = 0;\n      this.totalProjects = 0;\n      this.projectsCompleted = 0;\n      this.projectsInProgress = 0;\n      this.projectsNotStarted = 0;\n      this.overallProgress = 0;\n      this.upcomingDeadlines = [];\n      this.donutChartData = [];\n      this.donutChartLabels = ['Completed', 'In Progress', 'Not Started'];\n      this.performanceChartData = [];\n      this.performanceChartLabels = [];\n      this.currentProjectName = 'N/A';\n      this.currentProjectProgress = 0;\n      this.currentProjectDaysRemaining = 0;\n      this.showAllProjects = false;\n      this.showAllTasks = false;\n    }\n    ngOnInit() {\n      this.authService.getUser().subscribe(user => {\n        console.log('ðŸ”¥ Firebase UID:', user?.uid);\n      });\n      this.fetchData();\n    }\n    fetchData() {\n      this.firestoreService.getTasks().pipe(take(1)).subscribe(tasks => {\n        this.tasks = tasks;\n        this.calculateAllSummaries();\n        this.prepareUpcomingDeadlines();\n        this.prepareChartData();\n      });\n      this.firestoreService.getProjects().pipe(take(1)).subscribe(projects => {\n        this.projects = projects.map(project => {\n          let progress = 0;\n          if (project.status === 'Completed') progress = 100;else if (project.status === 'In Progress') progress = 50;\n          return {\n            ...project,\n            progress\n          };\n        });\n        this.prepareProjectOverview();\n      });\n    }\n    ngAfterViewInit() {\n      setTimeout(() => {\n        this.initializeDonutChart();\n        this.initializePerformanceChart();\n      }, 0);\n    }\n    convertToDate(date) {\n      return date instanceof Date ? date : date.toDate();\n    }\n    calculateAllSummaries() {\n      const now = new Date();\n      this.totalTasks = this.tasks.length;\n      this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n      this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n      this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n      this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && this.convertToDate(t.dueDate) < now).length;\n      this.overallProgress = this.totalTasks > 0 ? Math.round(this.tasksCompleted / this.totalTasks * 100) : 0;\n    }\n    prepareUpcomingDeadlines() {\n      this.upcomingDeadlines = this.tasks.map(t => ({\n        name: t.name,\n        deadline: this.convertToDate(t.dueDate),\n        type: 'Task'\n      })).filter(d => d.deadline >= new Date()).sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n    }\n    prepareChartData() {\n      this.donutChartData = [this.tasksCompleted, this.tasksInProgress, this.tasksNotStarted];\n      this.performanceChartLabels = ['Mar 1', 'Mar 8', 'Mar 15', 'Mar 22', 'Mar 29', 'Apr 5'];\n      this.performanceChartData = [1, 3, 2, 5, 4, 6];\n    }\n    prepareProjectOverview() {\n      this.totalProjects = this.projects.length;\n      this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n      this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n      this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n    }\n    initializeDonutChart() {\n      if (!this.donutChartRef || this.donutChartData.length === 0) return;\n      const canvas = this.donutChartRef.nativeElement;\n      const ctx = canvas.getContext('2d');\n      if (this.donutChart) this.donutChart.destroy();\n      this.donutChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: this.donutChartLabels,\n          datasets: [{\n            data: this.donutChartData,\n            backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n            borderWidth: 0\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '75%',\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              enabled: true\n            }\n          }\n        }\n      });\n    }\n    initializePerformanceChart() {\n      if (!this.performanceChartRef || this.performanceChartData.length === 0) return;\n      const canvas = this.performanceChartRef.nativeElement;\n      const ctx = canvas.getContext('2d');\n      if (this.performanceChart) this.performanceChart.destroy();\n      this.performanceChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: this.performanceChartLabels,\n          datasets: [{\n            label: 'Tasks Completed Weekly',\n            data: this.performanceChartData,\n            fill: false,\n            borderColor: '#60a5fa',\n            pointBackgroundColor: '#60a5fa',\n            pointBorderColor: '#60a5fa',\n            pointRadius: 4,\n            tension: 0.3\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: '#a0aec0'\n              },\n              grid: {\n                color: 'rgba(255,255,255,0.1)'\n              }\n            },\n            x: {\n              ticks: {\n                color: '#a0aec0'\n              },\n              grid: {\n                display: false\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n    toggleProjects() {\n      this.showAllProjects = !this.showAllProjects;\n    }\n    toggleTasks() {\n      this.showAllTasks = !this.showAllTasks;\n    }\n    static {\n      this.Éµfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ÉµÉµdirectiveInject(i1.DatePipe), i0.ÉµÉµdirectiveInject(i2.FirestoreService), i0.ÉµÉµdirectiveInject(i3.AuthService));\n      };\n    }\n    static {\n      this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        viewQuery: function DashboardComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ÉµÉµviewQuery(_c0, 5);\n            i0.ÉµÉµviewQuery(_c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.donutChartRef = _t.first);\n            i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.performanceChartRef = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ÉµÉµProvidersFeature([DatePipe]), i0.ÉµÉµStandaloneFeature],\n        decls: 75,\n        vars: 13,\n        consts: [[1, \"theme-toggle-icon\"], [1, \"dashboard-container-original\"], [1, \"left-column\"], [1, \"dashboard-card\", \"task-status-card-original\"], [1, \"donut-chart-container\"], [\"donutChart\", \"\"], [1, \"status-legend-original\"], [1, \"status-item\"], [1, \"status-dot\", \"completed\"], [1, \"status-text\"], [1, \"status-count\"], [1, \"status-dot\", \"in-progress\"], [1, \"status-dot\", \"not-started\"], [1, \"dashboard-card\", \"task-summary-card-original\"], [1, \"summary-list\"], [1, \"summary-item\"], [1, \"overdue\"], [1, \"right-column\"], [1, \"dashboard-card\", \"project-overview-card-original\"], [4, \"ngFor\", \"ngForOf\"], [1, \"show-more-container\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [1, \"dashboard-card\", \"team-performance-card-original\"], [1, \"performance-chart-container\"], [\"performanceChart\", \"\"], [1, \"dashboard-card\", \"upcoming-deadlines-card-original\"], [1, \"deadline-list-original\"], [\"class\", \"deadline-item\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-items\", 4, \"ngIf\"], [\"class\", \"show-more-container\", 4, \"ngIf\"], [1, \"progress-bar-original\"], [1, \"progress-fill\"], [1, \"progress-percentage-line\"], [1, \"progress-info\"], [\"class\", \"days-remaining\", 4, \"ngIf\"], [1, \"days-remaining\"], [1, \"deadline-item\"], [1, \"item-name\"], [1, \"due-date\"], [1, \"no-items\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ÉµÉµelement(0, \"app-theme-toggle\", 0);\n            i0.ÉµÉµelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n            i0.ÉµÉµtext(5, \"Task Status\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(6, \"div\", 4);\n            i0.ÉµÉµelement(7, \"canvas\", null, 5);\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(9, \"div\", 6)(10, \"div\", 7);\n            i0.ÉµÉµelement(11, \"span\", 8);\n            i0.ÉµÉµelementStart(12, \"span\", 9);\n            i0.ÉµÉµtext(13, \"Completed\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(14, \"span\", 10);\n            i0.ÉµÉµtext(15);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(16, \"div\", 7);\n            i0.ÉµÉµelement(17, \"span\", 11);\n            i0.ÉµÉµelementStart(18, \"span\", 9);\n            i0.ÉµÉµtext(19, \"In Progress\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(20, \"span\", 10);\n            i0.ÉµÉµtext(21);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(22, \"div\", 7);\n            i0.ÉµÉµelement(23, \"span\", 12);\n            i0.ÉµÉµelementStart(24, \"span\", 9);\n            i0.ÉµÉµtext(25, \"Not Started\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(26, \"span\", 10);\n            i0.ÉµÉµtext(27);\n            i0.ÉµÉµelementEnd()()()();\n            i0.ÉµÉµelementStart(28, \"div\", 13)(29, \"h2\");\n            i0.ÉµÉµtext(30, \"Task Summary\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(31, \"div\", 14)(32, \"div\", 15)(33, \"span\");\n            i0.ÉµÉµtext(34, \"Total Tasks\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(35, \"span\");\n            i0.ÉµÉµtext(36);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(37, \"div\", 15)(38, \"span\");\n            i0.ÉµÉµtext(39, \"Completed\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(40, \"span\");\n            i0.ÉµÉµtext(41);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(42, \"div\", 15)(43, \"span\");\n            i0.ÉµÉµtext(44, \"In Progress\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(45, \"span\");\n            i0.ÉµÉµtext(46);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(47, \"div\", 15)(48, \"span\");\n            i0.ÉµÉµtext(49, \"Not Started\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(50, \"span\", 16);\n            i0.ÉµÉµtext(51);\n            i0.ÉµÉµelementEnd()()()()();\n            i0.ÉµÉµelementStart(52, \"div\", 17)(53, \"div\", 18)(54, \"h2\");\n            i0.ÉµÉµtext(55, \"Project Overview\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµtemplate(56, DashboardComponent_div_56_Template, 9, 5, \"div\", 19);\n            i0.ÉµÉµelementStart(57, \"div\", 20)(58, \"button\", 21);\n            i0.ÉµÉµlistener(\"click\", function DashboardComponent_Template_button_click_58_listener() {\n              return ctx.toggleProjects();\n            });\n            i0.ÉµÉµelementStart(59, \"mat-icon\");\n            i0.ÉµÉµtext(60);\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµtext(61);\n            i0.ÉµÉµelementEnd()()();\n            i0.ÉµÉµelementStart(62, \"div\", 22)(63, \"h2\");\n            i0.ÉµÉµtext(64, \"Team Performance\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(65, \"div\", 23);\n            i0.ÉµÉµelement(66, \"canvas\", null, 24);\n            i0.ÉµÉµelementEnd()();\n            i0.ÉµÉµelementStart(68, \"div\", 25)(69, \"h2\");\n            i0.ÉµÉµtext(70, \"Upcoming Deadlines\");\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµelementStart(71, \"div\", 26);\n            i0.ÉµÉµtemplate(72, DashboardComponent_div_72_Template, 6, 5, \"div\", 27);\n            i0.ÉµÉµtemplate(73, DashboardComponent_div_73_Template, 2, 0, \"div\", 28);\n            i0.ÉµÉµelementEnd();\n            i0.ÉµÉµtemplate(74, DashboardComponent_div_74_Template, 5, 2, \"div\", 29);\n            i0.ÉµÉµelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ÉµÉµadvance(15);\n            i0.ÉµÉµtextInterpolate(ctx.tasksCompleted);\n            i0.ÉµÉµadvance(6);\n            i0.ÉµÉµtextInterpolate(ctx.tasksInProgress);\n            i0.ÉµÉµadvance(6);\n            i0.ÉµÉµtextInterpolate(ctx.tasksNotStarted);\n            i0.ÉµÉµadvance(9);\n            i0.ÉµÉµtextInterpolate(ctx.totalTasks);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksCompleted);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksInProgress);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµtextInterpolate(ctx.tasksNotStarted);\n            i0.ÉµÉµadvance(5);\n            i0.ÉµÉµproperty(\"ngForOf\", ctx.showAllProjects ? ctx.projects : ctx.projects.slice(0, 2));\n            i0.ÉµÉµadvance(4);\n            i0.ÉµÉµtextInterpolate(ctx.showAllProjects ? \"expand_less\" : \"expand_more\");\n            i0.ÉµÉµadvance(1);\n            i0.ÉµÉµtextInterpolate1(\" \", ctx.showAllProjects ? \"Show Less\" : \"Show More\", \" \");\n            i0.ÉµÉµadvance(11);\n            i0.ÉµÉµproperty(\"ngForOf\", ctx.showAllTasks ? ctx.upcomingDeadlines : ctx.upcomingDeadlines.slice(0, 3));\n            i0.ÉµÉµadvance(1);\n            i0.ÉµÉµproperty(\"ngIf\", ctx.upcomingDeadlines.length === 0);\n            i0.ÉµÉµadvance(1);\n            i0.ÉµÉµproperty(\"ngIf\", ctx.upcomingDeadlines.length > 3);\n          }\n        },\n        dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.DatePipe, MatProgressBarModule, MatIconModule, i4.MatIcon, MatButtonModule, i5.MatButton, ThemeToggleComponent],\n        styles: [\".dashboard-container-original[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 2fr;gap:2rem;padding:2rem;color:var(--text-color);background-color:var(--bg-color);font-family:Inter,sans-serif;min-height:100vh;margin-top:30px}.theme-toggle-icon[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);position:fixed;top:1rem;right:1rem;z-index:9999}.left-column[_ngcontent-%COMP%], .right-column[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;flex-direction:column;gap:2rem}.dashboard-card[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);border-radius:12px;padding:1.5rem;border:1px solid #2a2d35;box-shadow:0 4px 12px #0000001a}.dashboard-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.1rem;font-weight:600;color:var(--text-color);background-color:var(--bg-color);margin:0 0 1.5rem}.dashboard-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:1rem;font-weight:500;color:var(--text-color);background-color:var(--bg-color);margin:0 0 .5rem}.task-status-card-original[_ngcontent-%COMP%]   .donut-chart-container[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);position:relative;width:180px;height:200px;margin:1rem auto}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);margin-top:2rem;display:flex;flex-direction:column;gap:.8rem}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;align-items:center;gap:.8rem;font-size:.9rem}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);width:10px;height:10px;border-radius:50%}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.completed[_ngcontent-%COMP%]{background-color:#4ade80}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.in-progress[_ngcontent-%COMP%]{background-color:#60a5fa}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-dot.not-started[_ngcontent-%COMP%]{background-color:#a78bfa}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-text[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);flex-grow:1}.task-status-card-original[_ngcontent-%COMP%]   .status-legend-original[_ngcontent-%COMP%]   .status-item[_ngcontent-%COMP%]   .status-count[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);font-weight:500}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;flex-direction:column;gap:.8rem}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;justify-content:space-between;font-size:.9rem;padding-bottom:.8rem;border-bottom:1px solid #2a2d35}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]:last-child{color:var(--text-color);background-color:var(--bg-color);border-bottom:none}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child{color:var(--text-color);background-color:var(--bg-color)}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child{color:var(--text-color);background-color:var(--bg-color);font-weight:500}.task-summary-card-original[_ngcontent-%COMP%]   .summary-list[_ngcontent-%COMP%]   .summary-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child.overdue{color:#f87171}.placeholder-card-original[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);margin:.5rem 0 0;font-size:.9rem}.project-overview-card-original[_ngcontent-%COMP%]   .progress-bar-original[_ngcontent-%COMP%]{width:100%;height:8px;border-radius:4px;background-color:#2a2d35;overflow:hidden;margin:1rem 0}.project-overview-card-original[_ngcontent-%COMP%]   .progress-bar-original[_ngcontent-%COMP%]   .progress-fill[_ngcontent-%COMP%]{height:100%;background-color:#60a5fa;border-radius:4px;transition:width .3s ease-in-out}.project-overview-card-original[_ngcontent-%COMP%]   .progress-info[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;justify-content:space-between;align-items:center;font-size:.9rem}.project-overview-card-original[_ngcontent-%COMP%]   .progress-info[_ngcontent-%COMP%]   .days-remaining[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color)}.project-overview-card-original[_ngcontent-%COMP%]   .progress-info[_ngcontent-%COMP%]   .progress-percentage[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);font-weight:500}.team-performance-card-original[_ngcontent-%COMP%]   .performance-chart-container[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);height:200px;margin-top:1rem}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;flex-direction:column;gap:.8rem}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;justify-content:space-between;font-size:.9rem;padding-bottom:.8rem;border-bottom:1px solid #2a2d35}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]:last-child{color:var(--text-color);background-color:var(--bg-color);border-bottom:none}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]   .item-name[_ngcontent-%COMP%], .upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .deadline-item[_ngcontent-%COMP%]   .due-date[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color)}.upcoming-deadlines-card-original[_ngcontent-%COMP%]   .deadline-list-original[_ngcontent-%COMP%]   .no-items[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);font-style:italic;font-size:.9rem;padding:1rem 0}@media (max-width: 1024px){.dashboard-container-original[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);grid-template-columns:1fr}}@media (max-width: 768px){.dashboard-container-original[_ngcontent-%COMP%], .dashboard-card[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);padding:1rem}.task-status-card-original[_ngcontent-%COMP%]   .donut-chart-container[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);width:150px;height:150px}}.toggle-button[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:none}.show-more-container[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);display:flex;justify-content:center;margin-top:1.5rem;margin-bottom:.5rem}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:140px;padding:10px 20px;color:var(--text-color);background-color:var(--bg-color);border:none;border-radius:30px;font-weight:500;letter-spacing:.5px;box-shadow:0 4px 12px #0003;transition:all .3s ease;position:relative;overflow:hidden;display:flex;align-items:center;justify-content:center;gap:8px}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:20px;height:20px;width:20px;transition:transform .3s ease;color:var(--text-color);background-color:var(--bg-color)}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(45deg,rgba(76,201,240,.15),rgba(114,9,183,.15));opacity:1;border-radius:30px;color:var(--text-color);background-color:var(--bg-color)}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:after{color:var(--text-color);background-color:var(--bg-color);content:\\\"\\\";position:absolute;inset:-2px;border-radius:32px;background:linear-gradient(45deg,#4cc9f0,#7209b7);z-index:-1;opacity:.3;transition:opacity .3s ease}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{transform:translateY(-2px);box-shadow:0 6px 15px #0000004d;background-color:#3a3d45;color:#fff}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:before{color:var(--text-color);background-color:var(--bg-color);opacity:1;background:linear-gradient(45deg,rgba(76,201,240,.25),rgba(114,9,183,.25))}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:after{color:var(--text-color);background-color:var(--bg-color);opacity:.8}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   mat-icon[_ngcontent-%COMP%]{transform:scale(1.2);color:var(--text-color);background-color:var(--bg-color)}.show-more-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{color:var(--text-color);background-color:var(--bg-color);transform:translateY(1px);box-shadow:0 2px 8px #00000026}.progress-bar-original[_ngcontent-%COMP%]{color:var(--text-color);background-color:var(--bg-color);position:relative}.progress-percentage-line[_ngcontent-%COMP%]{margin-left:95%;margin-top:-10px}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}