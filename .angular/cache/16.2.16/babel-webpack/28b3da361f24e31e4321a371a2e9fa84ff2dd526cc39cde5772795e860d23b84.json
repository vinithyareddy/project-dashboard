{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"error-msg\": a0,\n    \"success-msg\": a1\n  };\n};\nfunction ChangePasswordDialogComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r0.isError, !ctx_r0.isError));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nexport let ChangePasswordDialogComponent = /*#__PURE__*/(() => {\n  class ChangePasswordDialogComponent {\n    constructor(fb, authService, dialogRef) {\n      this.fb = fb;\n      this.authService = authService;\n      this.dialogRef = dialogRef;\n      this.message = '';\n      this.isError = false;\n      this.showCurrentPassword = false;\n      this.showNewPassword = false;\n      this.showConfirmPassword = false;\n      this.passwordForm = this.fb.group({\n        currentPassword: ['', Validators.required],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.passwordForm.invalid) return;\n        const {\n          currentPassword,\n          newPassword,\n          confirmPassword\n        } = _this.passwordForm.value;\n        if (newPassword !== confirmPassword) {\n          _this.message = '❌ Passwords do not match';\n          _this.isError = true;\n          return;\n        }\n        try {\n          yield _this.authService.updateUserPassword(currentPassword, newPassword);\n          _this.message = '✅ Password updated successfully';\n          _this.isError = false;\n          _this.passwordForm.reset();\n        } catch (error) {\n          _this.message = `❌ ${error.message || 'Failed to update password'}`;\n          _this.isError = true;\n        }\n      })();\n    }\n    close() {\n      this.dialogRef.close();\n    }\n    toggleVisibility(field) {\n      if (field === 'current') {\n        this.showCurrentPassword = !this.showCurrentPassword;\n      } else if (field === 'new') {\n        this.showNewPassword = !this.showNewPassword;\n      } else if (field === 'confirm') {\n        this.showConfirmPassword = !this.showConfirmPassword;\n      }\n    }\n    static {\n      this.ɵfac = function ChangePasswordDialogComponent_Factory(t) {\n        return new (t || ChangePasswordDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ChangePasswordDialogComponent,\n        selectors: [[\"app-change-password-dialog\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 31,\n        vars: 9,\n        consts: [[1, \"change-password-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"currentPassword\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"newPassword\", \"required\", \"\", 3, \"type\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"required\", \"\", 3, \"type\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"actions\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"ngClass\"]],\n        template: function ChangePasswordDialogComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Change Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordDialogComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Current Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵelementStart(8, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_8_listener() {\n              return ctx.toggleVisibility(\"current\");\n            });\n            i0.ɵɵelementStart(9, \"mat-icon\");\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"mat-form-field\", 2)(12, \"mat-label\");\n            i0.ɵɵtext(13, \"New Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(14, \"input\", 5);\n            i0.ɵɵelementStart(15, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_15_listener() {\n              return ctx.toggleVisibility(\"new\");\n            });\n            i0.ɵɵelementStart(16, \"mat-icon\");\n            i0.ɵɵtext(17);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(18, \"mat-form-field\", 2)(19, \"mat-label\");\n            i0.ɵɵtext(20, \"Re-enter New Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(21, \"input\", 6);\n            i0.ɵɵelementStart(22, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_22_listener() {\n              return ctx.toggleVisibility(\"confirm\");\n            });\n            i0.ɵɵelementStart(23, \"mat-icon\");\n            i0.ɵɵtext(24);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(25, ChangePasswordDialogComponent_div_25_Template, 2, 5, \"div\", 7);\n            i0.ɵɵelementStart(26, \"div\", 8)(27, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_27_listener() {\n              return ctx.close();\n            });\n            i0.ɵɵtext(28, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"button\", 10);\n            i0.ɵɵtext(30, \"Update\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.passwordForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"type\", ctx.showCurrentPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.showCurrentPassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"type\", ctx.showNewPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.showNewPassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"type\", ctx.showConfirmPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.showConfirmPassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.message);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.passwordForm.invalid);\n          }\n        },\n        dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatSuffix, MatInputModule, i6.MatInput, MatButtonModule, i7.MatButton, i7.MatIconButton, MatIconModule, i8.MatIcon],\n        styles: [\".change-password-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:2rem 2.5rem;gap:2rem;box-sizing:border-box;max-width:110%;width:100%}.change-password-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:22px;font-weight:600;margin-bottom:1rem}.change-password-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1.5rem}.change-password-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.change-password-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   .mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%]{margin-top:.5rem}.change-password-container[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]{padding:1rem}.change-password-container[_ngcontent-%COMP%]   .mat-mdc-input-element[_ngcontent-%COMP%]{padding:.8rem 1rem}.change-password-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:1rem;margin-top:1.5rem}.change-password-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%]{color:red;font-size:14px}.change-password-container[_ngcontent-%COMP%]   .success-msg[_ngcontent-%COMP%]{color:green;font-size:14px}@media (max-width: 480px){.change-password-container[_ngcontent-%COMP%]{padding:1.2rem;gap:1.5rem}.change-password-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.25rem;margin-bottom:.8rem}.change-password-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{gap:1rem}.change-password-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.change-password-container[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]{padding:.5rem}.change-password-container[_ngcontent-%COMP%]   .mat-mdc-input-element[_ngcontent-%COMP%]{padding:.6rem .8rem;font-size:.9rem}.change-password-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch;gap:.8rem;margin-top:1rem}.change-password-container[_ngcontent-%COMP%]   .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}.change-password-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%], .change-password-container[_ngcontent-%COMP%]   .success-msg[_ngcontent-%COMP%]{font-size:.9rem;text-align:center}}\"]\n      });\n    }\n  }\n  return ChangePasswordDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}