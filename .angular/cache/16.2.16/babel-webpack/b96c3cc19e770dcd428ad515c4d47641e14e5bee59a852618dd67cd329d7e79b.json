{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nfunction AuthComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 4)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AuthComponent_ng_container_15_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleConfirmVisibility());\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r0.showConfirm ? \"text\" : \"password\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle Confirm Password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.showConfirm ? \"visibility_off\" : \"visibility\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"success\": a0,\n    \"error\": a1\n  };\n};\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.errorMsg.includes(\"\\u2705\"), ctx_r1.errorMsg.includes(\"\\u274C\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMsg, \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.isRegisterMode = false;\n      this.errorMsg = '';\n      this.showPassword = false;\n      this.showConfirm = false;\n      this.authForm = this.fb.group({\n        name: [''],\n        phone: [''],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['']\n      });\n    }\n    ngOnInit() {\n      this.authService.getUser().subscribe(user => {\n        if (user) {\n          this.router.navigate(['/dashboard']);\n        }\n      });\n    }\n    toggleMode() {\n      this.isRegisterMode = !this.isRegisterMode;\n      this.errorMsg = '';\n    }\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n    toggleConfirmVisibility() {\n      this.showConfirm = !this.showConfirm;\n    }\n    onSubmit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.authForm.invalid) return;\n        const {\n          name,\n          phone,\n          email,\n          password,\n          confirmPassword\n        } = _this.authForm.value;\n        if (_this.isRegisterMode && password !== confirmPassword) {\n          _this.errorMsg = '❌ Passwords do not match';\n          return;\n        }\n        try {\n          if (_this.isRegisterMode) {\n            yield _this.authService.registerWithProfile({\n              name,\n              phone,\n              email,\n              password\n            });\n            _this.errorMsg = '✅ Account has been created';\n          } else {\n            yield _this.authService.login(email, password);\n          }\n          _this.router.navigate(['/dashboard']);\n        } catch (err) {\n          const errorCode = err.code || '';\n          switch (errorCode) {\n            case 'auth/invalid-login-credentials':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              _this.errorMsg = '❌ Invalid Credentials';\n              break;\n            case 'auth/email-already-in-use':\n              _this.errorMsg = '❌ Email already in use';\n              break;\n            case 'auth/too-many-requests':\n              _this.errorMsg = '❌ Too many attempts. Try again later.';\n              break;\n            default:\n              _this.errorMsg = err.message || '❌ An unexpected error occurred';\n          }\n        }\n      })();\n    }\n    static {\n      this.ɵfac = function AuthComponent_Factory(t) {\n        return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthComponent,\n        selectors: [[\"app-auth\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([AuthService] // ✅ Add this line to fix injection error\n        ), i0.ɵɵStandaloneFeature],\n        decls: 21,\n        vars: 9,\n        consts: [[1, \"auth-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\", \"custom-field\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"custom-input\"], [\"appearance\", \"outline\", 1, \"full-width\", \"password-field\"], [\"matInput\", \"\", \"formControlName\", \"password\", 1, \"custom-input\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"error-msg\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"], [\"mat-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 1, \"full-width\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 1, \"custom-input\", 3, \"type\"], [1, \"error-msg\", 3, \"ngClass\"]],\n        template: function AuthComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-form-field\", 4)(9, \"mat-label\");\n            i0.ɵɵtext(10, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 5);\n            i0.ɵɵelementStart(12, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_12_listener() {\n              return ctx.togglePasswordVisibility();\n            });\n            i0.ɵɵelementStart(13, \"mat-icon\");\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(15, AuthComponent_ng_container_15_Template, 8, 3, \"ng-container\", 7);\n            i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 2, 5, \"div\", 8);\n            i0.ɵɵelementStart(17, \"button\", 9);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_19_listener() {\n              return ctx.toggleMode();\n            });\n            i0.ɵɵtext(20);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵattribute(\"aria-label\", \"Toggle Password\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isRegisterMode);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isRegisterMode ? \"Register\" : \"Login\", \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, i5.MatButton, i5.MatIconButton, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatSuffix, MatInputModule, i7.MatInput, MatIconModule, i8.MatIcon, RouterModule],\n        styles: [\".auth-container[_ngcontent-%COMP%]{max-width:400px;margin:4rem auto;padding:2rem;background:#fff;border-radius:12px;box-shadow:0 8px 16px #0000001a}.auth-container[_ngcontent-%COMP%]   input.mat-input-element[_ngcontent-%COMP%]{color:#333!important;caret-color:#000}.auth-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{color:#999!important}.auth-container[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]{color:#555}.auth-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.5rem}.auth-container[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}.auth-container[_ngcontent-%COMP%]   .error-msg[_ngcontent-%COMP%]{margin:10px 0;font-weight:500;text-align:center}.auth-container[_ngcontent-%COMP%]   .error-msg.success[_ngcontent-%COMP%]{color:#2ecc71}.auth-container[_ngcontent-%COMP%]   .error-msg.error[_ngcontent-%COMP%]{color:#e74c3c}.auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{letter-spacing:1px}.auth-container[_ngcontent-%COMP%]   .password-field[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:20px;color:#333}  input.mat-input-element{color:#000!important;caret-color:#000!important;background-color:#fff!important}  .mat-form-field-infix{background-color:#fff!important}  .mat-input-element::placeholder{color:#999!important}.custom-input[_ngcontent-%COMP%]{color:#000!important;caret-color:#000!important;background-color:#fff!important}\"]\n      });\n    }\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}