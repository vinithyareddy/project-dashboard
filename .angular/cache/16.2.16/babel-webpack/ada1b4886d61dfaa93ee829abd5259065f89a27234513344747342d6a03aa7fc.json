{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ThemeToggleComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"\\uD83C\\uDF19\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction ThemeToggleComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"\\u2600\\uFE0F\");\n    i0.…µ…µelementEnd();\n  }\n}\nexport class ThemeToggleComponent {\n  constructor() {\n    this.isDarkMode = false;\n  }\n  ngOnInit() {\n    const savedTheme = localStorage.getItem('theme') || 'light';\n    this.isDarkMode = savedTheme === 'dark';\n    document.documentElement.setAttribute('data-theme', savedTheme);\n    this.updateBodyClass(this.isDarkMode);\n  }\n  toggleTheme() {\n    this.isDarkMode = !this.isDarkMode;\n    const theme = this.isDarkMode ? 'dark' : 'light';\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n    this.updateBodyClass(this.isDarkMode);\n  }\n  updateBodyClass(isDarkMode) {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n      document.body.classList.remove('light-mode');\n    } else {\n      document.body.classList.add('light-mode');\n      document.body.classList.remove('dark-mode');\n    }\n  }\n  static {\n    this.…µfac = function ThemeToggleComponent_Factory(t) {\n      return new (t || ThemeToggleComponent)();\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: ThemeToggleComponent,\n      selectors: [[\"app-theme-toggle\"]],\n      standalone: true,\n      features: [i0.…µ…µStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"title\", \"Toggle Theme\", 1, \"theme-toggle-btn\", 3, \"click\"], [4, \"ngIf\"]],\n      template: function ThemeToggleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"button\", 0);\n          i0.…µ…µlistener(\"click\", function ThemeToggleComponent_Template_button_click_0_listener() {\n            return ctx.toggleTheme();\n          });\n          i0.…µ…µtemplate(1, ThemeToggleComponent_span_1_Template, 2, 0, \"span\", 1);\n          i0.…µ…µtemplate(2, ThemeToggleComponent_span_2_Template, 2, 0, \"span\", 1);\n          i0.…µ…µelementEnd();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngIf\", !ctx.isDarkMode);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngIf\", ctx.isDarkMode);\n        }\n      },\n      dependencies: [CommonModule, i1.NgIf],\n      styles: [\".theme-toggle-btn[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 1rem;\\n  right: 1rem;\\n  z-index: 9999;\\n  background: none;\\n  border: none;\\n  font-size: 2rem;\\n  cursor: pointer;\\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3RoZW1lLXRvZ2dsZS90aGVtZS10b2dnbGUuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMGdpdGh1YiUyMHByb2plY3RzL3Byb2plY3QtZGFzaGJvYXJkL3NyYy9hcHAvc2hhcmVkL3RoZW1lLXRvZ2dsZS90aGVtZS10b2dnbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSx3QkFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLnRoZW1lLXRvZ2dsZS1idG4ge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDFyZW07XG4gICAgcmlnaHQ6IDFyZW07XG4gICAgei1pbmRleDogOTk5OTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcbiAgfVxuICAiLCIudGhlbWUtdG9nZ2xlLWJ0biB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxcmVtO1xuICByaWdodDogMXJlbTtcbiAgei1pbmRleDogOTk5OTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBmb250LXNpemU6IDJyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","i0","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","ThemeToggleComponent","constructor","isDarkMode","ngOnInit","savedTheme","localStorage","getItem","document","documentElement","setAttribute","updateBodyClass","toggleTheme","theme","setItem","body","classList","add","remove","selectors","standalone","features","…µ…µStandaloneFeature","decls","vars","consts","template","ThemeToggleComponent_Template","rf","ctx","…µ…µlistener","ThemeToggleComponent_Template_button_click_0_listener","…µ…µtemplate","ThemeToggleComponent_span_1_Template","ThemeToggleComponent_span_2_Template","…µ…µadvance","…µ…µproperty","i1","NgIf","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/shared/theme-toggle/theme-toggle.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/shared/theme-toggle/theme-toggle.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-theme-toggle',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './theme-toggle.component.html',\n  styleUrls: ['./theme-toggle.component.scss']\n})\nexport class ThemeToggleComponent implements OnInit {\n  isDarkMode = false;\n\n  ngOnInit(): void {\n    const savedTheme = localStorage.getItem('theme') || 'light';\n    this.isDarkMode = savedTheme === 'dark';\n    document.documentElement.setAttribute('data-theme', savedTheme);\n    this.updateBodyClass(this.isDarkMode);\n  }\n\n  toggleTheme(): void {\n    this.isDarkMode = !this.isDarkMode;\n    const theme = this.isDarkMode ? 'dark' : 'light';\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n    this.updateBodyClass(this.isDarkMode);\n  }\n\n  private updateBodyClass(isDarkMode: boolean): void {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n      document.body.classList.remove('light-mode');\n    } else {\n      document.body.classList.add('light-mode');\n      document.body.classList.remove('dark-mode');\n    }\n  }\n}\n","<button class=\"theme-toggle-btn\" (click)=\"toggleTheme()\" title=\"Toggle Theme\">\n    <span *ngIf=\"!isDarkMode\">üåô</span>\n    <span *ngIf=\"isDarkMode\">‚òÄÔ∏è</span>\n  </button>\n  "],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;;;;ICA1CC,EAAA,CAAAC,cAAA,WAA0B;IAAAD,EAAA,CAAAE,MAAA,mBAAE;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACnCH,EAAA,CAAAC,cAAA,WAAyB;IAAAD,EAAA,CAAAE,MAAA,mBAAE;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADQtC,OAAM,MAAOC,oBAAoB;EAPjCC,YAAA;IAQE,KAAAC,UAAU,GAAG,KAAK;;EAElBC,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;IAC3D,IAAI,CAACJ,UAAU,GAAGE,UAAU,KAAK,MAAM;IACvCG,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEL,UAAU,CAAC;IAC/D,IAAI,CAACM,eAAe,CAAC,IAAI,CAACR,UAAU,CAAC;EACvC;EAEAS,WAAWA,CAAA;IACT,IAAI,CAACT,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClC,MAAMU,KAAK,GAAG,IAAI,CAACV,UAAU,GAAG,MAAM,GAAG,OAAO;IAChDK,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEG,KAAK,CAAC;IAC1DP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;IACpC,IAAI,CAACF,eAAe,CAAC,IAAI,CAACR,UAAU,CAAC;EACvC;EAEQQ,eAAeA,CAACR,UAAmB;IACzC,IAAIA,UAAU,EAAE;MACdK,QAAQ,CAACO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACxCT,QAAQ,CAACO,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;KAC7C,MAAM;MACLV,QAAQ,CAACO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACzCT,QAAQ,CAACO,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;EAE/C;;;uBA1BWjB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAkB,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAxB,EAAA,CAAAyB,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVjC/B,EAAA,CAAAC,cAAA,gBAA8E;UAA7CD,EAAA,CAAAiC,UAAA,mBAAAC,sDAAA;YAAA,OAASF,GAAA,CAAAjB,WAAA,EAAa;UAAA,EAAC;UACpDf,EAAA,CAAAmC,UAAA,IAAAC,oCAAA,kBAAmC;UACnCpC,EAAA,CAAAmC,UAAA,IAAAE,oCAAA,kBAAkC;UACpCrC,EAAA,CAAAG,YAAA,EAAS;;;UAFAH,EAAA,CAAAsC,SAAA,GAAiB;UAAjBtC,EAAA,CAAAuC,UAAA,UAAAP,GAAA,CAAA1B,UAAA,CAAiB;UACjBN,EAAA,CAAAsC,SAAA,GAAgB;UAAhBtC,EAAA,CAAAuC,UAAA,SAAAP,GAAA,CAAA1B,UAAA,CAAgB;;;qBDIfP,YAAY,EAAAyC,EAAA,CAAAC,IAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}