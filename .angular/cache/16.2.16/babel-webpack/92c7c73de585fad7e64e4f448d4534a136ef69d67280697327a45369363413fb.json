{"ast":null,"code":"import { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport class AuthService {\n  constructor(auth) {\n    this.auth = auth;\n    this.currentUserSubject = new BehaviorSubject(null);\n    // Listen for auth state changes\n    onAuthStateChanged(this.auth, user => {\n      this.currentUserSubject.next(user);\n    });\n  }\n  /** Register new user */\n  register(email, password) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n  /** Login existing user */\n  login(email, password) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n  /** Logout user */\n  logout() {\n    return signOut(this.auth);\n  }\n  /** Get observable for user */\n  getUser() {\n    return this.currentUserSubject.asObservable();\n  }\n  /** Get UID of current user */\n  getUserId() {\n    return this.auth.currentUser?.uid || null;\n  }\n  /** Get current user object */\n  getCurrentUser() {\n    return this.auth.currentUser;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Auth));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","BehaviorSubject","AuthService","constructor","auth","currentUserSubject","user","next","register","email","password","login","logout","getUser","asObservable","getUserId","currentUser","uid","getCurrentUser","i0","ɵɵinject","i1","Auth","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Auth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  User\n} from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\n\n  constructor(private auth: Auth) {\n    // Listen for auth state changes\n    onAuthStateChanged(this.auth, user => {\n      this.currentUserSubject.next(user);\n    });\n  }\n\n  /** Register new user */\n  register(email: string, password: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  /** Login existing user */\n  login(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n  /** Logout user */\n  logout() {\n    return signOut(this.auth);\n  }\n\n  /** Get observable for user */\n  getUser() {\n    return this.currentUserSubject.asObservable();\n  }\n\n  /** Get UID of current user */\n  getUserId(): string | null {\n    return this.auth.currentUser?.uid || null;\n  }\n\n  /** Get current user object */\n  getCurrentUser(): User | null {\n    return this.auth.currentUser;\n  }\n}\n"],"mappings":"AACA,SAEEA,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,EACPC,kBAAkB,QAEb,oBAAoB;AAC3B,SAASC,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAU;IAAV,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,kBAAkB,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAAC;IAGjE;IACAD,kBAAkB,CAAC,IAAI,CAACI,IAAI,EAAEE,IAAI,IAAG;MACnC,IAAI,CAACD,kBAAkB,CAACE,IAAI,CAACD,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ;EAEA;EACAE,QAAQA,CAACC,KAAa,EAAEC,QAAgB;IACtC,OAAOZ,8BAA8B,CAAC,IAAI,CAACM,IAAI,EAAEK,KAAK,EAAEC,QAAQ,CAAC;EACnE;EAEA;EACAC,KAAKA,CAACF,KAAa,EAAEC,QAAgB;IACnC,OAAOb,0BAA0B,CAAC,IAAI,CAACO,IAAI,EAAEK,KAAK,EAAEC,QAAQ,CAAC;EAC/D;EAEA;EACAE,MAAMA,CAAA;IACJ,OAAOb,OAAO,CAAC,IAAI,CAACK,IAAI,CAAC;EAC3B;EAEA;EACAS,OAAOA,CAAA;IACL,OAAO,IAAI,CAACR,kBAAkB,CAACS,YAAY,EAAE;EAC/C;EAEA;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACX,IAAI,CAACY,WAAW,EAAEC,GAAG,IAAI,IAAI;EAC3C;EAEA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACd,IAAI,CAACY,WAAW;EAC9B;;;uBAtCWd,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,IAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}