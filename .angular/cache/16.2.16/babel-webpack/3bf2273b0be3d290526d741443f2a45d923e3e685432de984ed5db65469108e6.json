{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AuthComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMsg);\n  }\n}\nexport class AuthComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isRegisterMode = false;\n    this.errorMsg = '';\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.authForm.invalid) return;\n      const {\n        email,\n        password\n      } = _this.authForm.value;\n      try {\n        if (_this.isRegisterMode) {\n          yield _this.authService.register(email, password);\n        } else {\n          yield _this.authService.login(email, password);\n        }\n        _this.router.navigate(['/dashboard']);\n      } catch (err) {\n        _this.errorMsg = err.message;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([AuthService]), i0.ɵɵStandaloneFeature],\n      decls: 10,\n      vars: 5,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [\"type\", \"submit\"], [3, \"click\"], [\"style\", \"color:red;\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelement(3, \"input\", 1)(4, \"input\", 2);\n          i0.ɵɵelementStart(5, \"button\", 3);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_7_listener() {\n            return ctx.toggleMode();\n          });\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, AuthComponent_p_9_Template, 2, 1, \"p\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isRegisterMode ? \"Register\" : \"Login\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Switch to \", ctx.isRegisterMode ? \"Login\" : \"Register\", \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatButtonModule, MatFormFieldModule, MatInputModule, RouterModule],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatInputModule","RouterModule","AuthService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMsg","AuthComponent","constructor","fb","authService","router","isRegisterMode","authForm","group","email","required","password","minLength","toggleMode","onSubmit","_this","_asyncToGenerator","invalid","value","register","login","navigate","err","message","ɵɵdirectiveInject","i1","FormBuilder","i2","i3","Router","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵlistener","AuthComponent_Template_form_ngSubmit_2_listener","ɵɵelement","AuthComponent_Template_button_click_7_listener","ɵɵtemplate","AuthComponent_p_9_Template","ɵɵproperty","ɵɵtextInterpolate1","i4","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/auth/auth/auth.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule\n  ],\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  providers: [AuthService]\n})\nexport class AuthComponent {\n  authForm: FormGroup;\n  isRegisterMode = false;\n  errorMsg = '';\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\n    this.authForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  toggleMode() {\n    this.isRegisterMode = !this.isRegisterMode;\n    this.errorMsg = '';\n  }\n\n  async onSubmit() {\n    if (this.authForm.invalid) return;\n\n    const { email, password } = this.authForm.value;\n    try {\n      if (this.isRegisterMode) {\n        await this.authService.register(email, password);\n      } else {\n        await this.authService.login(email, password);\n      }\n      this.router.navigate(['/dashboard']);\n    } catch (err: any) {\n      this.errorMsg = err.message;\n    }\n  }\n}\n","<h2>{{ isRegisterMode ? 'Register' : 'Login' }}</h2>\n<form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n  <input type=\"email\" formControlName=\"email\" placeholder=\"Email\">\n  <input type=\"password\" formControlName=\"password\" placeholder=\"Password\">\n  <button type=\"submit\">{{ isRegisterMode ? 'Register' : 'Login' }}</button>\n</form>\n<button (click)=\"toggleMode()\">Switch to {{ isRegisterMode ? 'Login' : 'Register' }}</button>\n<p *ngIf=\"errorMsg\" style=\"color:red;\">{{ errorMsg }}</p>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}