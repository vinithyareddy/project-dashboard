{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc, updateDoc, deleteDoc, doc, getDocs } from '@angular/fire/firestore';\nimport { from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class FirestoreService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  }\n  // ----- Tasks -----\n  addTask(task) {\n    return from(addDoc(collection(this.firestore, 'tasks'), task));\n  }\n  updateTask(taskId, updates) {\n    return from(updateDoc(doc(this.firestore, `tasks/${taskId}`), updates));\n  }\n  deleteTask(taskId) {\n    return from(deleteDoc(doc(this.firestore, `tasks/${taskId}`)));\n  }\n  getTasks() {\n    return from(getDocs(collection(this.firestore, 'tasks'))).pipe(switchMap(snapshot => {\n      const tasks = snapshot.docs.map(docSnap => ({\n        id: docSnap.id,\n        ...docSnap.data()\n      }));\n      return of(tasks);\n    }));\n  }\n  // ----- Projects -----\n  addProject(project) {\n    return from(addDoc(collection(this.firestore, 'projects'), project));\n  }\n  updateProject(projectId, updates) {\n    return from(updateDoc(doc(this.firestore, `projects/${projectId}`), updates));\n  }\n  deleteProject(projectId) {\n    return from(deleteDoc(doc(this.firestore, `projects/${projectId}`)));\n  }\n  getProjects() {\n    var _this = this;\n    return this.getCollectionPath('projects').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (path) {\n        const snapshot = yield getDocs(collection(_this.firestore, path));\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n  // ----- Teams -----\n  addTeamMember(member) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), member))));\n  }\n  updateTeamMember(memberId, updates) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${memberId}`), updates))));\n  }\n  deleteTeamMember(memberId) {\n    return this.getCollectionPath('teams').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${memberId}`)))));\n  }\n  getTeamMembers() {\n    var _this2 = this;\n    return this.getCollectionPath('teams').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (path) {\n        const snapshot = yield getDocs(collection(_this2.firestore, path));\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()));\n  }\n  static {\n    this.ɵfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ɵɵinject(i1.Firestore));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","from","of","switchMap","FirestoreService","constructor","firestore","addTask","task","updateTask","taskId","updates","deleteTask","getTasks","pipe","snapshot","tasks","docs","map","docSnap","id","data","addProject","project","updateProject","projectId","deleteProject","getProjects","_this","getCollectionPath","_ref","_asyncToGenerator","path","_x","apply","arguments","addTeamMember","member","updateTeamMember","memberId","deleteTeamMember","getTeamMembers","_this2","_ref2","_x2","i0","ɵɵinject","i1","Firestore","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs\n} from '@angular/fire/firestore';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { from, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore) {}\n\n  // ----- Tasks -----\n  addTask(task: Task): Observable<any> {\n    return from(addDoc(collection(this.firestore, 'tasks'), task));\n  }\n\n  updateTask(taskId: string, updates: Partial<Task>): Observable<any> {\n    return from(updateDoc(doc(this.firestore, `tasks/${taskId}`), updates));\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    return from(deleteDoc(doc(this.firestore, `tasks/${taskId}`)));\n  }\n\n  getTasks(): Observable<Task[]> {\n    return from(getDocs(collection(this.firestore, 'tasks'))).pipe(\n      switchMap((snapshot: any) => {\n        const tasks = snapshot.docs.map((docSnap: any) => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }) as Task);\n        return of(tasks);\n      })\n    );\n  }\n  \n\n  // ----- Projects -----\n  addProject(project: Project): Observable<any> {\n    return from(addDoc(collection(this.firestore, 'projects'), project));\n  }\n\n  updateProject(projectId: string, updates: Partial<Project>): Observable<any> {\n    return from(updateDoc(doc(this.firestore, `projects/${projectId}`), updates));\n  }\n\n  deleteProject(projectId: string): Observable<any> {\n    return from(deleteDoc(doc(this.firestore, `projects/${projectId}`)));\n  }\n\n  getProjects(): Observable<Project[]> {\n    return this.getCollectionPath('projects').pipe(\n      switchMap(async (path) => {\n        const snapshot = await getDocs(collection(this.firestore, path));\n        return snapshot.docs.map((docSnap: any) => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        } as Project));\n      })\n    );\n  }\n  \n  // ----- Teams -----\naddTeamMember(member: TeamMember): Observable<any> {\n  return this.getCollectionPath('teams').pipe(\n    switchMap((path) => from(addDoc(collection(this.firestore, path), member)))\n  );\n}\n\nupdateTeamMember(memberId: string, updates: Partial<TeamMember>): Observable<any> {\n  return this.getCollectionPath('teams').pipe(\n    switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${memberId}`), updates)))\n  );\n}\n\ndeleteTeamMember(memberId: string): Observable<any> {\n  return this.getCollectionPath('teams').pipe(\n    switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${memberId}`))))\n  );\n}\n\ngetTeamMembers(): Observable<TeamMember[]> {\n  return this.getCollectionPath('teams').pipe(\n    switchMap(async (path) => {\n      const snapshot = await getDocs(collection(this.firestore, path));\n      return snapshot.docs.map((docSnap: any) => ({ id: docSnap.id, ...docSnap.data() } as TeamMember));\n    })\n  );\n}\n\n}\n"],"mappings":";AACA,SAEEA,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,GAAG,EACHC,OAAO,QACF,yBAAyB;AAGhC,SAASC,IAAI,EAAcC,EAAE,QAAQ,MAAM;AAC3C,SAASC,SAAS,QAAQ,gBAAgB;;;AAK1C,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;EAAc;EAE3C;EACAC,OAAOA,CAACC,IAAU;IAChB,OAAOP,IAAI,CAACL,MAAM,CAACD,UAAU,CAAC,IAAI,CAACW,SAAS,EAAE,OAAO,CAAC,EAAEE,IAAI,CAAC,CAAC;EAChE;EAEAC,UAAUA,CAACC,MAAc,EAAEC,OAAsB;IAC/C,OAAOV,IAAI,CAACJ,SAAS,CAACE,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,SAASI,MAAM,EAAE,CAAC,EAAEC,OAAO,CAAC,CAAC;EACzE;EAEAC,UAAUA,CAACF,MAAc;IACvB,OAAOT,IAAI,CAACH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,SAASI,MAAM,EAAE,CAAC,CAAC,CAAC;EAChE;EAEAG,QAAQA,CAAA;IACN,OAAOZ,IAAI,CAACD,OAAO,CAACL,UAAU,CAAC,IAAI,CAACW,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI,CAC5DX,SAAS,CAAEY,QAAa,IAAI;MAC1B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,OAAY,KAAM;QACjDC,EAAE,EAAED,OAAO,CAACC,EAAE;QACd,GAAGD,OAAO,CAACE,IAAI;OAChB,CAAS,CAAC;MACX,OAAOnB,EAAE,CAACc,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;EAGA;EACAM,UAAUA,CAACC,OAAgB;IACzB,OAAOtB,IAAI,CAACL,MAAM,CAACD,UAAU,CAAC,IAAI,CAACW,SAAS,EAAE,UAAU,CAAC,EAAEiB,OAAO,CAAC,CAAC;EACtE;EAEAC,aAAaA,CAACC,SAAiB,EAAEd,OAAyB;IACxD,OAAOV,IAAI,CAACJ,SAAS,CAACE,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,YAAYmB,SAAS,EAAE,CAAC,EAAEd,OAAO,CAAC,CAAC;EAC/E;EAEAe,aAAaA,CAACD,SAAiB;IAC7B,OAAOxB,IAAI,CAACH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,YAAYmB,SAAS,EAAE,CAAC,CAAC,CAAC;EACtE;EAEAE,WAAWA,CAAA;IAAA,IAAAC,KAAA;IACT,OAAO,IAAI,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAACf,IAAI,CAC5CX,SAAS;MAAA,IAAA2B,IAAA,GAAAC,iBAAA,CAAC,WAAOC,IAAI,EAAI;QACvB,MAAMjB,QAAQ,SAASf,OAAO,CAACL,UAAU,CAACiC,KAAI,CAACtB,SAAS,EAAE0B,IAAI,CAAC,CAAC;QAChE,OAAOjB,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,OAAY,KAAM;UAC1CC,EAAE,EAAED,OAAO,CAACC,EAAE;UACd,GAAGD,OAAO,CAACE,IAAI;SACJ,EAAC;MAChB,CAAC;MAAA,iBAAAY,EAAA;QAAA,OAAAH,IAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,CACH;EACH;EAEA;EACFC,aAAaA,CAACC,MAAkB;IAC9B,OAAO,IAAI,CAACR,iBAAiB,CAAC,OAAO,CAAC,CAACf,IAAI,CACzCX,SAAS,CAAE6B,IAAI,IAAK/B,IAAI,CAACL,MAAM,CAACD,UAAU,CAAC,IAAI,CAACW,SAAS,EAAE0B,IAAI,CAAC,EAAEK,MAAM,CAAC,CAAC,CAAC,CAC5E;EACH;EAEAC,gBAAgBA,CAACC,QAAgB,EAAE5B,OAA4B;IAC7D,OAAO,IAAI,CAACkB,iBAAiB,CAAC,OAAO,CAAC,CAACf,IAAI,CACzCX,SAAS,CAAE6B,IAAI,IAAK/B,IAAI,CAACJ,SAAS,CAACE,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,GAAG0B,IAAI,IAAIO,QAAQ,EAAE,CAAC,EAAE5B,OAAO,CAAC,CAAC,CAAC,CAC1F;EACH;EAEA6B,gBAAgBA,CAACD,QAAgB;IAC/B,OAAO,IAAI,CAACV,iBAAiB,CAAC,OAAO,CAAC,CAACf,IAAI,CACzCX,SAAS,CAAE6B,IAAI,IAAK/B,IAAI,CAACH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACO,SAAS,EAAE,GAAG0B,IAAI,IAAIO,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CACjF;EACH;EAEAE,cAAcA,CAAA;IAAA,IAAAC,MAAA;IACZ,OAAO,IAAI,CAACb,iBAAiB,CAAC,OAAO,CAAC,CAACf,IAAI,CACzCX,SAAS;MAAA,IAAAwC,KAAA,GAAAZ,iBAAA,CAAC,WAAOC,IAAI,EAAI;QACvB,MAAMjB,QAAQ,SAASf,OAAO,CAACL,UAAU,CAAC+C,MAAI,CAACpC,SAAS,EAAE0B,IAAI,CAAC,CAAC;QAChE,OAAOjB,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,OAAY,KAAM;UAAEC,EAAE,EAAED,OAAO,CAACC,EAAE;UAAE,GAAGD,OAAO,CAACE,IAAI;QAAE,CAAiB,EAAC;MACnG,CAAC;MAAA,iBAAAuB,GAAA;QAAA,OAAAD,KAAA,CAAAT,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,CACH;EACH;;;uBAhFa/B,gBAAgB,EAAAyC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;IAAA;EAAA;;;aAAhB5C,gBAAgB;MAAA6C,OAAA,EAAhB7C,gBAAgB,CAAA8C,IAAA;MAAAC,UAAA,EADH;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}