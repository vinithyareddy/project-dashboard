{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RefreshService {\n  constructor() {\n    this.refreshSource = new Subject();\n    this.refresh$ = this.refreshSource.asObservable();\n  }\n  triggerRefresh() {\n    this.refreshSource.next();\n  }\n  static {\n    this.ɵfac = function RefreshService_Factory(t) {\n      return new (t || RefreshService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RefreshService,\n      factory: RefreshService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Subject","RefreshService","constructor","refreshSource","refresh$","asObservable","triggerRefresh","next","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/refresh.service.ts"],"sourcesContent":["// refresh.service.ts\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RefreshService {\n  private refreshSource = new Subject<void>();\n  refresh$ = this.refreshSource.asObservable();\n\n  triggerRefresh() {\n    this.refreshSource.next();\n  }\n}\n"],"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;;AAG9B,OAAM,MAAOC,cAAc;EAD3BC,YAAA;IAEU,KAAAC,aAAa,GAAG,IAAIH,OAAO,EAAQ;IAC3C,KAAAI,QAAQ,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,EAAE;;EAE5CC,cAAcA,CAAA;IACZ,IAAI,CAACH,aAAa,CAACI,IAAI,EAAE;EAC3B;;;uBANWN,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAO,OAAA,EAAdP,cAAc,CAAAQ,IAAA;MAAAC,UAAA,EADD;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}