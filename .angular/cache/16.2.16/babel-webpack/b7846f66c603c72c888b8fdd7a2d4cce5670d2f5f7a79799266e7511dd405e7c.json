{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport let CalendarComponent = class CalendarComponent {\n  constructor() {\n    this.currentDate = new Date();\n    this.calendar = [];\n    this.tasks = []; // This will be populated with your actual tasks\n    this.currentMonth = this.currentDate.getMonth();\n    this.currentYear = this.currentDate.getFullYear();\n  }\n  ngOnInit() {\n    this.generateCalendar();\n    // Mock tasks - replace this with your actual task data\n    this.tasks = [{\n      id: 1,\n      title: 'Complete Project Dashboard',\n      status: 'in-progress',\n      dueDate: new Date(2024, 3, 15),\n      assignee: 'John Doe'\n    }, {\n      id: 2,\n      title: 'Review Code',\n      status: 'not-started',\n      dueDate: new Date(2024, 3, 20),\n      assignee: 'Jane Smith'\n    }];\n  }\n  generateCalendar() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1);\n    const lastDay = new Date(this.currentYear, this.currentMonth + 1, 0);\n    const weeks = [];\n    let currentWeek = [];\n    const startingDay = firstDay.getDay();\n    // Fill in empty days before the first day of the month\n    for (let i = 0; i < startingDay; i++) {\n      currentWeek.push(null);\n    }\n    // Fill in the days of the month\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      if (currentWeek.length === 7) {\n        weeks.push(currentWeek);\n        currentWeek = [];\n      }\n      currentWeek.push(new Date(this.currentYear, this.currentMonth, day));\n    }\n    // Fill in empty days after the last day of the month\n    while (currentWeek.length < 7) {\n      currentWeek.push(null);\n    }\n    weeks.push(currentWeek);\n    this.calendar = weeks;\n  }\n  getTasksForDate(date) {\n    if (!date) return [];\n    return this.tasks.filter(task => {\n      const taskDate = new Date(task.dueDate);\n      return taskDate.getDate() === date.getDate() && taskDate.getMonth() === date.getMonth() && taskDate.getFullYear() === date.getFullYear();\n    });\n  }\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n  getMonthName() {\n    return new Date(this.currentYear, this.currentMonth).toLocaleString('default', {\n      month: 'long'\n    });\n  }\n};\nCalendarComponent = __decorate([Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})], CalendarComponent);","map":{"version":3,"names":["Component","CommonModule","CalendarComponent","constructor","currentDate","Date","calendar","tasks","currentMonth","getMonth","currentYear","getFullYear","ngOnInit","generateCalendar","id","title","status","dueDate","assignee","firstDay","lastDay","weeks","currentWeek","startingDay","getDay","i","push","day","getDate","length","getTasksForDate","date","filter","task","taskDate","previousMonth","nextMonth","getMonthName","toLocaleString","month","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/calendar/calendar.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ninterface Task {\n  id: number;\n  title: string;\n  status: 'not-started' | 'in-progress' | 'completed';\n  dueDate: Date;\n  assignee: string;\n}\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class CalendarComponent implements OnInit {\n  currentDate = new Date();\n  currentMonth: number;\n  currentYear: number;\n  calendar: (Date | null)[][] = [];\n  tasks: Task[] = []; // This will be populated with your actual tasks\n  \n  constructor() {\n    this.currentMonth = this.currentDate.getMonth();\n    this.currentYear = this.currentDate.getFullYear();\n  }\n\n  ngOnInit() {\n    this.generateCalendar();\n    // Mock tasks - replace this with your actual task data\n    this.tasks = [\n      {\n        id: 1,\n        title: 'Complete Project Dashboard',\n        status: 'in-progress',\n        dueDate: new Date(2024, 3, 15),\n        assignee: 'John Doe'\n      },\n      {\n        id: 2,\n        title: 'Review Code',\n        status: 'not-started',\n        dueDate: new Date(2024, 3, 20),\n        assignee: 'Jane Smith'\n      }\n    ];\n  }\n\n  generateCalendar() {\n    const firstDay = new Date(this.currentYear, this.currentMonth, 1);\n    const lastDay = new Date(this.currentYear, this.currentMonth + 1, 0);\n    const weeks: (Date | null)[][] = [];\n    \n    let currentWeek: (Date | null)[] = [];\n    const startingDay = firstDay.getDay();\n    \n    // Fill in empty days before the first day of the month\n    for (let i = 0; i < startingDay; i++) {\n      currentWeek.push(null);\n    }\n    \n    // Fill in the days of the month\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      if (currentWeek.length === 7) {\n        weeks.push(currentWeek);\n        currentWeek = [];\n      }\n      currentWeek.push(new Date(this.currentYear, this.currentMonth, day));\n    }\n    \n    // Fill in empty days after the last day of the month\n    while (currentWeek.length < 7) {\n      currentWeek.push(null);\n    }\n    weeks.push(currentWeek);\n    \n    this.calendar = weeks;\n  }\n\n  getTasksForDate(date: Date | null): Task[] {\n    if (!date) return [];\n    return this.tasks.filter(task => {\n      const taskDate = new Date(task.dueDate);\n      return taskDate.getDate() === date.getDate() &&\n             taskDate.getMonth() === date.getMonth() &&\n             taskDate.getFullYear() === date.getFullYear();\n    });\n  }\n\n  previousMonth() {\n    if (this.currentMonth === 0) {\n      this.currentMonth = 11;\n      this.currentYear--;\n    } else {\n      this.currentMonth--;\n    }\n    this.generateCalendar();\n  }\n\n  nextMonth() {\n    if (this.currentMonth === 11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    } else {\n      this.currentMonth++;\n    }\n    this.generateCalendar();\n  }\n\n  getMonthName(): string {\n    return new Date(this.currentYear, this.currentMonth).toLocaleString('default', { month: 'long' });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}