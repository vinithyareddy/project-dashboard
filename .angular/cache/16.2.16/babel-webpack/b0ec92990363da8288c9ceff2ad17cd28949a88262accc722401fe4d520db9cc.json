{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nChart.register(...registerables);\nexport let DashboardComponent = class DashboardComponent {\n  constructor(datePipe) {\n    this.datePipe = datePipe;\n    this.tasks = [{\n      id: 1,\n      title: 'Review Design Mockups',\n      status: 'In Progress',\n      dueDate: new Date(2024, 3, 10),\n      assignee: 'Alice'\n    }, {\n      id: 2,\n      title: 'Develop API Endpoint',\n      status: 'Not Started',\n      dueDate: new Date(2024, 3, 18),\n      assignee: 'Bob'\n    }, {\n      id: 3,\n      title: 'Write Unit Tests',\n      status: 'Completed',\n      dueDate: new Date(2024, 3, 22),\n      assignee: 'Charlie'\n    }, {\n      id: 4,\n      title: 'Deploy to Staging',\n      status: 'Not Started',\n      dueDate: new Date(2024, 4, 5),\n      assignee: 'Alice'\n    }, {\n      id: 5,\n      title: 'Client Demo Prep',\n      status: 'In Progress',\n      dueDate: new Date(2024, 4, 12),\n      assignee: 'Bob'\n    }, {\n      id: 6,\n      title: 'Fix Login Bug',\n      status: 'Completed',\n      dueDate: new Date(2024, 3, 5),\n      assignee: 'Charlie'\n    }, {\n      id: 7,\n      title: 'Update Documentation',\n      status: 'In Progress',\n      dueDate: new Date(2024, 4, 20),\n      assignee: 'Alice'\n    }, {\n      id: 8,\n      title: 'Performance Testing',\n      status: 'Not Started',\n      dueDate: new Date(2024, 4, 25),\n      assignee: 'Bob'\n    }];\n    this.projects = [{\n      id: 101,\n      name: 'Website Redesign',\n      description: 'Update company website',\n      status: 'In Progress',\n      dueDate: new Date(2024, 5, 30)\n    }, {\n      id: 102,\n      name: 'Mobile App Launch',\n      description: 'iOS and Android app',\n      status: 'Not Started',\n      dueDate: new Date(2024, 6, 15)\n    }, {\n      id: 103,\n      name: 'Internal HR Portal',\n      description: 'New portal for HR',\n      status: 'Completed',\n      dueDate: new Date(2024, 3, 1)\n    }, {\n      id: 104,\n      name: 'Q3 Marketing Campaign',\n      description: 'Social media campaign',\n      status: 'Not Started',\n      dueDate: new Date(2024, 7, 1)\n    }];\n    this.totalTasks = 0;\n    this.tasksCompleted = 0;\n    this.tasksInProgress = 0;\n    this.tasksNotStarted = 0;\n    this.overdueTasks = 0;\n    this.totalProjects = 0;\n    this.projectsCompleted = 0;\n    this.projectsInProgress = 0;\n    this.projectsNotStarted = 0;\n    this.overallProgress = 0;\n    this.upcomingDeadlines = [];\n    this.donutChartData = [];\n    this.donutChartLabels = ['Completed', 'In Progress', 'Not Started'];\n    this.performanceChartData = [1, 3, 2, 5, 4, 6];\n    this.performanceChartLabels = ['Mar 1', 'Mar 8', 'Mar 15', 'Mar 22', 'Mar 29', 'Apr 5'];\n    this.currentProjectName = 'N/A';\n    this.currentProjectProgress = 0;\n    this.currentProjectDaysRemaining = 0;\n  }\n  ngOnInit() {\n    this.calculateAllSummaries();\n    this.prepareUpcomingDeadlines();\n    this.prepareChartData();\n    this.prepareProjectOverview();\n  }\n  ngAfterViewInit() {\n    this.initializeDonutChart();\n    this.initializePerformanceChart();\n  }\n  calculateAllSummaries() {\n    const now = new Date();\n    this.totalTasks = this.tasks.length;\n    this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n    this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n    this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n    this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && t.dueDate < now).length;\n    this.overallProgress = this.totalTasks > 0 ? Math.round(this.tasksCompleted / this.totalTasks * 100) : 0;\n    this.totalProjects = this.projects.length;\n    this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n    this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n    this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n  }\n  prepareUpcomingDeadlines() {\n    const taskDeadlines = this.tasks.map(t => ({\n      name: t.title,\n      deadline: t.dueDate,\n      type: 'Task'\n    }));\n    const projectDeadlines = this.projects.map(p => ({\n      name: p.name,\n      deadline: p.dueDate,\n      type: 'Project'\n    }));\n    this.upcomingDeadlines = [...taskDeadlines, ...projectDeadlines].filter(d => d.deadline >= new Date()).sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n  }\n  prepareChartData() {\n    this.donutChartData = [this.tasksCompleted, this.tasksInProgress, this.tasksNotStarted];\n    this.performanceChartLabels = ['Mar 1', 'Mar 8', 'Mar 15', 'Mar 22', 'Mar 29', 'Apr 5'];\n    this.performanceChartData = [1, 3, 2, 5, 4, 6];\n  }\n  prepareProjectOverview() {\n    const currentProject = this.projects.find(p => p.status === 'In Progress');\n    if (currentProject) {\n      this.currentProjectName = currentProject.name;\n      this.currentProjectProgress = 65;\n      const timeDiff = currentProject.dueDate.getTime() - new Date().getTime();\n      this.currentProjectDaysRemaining = timeDiff > 0 ? Math.ceil(timeDiff / (1000 * 3600 * 24)) : 0;\n    } else {\n      this.currentProjectName = 'No Active Project';\n      this.currentProjectProgress = 0;\n      this.currentProjectDaysRemaining = 0;\n    }\n  }\n  initializeDonutChart() {\n    if (!this.donutChartRef) return;\n    const canvas = this.donutChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (this.donutChart) {\n      this.donutChart.destroy();\n    }\n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: this.donutChartLabels,\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: ['#4ade80', '#60a5fa', '#a78bfa'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        }\n      }\n    });\n  }\n  initializePerformanceChart() {\n    if (!this.performanceChartRef) return;\n    const canvas = this.performanceChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (this.performanceChart) {\n      this.performanceChart.destroy();\n    }\n    this.performanceChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.performanceChartLabels,\n        datasets: [{\n          label: 'Tasks Completed Weekly',\n          data: this.performanceChartData,\n          fill: false,\n          borderColor: '#60a5fa',\n          pointBackgroundColor: '#60a5fa',\n          pointBorderColor: '#60a5fa',\n          pointRadius: 4,\n          tension: 0.3\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              color: '#a0aec0'\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          x: {\n            ticks: {\n              color: '#a0aec0'\n            },\n            grid: {\n              display: false\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      }\n    });\n  }\n};\n__decorate([ViewChild('donutChart')], DashboardComponent.prototype, \"donutChartRef\", void 0);\n__decorate([ViewChild('performanceChart')], DashboardComponent.prototype, \"performanceChartRef\", void 0);\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [CommonModule, MatProgressBarModule],\n  providers: [DatePipe]\n})], DashboardComponent);","map":{"version":3,"names":["Component","ViewChild","Chart","registerables","CommonModule","DatePipe","MatProgressBarModule","register","DashboardComponent","constructor","datePipe","tasks","id","title","status","dueDate","Date","assignee","projects","name","description","totalTasks","tasksCompleted","tasksInProgress","tasksNotStarted","overdueTasks","totalProjects","projectsCompleted","projectsInProgress","projectsNotStarted","overallProgress","upcomingDeadlines","donutChartData","donutChartLabels","performanceChartData","performanceChartLabels","currentProjectName","currentProjectProgress","currentProjectDaysRemaining","ngOnInit","calculateAllSummaries","prepareUpcomingDeadlines","prepareChartData","prepareProjectOverview","ngAfterViewInit","initializeDonutChart","initializePerformanceChart","now","length","filter","t","Math","round","p","taskDeadlines","map","deadline","type","projectDeadlines","d","sort","a","b","getTime","currentProject","find","timeDiff","ceil","donutChartRef","canvas","nativeElement","ctx","getContext","donutChart","destroy","data","labels","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","tooltip","enabled","performanceChartRef","performanceChart","label","fill","borderColor","pointBackgroundColor","pointBorderColor","pointRadius","tension","scales","y","beginAtZero","ticks","color","grid","x","__decorate","selector","templateUrl","styleUrls","standalone","imports","providers"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nChart.register(...registerables);\n\ninterface Task {\n  id: number;\n  title: string;\n  status: 'Not Started' | 'In Progress' | 'Completed';\n  dueDate: Date;\n  assignee: string;\n}\n\ninterface Project {\n  id: number;\n  name: string;\n  description: string;\n  status: 'Not Started' | 'In Progress' | 'Completed';\n  dueDate: Date;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatProgressBarModule\n  ],\n  providers: [DatePipe]\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n  @ViewChild('donutChart') donutChartRef!: ElementRef;\n  @ViewChild('performanceChart') performanceChartRef!: ElementRef;\n\n  donutChart!: Chart;\n  performanceChart!: Chart;\n\n  tasks: Task[] = [\n    { id: 1, title: 'Review Design Mockups', status: 'In Progress', dueDate: new Date(2024, 3, 10), assignee: 'Alice' },\n    { id: 2, title: 'Develop API Endpoint', status: 'Not Started', dueDate: new Date(2024, 3, 18), assignee: 'Bob' },\n    { id: 3, title: 'Write Unit Tests', status: 'Completed', dueDate: new Date(2024, 3, 22), assignee: 'Charlie' },\n    { id: 4, title: 'Deploy to Staging', status: 'Not Started', dueDate: new Date(2024, 4, 5), assignee: 'Alice' },\n    { id: 5, title: 'Client Demo Prep', status: 'In Progress', dueDate: new Date(2024, 4, 12), assignee: 'Bob' },\n    { id: 6, title: 'Fix Login Bug', status: 'Completed', dueDate: new Date(2024, 3, 5), assignee: 'Charlie' },\n    { id: 7, title: 'Update Documentation', status: 'In Progress', dueDate: new Date(2024, 4, 20), assignee: 'Alice' },\n    { id: 8, title: 'Performance Testing', status: 'Not Started', dueDate: new Date(2024, 4, 25), assignee: 'Bob' },\n  ];\n\n  projects: Project[] = [\n    { id: 101, name: 'Website Redesign', description: 'Update company website', status: 'In Progress', dueDate: new Date(2024, 5, 30) },\n    { id: 102, name: 'Mobile App Launch', description: 'iOS and Android app', status: 'Not Started', dueDate: new Date(2024, 6, 15) },\n    { id: 103, name: 'Internal HR Portal', description: 'New portal for HR', status: 'Completed', dueDate: new Date(2024, 3, 1) },\n    { id: 104, name: 'Q3 Marketing Campaign', description: 'Social media campaign', status: 'Not Started', dueDate: new Date(2024, 7, 1) },\n  ];\n\n  totalTasks: number = 0;\n  tasksCompleted: number = 0;\n  tasksInProgress: number = 0;\n  tasksNotStarted: number = 0;\n  overdueTasks: number = 0;\n\n  totalProjects: number = 0;\n  projectsCompleted: number = 0;\n  projectsInProgress: number = 0;\n  projectsNotStarted: number = 0;\n\n  overallProgress: number = 0;\n\n  upcomingDeadlines: { name: string; deadline: Date; type: 'Task' | 'Project' }[] = [];\n\n  donutChartData: number[] = [];\n  donutChartLabels: string[] = ['Completed', 'In Progress', 'Not Started'];\n\n  performanceChartData: number[] = [1, 3, 2, 5, 4, 6];\n  performanceChartLabels: string[] = ['Mar 1', 'Mar 8', 'Mar 15', 'Mar 22', 'Mar 29', 'Apr 5'];\n\n  currentProjectName: string = 'N/A';\n  currentProjectProgress: number = 0;\n  currentProjectDaysRemaining: number = 0;\n\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit(): void {\n    this.calculateAllSummaries();\n    this.prepareUpcomingDeadlines();\n    this.prepareChartData();\n    this.prepareProjectOverview();\n  }\n\n  ngAfterViewInit() {\n    this.initializeDonutChart();\n    this.initializePerformanceChart();\n  }\n\n  calculateAllSummaries(): void {\n    const now = new Date();\n\n    this.totalTasks = this.tasks.length;\n    this.tasksCompleted = this.tasks.filter(t => t.status === 'Completed').length;\n    this.tasksInProgress = this.tasks.filter(t => t.status === 'In Progress').length;\n    this.tasksNotStarted = this.tasks.filter(t => t.status === 'Not Started').length;\n    this.overdueTasks = this.tasks.filter(t => t.status !== 'Completed' && t.dueDate < now).length;\n    this.overallProgress = this.totalTasks > 0 ? Math.round((this.tasksCompleted / this.totalTasks) * 100) : 0;\n\n    this.totalProjects = this.projects.length;\n    this.projectsCompleted = this.projects.filter(p => p.status === 'Completed').length;\n    this.projectsInProgress = this.projects.filter(p => p.status === 'In Progress').length;\n    this.projectsNotStarted = this.projects.filter(p => p.status === 'Not Started').length;\n  }\n\n  prepareUpcomingDeadlines(): void {\n    const taskDeadlines = this.tasks.map(t => ({ name: t.title, deadline: t.dueDate, type: 'Task' as const }));\n    const projectDeadlines = this.projects.map(p => ({ name: p.name, deadline: p.dueDate, type: 'Project' as const }));\n    this.upcomingDeadlines = [...taskDeadlines, ...projectDeadlines]\n      .filter(d => d.deadline >= new Date())\n      .sort((a, b) => a.deadline.getTime() - b.deadline.getTime());\n  }\n\n  prepareChartData(): void {\n    this.donutChartData = [\n      this.tasksCompleted,\n      this.tasksInProgress,\n      this.tasksNotStarted\n    ];\n    this.performanceChartLabels = ['Mar 1', 'Mar 8', 'Mar 15', 'Mar 22', 'Mar 29', 'Apr 5'];\n    this.performanceChartData = [1, 3, 2, 5, 4, 6];\n  }\n\n  prepareProjectOverview(): void {\n    const currentProject = this.projects.find(p => p.status === 'In Progress');\n    if (currentProject) {\n      this.currentProjectName = currentProject.name;\n      this.currentProjectProgress = 65;\n      const timeDiff = currentProject.dueDate.getTime() - new Date().getTime();\n      this.currentProjectDaysRemaining = timeDiff > 0 ? Math.ceil(timeDiff / (1000 * 3600 * 24)) : 0;\n    } else {\n      this.currentProjectName = 'No Active Project';\n      this.currentProjectProgress = 0;\n      this.currentProjectDaysRemaining = 0;\n    }\n  }\n\n  private initializeDonutChart() {\n    if (!this.donutChartRef) return;\n    const canvas = this.donutChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    if (this.donutChart) {\n      this.donutChart.destroy();\n    }\n\n    this.donutChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: this.donutChartLabels,\n        datasets: [{\n          data: this.donutChartData,\n          backgroundColor: [\n            '#4ade80',\n            '#60a5fa',\n            '#a78bfa'\n          ],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: '75%',\n        plugins: {\n          legend: { display: false },\n          tooltip: { enabled: false }\n        }\n      }\n    });\n  }\n\n  private initializePerformanceChart() {\n    if (!this.performanceChartRef) return;\n    const canvas = this.performanceChartRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    if (this.performanceChart) {\n      this.performanceChart.destroy();\n    }\n\n    this.performanceChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: this.performanceChartLabels,\n        datasets: [{\n          label: 'Tasks Completed Weekly',\n          data: this.performanceChartData,\n          fill: false,\n          borderColor: '#60a5fa',\n          pointBackgroundColor: '#60a5fa',\n          pointBorderColor: '#60a5fa',\n          pointRadius: 4,\n          tension: 0.3\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: { color: '#a0aec0' },\n            grid: { color: 'rgba(255, 255, 255, 0.1)' }\n          },\n          x: {\n            ticks: { color: '#a0aec0' },\n            grid: { display: false }\n          }\n        },\n        plugins: {\n          legend: { display: false }\n        }\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}