{"ast":null,"code":"import { collection, addDoc, updateDoc, deleteDoc, doc, getDocs } from '@angular/fire/firestore';\nimport { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators'; // ✅ ADD THIS\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class FirestoreService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  }\n  // ----- Tasks -----\n  addTask(task) {\n    return from(addDoc(collection(this.firestore, 'tasks'), task));\n  }\n  updateTask(taskId, updates) {\n    return from(updateDoc(doc(this.firestore, `tasks/${taskId}`), updates));\n  }\n  deleteTask(taskId) {\n    return from(deleteDoc(doc(this.firestore, `tasks/${taskId}`)));\n  }\n  getTasks() {\n    return from(getDocs(collection(this.firestore, 'tasks'))).pipe(switchMap(snapshot => {\n      const tasks = snapshot.docs.map(docSnap => ({\n        id: docSnap.id,\n        ...docSnap.data()\n      }));\n      return [tasks];\n    }));\n  }\n  // ----- Projects -----\n  addProject(project) {\n    return from(addDoc(collection(this.firestore, 'projects'), project));\n  }\n  updateProject(projectId, updates) {\n    return from(updateDoc(doc(this.firestore, `projects/${projectId}`), updates));\n  }\n  deleteProject(projectId) {\n    return from(deleteDoc(doc(this.firestore, `projects/${projectId}`)));\n  }\n  getProjects() {\n    return from(getDocs(collection(this.firestore, 'projects'))).pipe(switchMap(snapshot => {\n      const projects = snapshot.docs.map(docSnap => ({\n        id: docSnap.id,\n        ...docSnap.data()\n      }));\n      return [projects];\n    }));\n  }\n  static {\n    this.ɵfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ɵɵinject(i1.Firestore));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","from","switchMap","FirestoreService","constructor","firestore","addTask","task","updateTask","taskId","updates","deleteTask","getTasks","pipe","snapshot","tasks","docs","map","docSnap","id","data","addProject","project","updateProject","projectId","deleteProject","getProjects","projects","i0","ɵɵinject","i1","Firestore","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs\n} from '@angular/fire/firestore';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { from, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators'; // ✅ ADD THIS\n\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore) {}\n\n  // ----- Tasks -----\n  addTask(task: Task): Observable<any> {\n    return from(addDoc(collection(this.firestore, 'tasks'), task));\n  }\n\n  updateTask(taskId: string, updates: Partial<Task>): Observable<any> {\n    return from(updateDoc(doc(this.firestore, `tasks/${taskId}`), updates));\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    return from(deleteDoc(doc(this.firestore, `tasks/${taskId}`)));\n  }\n\n  getTasks(): Observable<Task[]> {\n    return from(getDocs(collection(this.firestore, 'tasks'))).pipe(\n      switchMap(snapshot => {\n        const tasks = snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }) as Task);\n        return [tasks];\n      })\n    );\n  }\n\n  // ----- Projects -----\n  addProject(project: Project): Observable<any> {\n    return from(addDoc(collection(this.firestore, 'projects'), project));\n  }\n\n  updateProject(projectId: string, updates: Partial<Project>): Observable<any> {\n    return from(updateDoc(doc(this.firestore, `projects/${projectId}`), updates));\n  }\n\n  deleteProject(projectId: string): Observable<any> {\n    return from(deleteDoc(doc(this.firestore, `projects/${projectId}`)));\n  }\n\n  getProjects(): Observable<Project[]> {\n    return from(getDocs(collection(this.firestore, 'projects'))).pipe(\n      switchMap(snapshot => {\n        const projects = snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }) as Project);\n        return [projects];\n      })\n    );\n  }\n}\n"],"mappings":"AACA,SAEEA,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,GAAG,EACHC,OAAO,QACF,yBAAyB;AAGhC,SAASC,IAAI,QAAoB,MAAM;AACvC,SAASC,SAAS,QAAQ,gBAAgB,CAAC,CAAC;;;AAI5C,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;EAAc;EAE3C;EACAC,OAAOA,CAACC,IAAU;IAChB,OAAON,IAAI,CAACL,MAAM,CAACD,UAAU,CAAC,IAAI,CAACU,SAAS,EAAE,OAAO,CAAC,EAAEE,IAAI,CAAC,CAAC;EAChE;EAEAC,UAAUA,CAACC,MAAc,EAAEC,OAAsB;IAC/C,OAAOT,IAAI,CAACJ,SAAS,CAACE,GAAG,CAAC,IAAI,CAACM,SAAS,EAAE,SAASI,MAAM,EAAE,CAAC,EAAEC,OAAO,CAAC,CAAC;EACzE;EAEAC,UAAUA,CAACF,MAAc;IACvB,OAAOR,IAAI,CAACH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACM,SAAS,EAAE,SAASI,MAAM,EAAE,CAAC,CAAC,CAAC;EAChE;EAEAG,QAAQA,CAAA;IACN,OAAOX,IAAI,CAACD,OAAO,CAACL,UAAU,CAAC,IAAI,CAACU,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI,CAC5DX,SAAS,CAACY,QAAQ,IAAG;MACnB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;QAC1CC,EAAE,EAAED,OAAO,CAACC,EAAE;QACd,GAAGD,OAAO,CAACE,IAAI;OAChB,CAAS,CAAC;MACX,OAAO,CAACL,KAAK,CAAC;IAChB,CAAC,CAAC,CACH;EACH;EAEA;EACAM,UAAUA,CAACC,OAAgB;IACzB,OAAOrB,IAAI,CAACL,MAAM,CAACD,UAAU,CAAC,IAAI,CAACU,SAAS,EAAE,UAAU,CAAC,EAAEiB,OAAO,CAAC,CAAC;EACtE;EAEAC,aAAaA,CAACC,SAAiB,EAAEd,OAAyB;IACxD,OAAOT,IAAI,CAACJ,SAAS,CAACE,GAAG,CAAC,IAAI,CAACM,SAAS,EAAE,YAAYmB,SAAS,EAAE,CAAC,EAAEd,OAAO,CAAC,CAAC;EAC/E;EAEAe,aAAaA,CAACD,SAAiB;IAC7B,OAAOvB,IAAI,CAACH,SAAS,CAACC,GAAG,CAAC,IAAI,CAACM,SAAS,EAAE,YAAYmB,SAAS,EAAE,CAAC,CAAC,CAAC;EACtE;EAEAE,WAAWA,CAAA;IACT,OAAOzB,IAAI,CAACD,OAAO,CAACL,UAAU,CAAC,IAAI,CAACU,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,CAACQ,IAAI,CAC/DX,SAAS,CAACY,QAAQ,IAAG;MACnB,MAAMa,QAAQ,GAAGb,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;QAC7CC,EAAE,EAAED,OAAO,CAACC,EAAE;QACd,GAAGD,OAAO,CAACE,IAAI;OAChB,CAAY,CAAC;MACd,OAAO,CAACO,QAAQ,CAAC;IACnB,CAAC,CAAC,CACH;EACH;;;uBAnDWxB,gBAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;IAAA;EAAA;;;aAAhB5B,gBAAgB;MAAA6B,OAAA,EAAhB7B,gBAAgB,CAAA8B,IAAA;MAAAC,UAAA,EADH;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}