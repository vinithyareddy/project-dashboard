{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TaskListComponent = class TaskListComponent {\n  constructor(router) {\n    this.router = router;\n    // Task Data\n    this.tasks = [{\n      taskTitle: 'Task 1',\n      assignedTo: 'John',\n      status: 'Not Started',\n      priority: 'High',\n      dueDate: new Date('2025-04-10')\n    }, {\n      taskTitle: 'Task 2',\n      assignedTo: 'Alice',\n      status: 'In Progress',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-12')\n    }, {\n      taskTitle: 'Task 3',\n      assignedTo: 'Bob',\n      status: 'Completed',\n      priority: 'Low',\n      dueDate: new Date('2025-04-15')\n    }\n    // More tasks\n    ];\n    // Filter Options\n    this.taskStatuses = ['Not Started', 'In Progress', 'Completed'];\n    this.priorities = ['High', 'Medium', 'Low'];\n    this.teamMembers = ['John', 'Alice', 'Bob'];\n    this.filterStatus = '';\n    this.filterPriority = '';\n    this.filterAssigned = '';\n    // Task Summary (number of tasks per status)\n    this.taskSummary = {\n      notStarted: 0,\n      inProgress: 0,\n      completed: 0\n    };\n    // Filtered Tasks based on filters\n    this.filteredTasks = this.tasks;\n    // Columns for mat-table\n    this.displayedColumns = ['taskTitle', 'assignedTo', 'status', 'priority', 'dueDate', 'action'];\n  }\n  ngOnInit() {\n    this.updateTaskSummary();\n    this.applyFilters();\n  }\n  // Update task summary counts\n  updateTaskSummary() {\n    this.taskSummary.notStarted = this.tasks.filter(task => task.status === 'Not Started').length;\n    this.taskSummary.inProgress = this.tasks.filter(task => task.status === 'In Progress').length;\n    this.taskSummary.completed = this.tasks.filter(task => task.status === 'Completed').length;\n  }\n  // Apply filters to tasks\n  applyFilters() {\n    this.filteredTasks = this.tasks.filter(task => {\n      return (this.filterStatus ? task.status === this.filterStatus : true) && (this.filterPriority ? task.priority === this.filterPriority : true) && (this.filterAssigned ? task.assignedTo === this.filterAssigned : true);\n    });\n  }\n  // Navigate to Task Detail page\n  goToTaskDetail(task) {\n    this.router.navigate(['/task-detail', task.taskTitle]);\n  }\n  addTask() {\n    // Navigate to a new task creation page or show a modal\n    this.router.navigate(['/task-create']);\n  }\n  // Edit Task (placeholder)\n  editTask(task) {\n    console.log('Editing task: ', task);\n    // Implement your edit logic here\n  }\n  // Delete Task (placeholder)\n  deleteTask(task) {\n    console.log('Deleting task: ', task);\n    // Implement your delete logic here\n  }\n};\n\nTaskListComponent = __decorate([Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})], TaskListComponent);","map":{"version":3,"names":["Component","TaskListComponent","constructor","router","tasks","taskTitle","assignedTo","status","priority","dueDate","Date","taskStatuses","priorities","teamMembers","filterStatus","filterPriority","filterAssigned","taskSummary","notStarted","inProgress","completed","filteredTasks","displayedColumns","ngOnInit","updateTaskSummary","applyFilters","filter","task","length","goToTaskDetail","navigate","addTask","editTask","console","log","deleteTask","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/task-list/task-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Task } from '../models/task.model'; // Import the Task interface\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit {\n\n  // Task Data\n  tasks: Task[] = [\n    { taskTitle: 'Task 1', assignedTo: 'John', status: 'Not Started', priority: 'High', dueDate: new Date('2025-04-10') },\n    { taskTitle: 'Task 2', assignedTo: 'Alice', status: 'In Progress', priority: 'Medium', dueDate: new Date('2025-04-12') },\n    { taskTitle: 'Task 3', assignedTo: 'Bob', status: 'Completed', priority: 'Low', dueDate: new Date('2025-04-15') },\n    // More tasks\n  ];\n\n  // Filter Options\n  taskStatuses = ['Not Started', 'In Progress', 'Completed'];\n  priorities = ['High', 'Medium', 'Low'];\n  teamMembers = ['John', 'Alice', 'Bob'];\n\n  filterStatus = '';\n  filterPriority = '';\n  filterAssigned = '';\n\n  // Task Summary (number of tasks per status)\n  taskSummary = {\n    notStarted: 0,\n    inProgress: 0,\n    completed: 0\n  };\n\n  // Filtered Tasks based on filters\n  filteredTasks = this.tasks;\n\n  // Columns for mat-table\n  displayedColumns: string[] = ['taskTitle', 'assignedTo', 'status', 'priority', 'dueDate', 'action'];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.updateTaskSummary();\n    this.applyFilters();\n  }\n\n  // Update task summary counts\n  updateTaskSummary() {\n    this.taskSummary.notStarted = this.tasks.filter(task => task.status === 'Not Started').length;\n    this.taskSummary.inProgress = this.tasks.filter(task => task.status === 'In Progress').length;\n    this.taskSummary.completed = this.tasks.filter(task => task.status === 'Completed').length;\n  }\n\n  // Apply filters to tasks\n  applyFilters() {\n    this.filteredTasks = this.tasks.filter(task => {\n      return (\n        (this.filterStatus ? task.status === this.filterStatus : true) &&\n        (this.filterPriority ? task.priority === this.filterPriority : true) &&\n        (this.filterAssigned ? task.assignedTo === this.filterAssigned : true)\n      );\n    });\n  }\n\n  // Navigate to Task Detail page\n  goToTaskDetail(task: Task) { // Specify type for task\n    this.router.navigate(['/task-detail', task.taskTitle]);\n  }\n\n  addTask() {\n    // Navigate to a new task creation page or show a modal\n    this.router.navigate(['/task-create']);\n  }\n\n  // Edit Task (placeholder)\n  editTask(task: Task) { // Specify type for task\n    console.log('Editing task: ', task);\n    // Implement your edit logic here\n  }\n\n  // Delete Task (placeholder)\n  deleteTask(task: Task) { // Specify type for task\n    console.log('Deleting task: ', task);\n    // Implement your delete logic here\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}