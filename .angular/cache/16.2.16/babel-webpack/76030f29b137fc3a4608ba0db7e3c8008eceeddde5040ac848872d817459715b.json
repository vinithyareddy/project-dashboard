{"ast":null,"code":"import { collection, addDoc, updateDoc, deleteDoc, doc, getDocs, setDoc } from '@angular/fire/firestore';\nimport { from, of, switchMap, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"./auth.service\";\nexport class FirestoreService {\n  constructor(firestore, authService) {\n    this.firestore = firestore;\n    this.authService = authService;\n  }\n  getUserPath(type) {\n    return this.authService.getUser().pipe(switchMap(user => of(`users/${user?.uid}/${type}`)));\n  }\n  // ----------------- PROJECTS -----------------\n  addProject(project) {\n    return this.getUserPath('projects').pipe(switchMap(path => {\n      const docRef = doc(collection(this.firestore, path));\n      return from(setDoc(docRef, project)).pipe(map(() => ({\n        id: docRef.id\n      })));\n    }));\n  }\n  updateProject(id, updates) {\n    return this.getUserPath('projects').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates))));\n  }\n  deleteProject(id) {\n    return this.getUserPath('projects').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${id}`)))));\n  }\n  getProjects() {\n    return this.getUserPath('projects').pipe(switchMap(path => from(getDocs(collection(this.firestore, path))).pipe(map(snapshot => snapshot.docs.map(docSnap => ({\n      id: docSnap.id,\n      ...docSnap.data(),\n      dueDate: docSnap.data()['dueDate']?.toDate?.() || docSnap.data()['dueDate']\n    }))))));\n  }\n  // ----------------- TASKS -----------------\n  addTask(task) {\n    return this.getUserPath('tasks').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), task))));\n  }\n  updateTask(id, updates) {\n    return this.getUserPath('tasks').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates))));\n  }\n  deleteTask(id) {\n    return this.getUserPath('tasks').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${id}`)))));\n  }\n  getTasks() {\n    return this.getUserPath('tasks').pipe(switchMap(path => from(getDocs(collection(this.firestore, path))).pipe(map(snapshot => snapshot.docs.map(docSnap => ({\n      id: docSnap.id,\n      ...docSnap.data(),\n      dueDate: docSnap.data()['dueDate']?.toDate?.() || docSnap.data()['dueDate']\n    }))))));\n  }\n  // ----------------- TEAMS -----------------\n  addTeamMember(member) {\n    return this.getUserPath('teams').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), member))));\n  }\n  updateTeamMember(id, updates) {\n    return this.getUserPath('teams').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates))));\n  }\n  deleteTeamMember(id) {\n    return this.getUserPath('teams').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${id}`)))));\n  }\n  getTeamMembers() {\n    return this.getUserPath('teams').pipe(switchMap(path => from(getDocs(collection(this.firestore, path))).pipe(map(snapshot => snapshot.docs.map(docSnap => ({\n      id: docSnap.id,\n      ...docSnap.data()\n    }))))));\n  }\n  static {\n    this.ɵfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ɵɵinject(i1.Firestore), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","setDoc","from","of","switchMap","map","FirestoreService","constructor","firestore","authService","getUserPath","type","getUser","pipe","user","uid","addProject","project","path","docRef","id","updateProject","updates","deleteProject","getProjects","snapshot","docs","docSnap","data","dueDate","toDate","addTask","task","updateTask","deleteTask","getTasks","addTeamMember","member","updateTeamMember","deleteTeamMember","getTeamMembers","i0","ɵɵinject","i1","Firestore","i2","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs,\n  CollectionReference,\n  DocumentData,\n  setDoc,\n  collectionData\n} from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { TeamMember } from '../models/team.model';\nimport { from, Observable, of, switchMap, take, map } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore, private authService: AuthService) {}\n\n  private getUserPath(type: 'projects' | 'tasks' | 'teams'): Observable<string> {\n    return this.authService.getUser().pipe(\n      switchMap((user: any) => of(`users/${user?.uid}/${type}`))\n    );\n  }\n\n  // ----------------- PROJECTS -----------------\n\n  addProject(project: Project): Observable<any> {\n    return this.getUserPath('projects').pipe(\n      switchMap((path) => {\n        const docRef = doc(collection(this.firestore, path));\n        return from(setDoc(docRef, project)).pipe(map(() => ({ id: docRef.id })));\n      })\n    );\n  }\n\n  updateProject(id: string, updates: Partial<Project>): Observable<any> {\n    return this.getUserPath('projects').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates)))\n    );\n  }\n\n  deleteProject(id: string): Observable<any> {\n    return this.getUserPath('projects').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${id}`))))\n    );\n  }\n\n  getProjects(): Observable<Project[]> {\n    return this.getUserPath('projects').pipe(\n      switchMap((path) =>\n        from(getDocs(collection(this.firestore, path))).pipe(\n          map(snapshot =>\n            snapshot.docs.map(docSnap => ({\n              id: docSnap.id,\n              ...docSnap.data(),\n              dueDate: (docSnap.data()['dueDate'] as any)?.toDate?.() || docSnap.data()['dueDate']\n            }) as Project)\n          )\n        )\n      )\n    );\n  }\n\n  // ----------------- TASKS -----------------\n\n  addTask(task: Task): Observable<any> {\n    return this.getUserPath('tasks').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), task)))\n    );\n  }\n\n  updateTask(id: string, updates: Partial<Task>): Observable<any> {\n    return this.getUserPath('tasks').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates)))\n    );\n  }\n\n  deleteTask(id: string): Observable<any> {\n    return this.getUserPath('tasks').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${id}`))))\n    );\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.getUserPath('tasks').pipe(\n      switchMap((path) =>\n        from(getDocs(collection(this.firestore, path))).pipe(\n          map(snapshot =>\n            snapshot.docs.map(docSnap => ({\n              id: docSnap.id,\n              ...docSnap.data(),\n              dueDate: (docSnap.data()['dueDate'] as any)?.toDate?.() || docSnap.data()['dueDate']\n            }) as Task)\n          )\n        )\n      )\n    );\n  }\n\n  // ----------------- TEAMS -----------------\n\n  addTeamMember(member: TeamMember): Observable<any> {\n    return this.getUserPath('teams').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), member)))\n    );\n  }\n\n  updateTeamMember(id: string, updates: Partial<TeamMember>): Observable<any> {\n    return this.getUserPath('teams').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${id}`), updates)))\n    );\n  }\n\n  deleteTeamMember(id: string): Observable<any> {\n    return this.getUserPath('teams').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${id}`))))\n    );\n  }\n\n  getTeamMembers(): Observable<TeamMember[]> {\n    return this.getUserPath('teams').pipe(\n      switchMap((path) =>\n        from(getDocs(collection(this.firestore, path))).pipe(\n          map(snapshot =>\n            snapshot.docs.map(docSnap => ({\n              id: docSnap.id,\n              ...docSnap.data()\n            }) as TeamMember)\n          )\n        )\n      )\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}