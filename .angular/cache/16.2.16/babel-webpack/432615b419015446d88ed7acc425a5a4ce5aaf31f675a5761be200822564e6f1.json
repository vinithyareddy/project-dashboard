{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/table\";\nfunction TaskListComponent_mat_header_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Task Title \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_mat_cell_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r10.title, \" \");\n  }\n}\nfunction TaskListComponent_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Assigned To \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r11.assignedTo, \" \");\n  }\n}\nfunction TaskListComponent_mat_header_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_mat_cell_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r12.status, \" \");\n  }\n}\nfunction TaskListComponent_mat_header_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Progress \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_mat_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r13.progress, \"% \");\n  }\n}\nfunction TaskListComponent_mat_header_row_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction TaskListComponent_mat_row_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport class TaskListComponent {\n  constructor() {\n    this.tasks = []; // Declare a variable for the list of tasks\n    this.displayedColumns = ['title', 'assignedTo', 'status', 'progress']; // Define the columns to display in the table\n  }\n\n  ngOnInit() {\n    // Sample data initialization (replace this with API call in real apps)\n    this.tasks = [{\n      id: 1,\n      title: 'Design Landing Page',\n      description: 'Create the landing page',\n      priority: 'High',\n      status: 'In Progress',\n      assignedTo: 'John',\n      startDate: new Date(),\n      dueDate: new Date(),\n      progress: 50\n    }, {\n      id: 2,\n      title: 'Develop API',\n      description: 'Create the backend API',\n      priority: 'Medium',\n      status: 'Not Started',\n      assignedTo: 'Jane',\n      startDate: new Date(),\n      dueDate: new Date(),\n      progress: 0\n    }];\n  }\n  static {\n    this.ɵfac = function TaskListComponent_Factory(t) {\n      return new (t || TaskListComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskListComponent,\n      selectors: [[\"app-task-list\"]],\n      decls: 15,\n      vars: 3,\n      consts: [[3, \"dataSource\"], [\"matColumnDef\", \"title\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"assignedTo\"], [\"matColumnDef\", \"status\"], [\"matColumnDef\", \"progress\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"]],\n      template: function TaskListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-table\", 0);\n          i0.ɵɵelementContainerStart(1, 1);\n          i0.ɵɵtemplate(2, TaskListComponent_mat_header_cell_2_Template, 2, 0, \"mat-header-cell\", 2);\n          i0.ɵɵtemplate(3, TaskListComponent_mat_cell_3_Template, 2, 1, \"mat-cell\", 3);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(4, 4);\n          i0.ɵɵtemplate(5, TaskListComponent_mat_header_cell_5_Template, 2, 0, \"mat-header-cell\", 2);\n          i0.ɵɵtemplate(6, TaskListComponent_mat_cell_6_Template, 2, 1, \"mat-cell\", 3);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(7, 5);\n          i0.ɵɵtemplate(8, TaskListComponent_mat_header_cell_8_Template, 2, 0, \"mat-header-cell\", 2);\n          i0.ɵɵtemplate(9, TaskListComponent_mat_cell_9_Template, 2, 1, \"mat-cell\", 3);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(10, 6);\n          i0.ɵɵtemplate(11, TaskListComponent_mat_header_cell_11_Template, 2, 0, \"mat-header-cell\", 2);\n          i0.ɵɵtemplate(12, TaskListComponent_mat_cell_12_Template, 2, 1, \"mat-cell\", 3);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(13, TaskListComponent_mat_header_row_13_Template, 1, 0, \"mat-header-row\", 7);\n          i0.ɵɵtemplate(14, TaskListComponent_mat_row_14_Template, 1, 0, \"mat-row\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"dataSource\", ctx.tasks);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        }\n      },\n      dependencies: [i1.MatTable, i1.MatHeaderCellDef, i1.MatHeaderRowDef, i1.MatColumnDef, i1.MatCellDef, i1.MatRowDef, i1.MatHeaderCell, i1.MatCell, i1.MatHeaderRow, i1.MatRow],\n      styles: [\"mat-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin: 20px 0;\\n}\\n\\nmat-header-row[_ngcontent-%COMP%] {\\n  background-color: #1976d2;\\n  color: white;\\n}\\n\\nmat-cell[_ngcontent-%COMP%] {\\n  padding: 16px;\\n  font-size: 14px;\\n}\\n\\nmat-header-cell[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL215JTIwZ2l0aHViJTIwcHJvamVjdHMvcHJvamVjdC1kYXNoYm9hcmQvc3JjL2FwcC90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLGVBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyMHB4IDA7XG59XG5cbm1hdC1oZWFkZXItcm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5NzZkMjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5tYXQtY2VsbCB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCJtYXQtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyMHB4IDA7XG59XG5cbm1hdC1oZWFkZXItcm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5NzZkMjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5tYXQtY2VsbCB7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","task_r10","title","task_r11","assignedTo","task_r12","status","task_r13","progress","ɵɵelement","TaskListComponent","constructor","tasks","displayedColumns","ngOnInit","id","description","priority","startDate","Date","dueDate","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtemplate","TaskListComponent_mat_header_cell_2_Template","TaskListComponent_mat_cell_3_Template","ɵɵelementContainerEnd","TaskListComponent_mat_header_cell_5_Template","TaskListComponent_mat_cell_6_Template","TaskListComponent_mat_header_cell_8_Template","TaskListComponent_mat_cell_9_Template","TaskListComponent_mat_header_cell_11_Template","TaskListComponent_mat_cell_12_Template","TaskListComponent_mat_header_row_13_Template","TaskListComponent_mat_row_14_Template","ɵɵproperty"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/task-list/task-list.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/task-list/task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from '../models/task.model';  // Import Task model\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit {\n  tasks: Task[] = [];  // Declare a variable for the list of tasks\n\n  ngOnInit(): void {\n    // Sample data initialization (replace this with API call in real apps)\n    this.tasks = [\n      { id: 1, title: 'Design Landing Page', description: 'Create the landing page', priority: 'High', status: 'In Progress', assignedTo: 'John', startDate: new Date(), dueDate: new Date(), progress: 50 },\n      { id: 2, title: 'Develop API', description: 'Create the backend API', priority: 'Medium', status: 'Not Started', assignedTo: 'Jane', startDate: new Date(), dueDate: new Date(), progress: 0 }\n    ];\n  }\n\n  displayedColumns: string[] = ['title', 'assignedTo', 'status', 'progress'];  // Define the columns to display in the table\n}\n","<mat-table [dataSource]=\"tasks\">\n  <ng-container matColumnDef=\"title\">\n    <mat-header-cell *matHeaderCellDef> Task Title </mat-header-cell>\n    <mat-cell *matCellDef=\"let task\"> {{task.title}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"assignedTo\">\n    <mat-header-cell *matHeaderCellDef> Assigned To </mat-header-cell>\n    <mat-cell *matCellDef=\"let task\"> {{task.assignedTo}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n    <mat-cell *matCellDef=\"let task\"> {{task.status}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"progress\">\n    <mat-header-cell *matHeaderCellDef> Progress </mat-header-cell>\n    <mat-cell *matCellDef=\"let task\"> {{task.progress}}% </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}