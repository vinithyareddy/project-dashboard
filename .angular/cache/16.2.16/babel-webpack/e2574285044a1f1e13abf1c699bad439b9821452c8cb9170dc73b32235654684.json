{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, reauthenticateWithCredential, EmailAuthProvider, updatePassword } from '@angular/fire/auth';\nimport { getAuth } from 'firebase/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport class AuthService {\n  constructor(auth, ngZone) {\n    this.auth = auth;\n    this.ngZone = ngZone;\n    this.userSubject = new BehaviorSubject(null);\n    this.INACTIVITY_LIMIT = 15 * 60 * 1000; // 15 minutes\n    onAuthStateChanged(this.auth, user => {\n      this.userSubject.next(user);\n      if (user) {\n        this.resetInactivityTimer();\n      } else {\n        this.clearInactivityTimer();\n      }\n    });\n    this.startInactivityWatch();\n  }\n  getUser() {\n    return this.userSubject.asObservable();\n  }\n  getCurrentUser() {\n    return this.auth.currentUser;\n  }\n  login(email, password) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n  register(email, password, name, phone) {\n    var _this = this;\n    return createUserWithEmailAndPassword(this.auth, email, password).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* ({\n        user\n      }) {\n        yield updateProfile(user, {\n          displayName: name,\n          photoURL: phone // Temporarily using photoURL for phone\n        });\n\n        _this.userSubject.next(user);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  registerWithProfile({\n    name,\n    phone,\n    email,\n    password\n  }) {\n    return this.register(email, password, name, phone);\n  }\n  updateUserPassword(currentPassword, newPassword) {\n    const user = this.auth.currentUser;\n    if (!user || !user.email) {\n      return Promise.reject('No user is currently logged in');\n    }\n    const credential = EmailAuthProvider.credential(user.email, currentPassword);\n    return reauthenticateWithCredential(user, credential).then(() => {\n      return updatePassword(user, newPassword);\n    });\n  }\n  // ✅ Updated to use Firebase SDK directly to avoid mismatch with AngularFire types\n  sendPasswordResetEmail(email) {\n    return firebaseResetPassword(getAuth(), email);\n  }\n  logout() {\n    this.clearInactivityTimer();\n    return signOut(this.auth);\n  }\n  startInactivityWatch() {\n    ['mousemove', 'keydown', 'click'].forEach(event => {\n      window.addEventListener(event, () => this.resetInactivityTimer());\n    });\n  }\n  resetInactivityTimer() {\n    this.clearInactivityTimer();\n    this.inactivityTimer = setTimeout(() => {\n      this.ngZone.run(() => {\n        this.logout();\n        alert('You were logged out due to inactivity.');\n      });\n    }, this.INACTIVITY_LIMIT);\n  }\n  clearInactivityTimer() {\n    if (this.inactivityTimer) {\n      clearTimeout(this.inactivityTimer);\n      this.inactivityTimer = null;\n    }\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","reauthenticateWithCredential","EmailAuthProvider","updatePassword","getAuth","BehaviorSubject","AuthService","constructor","auth","ngZone","userSubject","INACTIVITY_LIMIT","user","next","resetInactivityTimer","clearInactivityTimer","startInactivityWatch","getUser","asObservable","getCurrentUser","currentUser","login","email","password","register","name","phone","_this","then","_ref","_asyncToGenerator","displayName","photoURL","_x","apply","arguments","registerWithProfile","updateUserPassword","currentPassword","newPassword","Promise","reject","credential","sendPasswordResetEmail","firebaseResetPassword","logout","forEach","event","window","addEventListener","inactivityTimer","setTimeout","run","alert","clearTimeout","i0","ɵɵinject","i1","Auth","NgZone","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport {\n  Auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  User,\n  updateProfile,\n  reauthenticateWithCredential,\n  EmailAuthProvider,\n  updatePassword,\n} from '@angular/fire/auth';\nimport { sendPasswordResetEmail } from 'firebase/auth';\nimport { inject } from '@angular/core';\nimport { FirebaseApp } from '@angular/fire/app';\nimport { getAuth } from 'firebase/auth';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private userSubject = new BehaviorSubject<User | null>(null);\n  private inactivityTimer: any;\n  private readonly INACTIVITY_LIMIT = 15 * 60 * 1000; // 15 minutes\n\n  constructor(private auth: Auth, private ngZone: NgZone) {\n    onAuthStateChanged(this.auth, user => {\n      this.userSubject.next(user);\n      if (user) {\n        this.resetInactivityTimer();\n      } else {\n        this.clearInactivityTimer();\n      }\n    });\n\n    this.startInactivityWatch();\n  }\n\n  getUser(): Observable<User | null> {\n    return this.userSubject.asObservable();\n  }\n\n  getCurrentUser(): User | null {\n    return this.auth.currentUser;\n  }\n\n  login(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n  register(email: string, password: string, name: string, phone: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password).then(async ({ user }) => {\n      await updateProfile(user, {\n        displayName: name,\n        photoURL: phone // Temporarily using photoURL for phone\n      });\n      this.userSubject.next(user);\n    });\n  }\n\n  registerWithProfile({ name, phone, email, password }: { name: string; phone: string; email: string; password: string }) {\n    return this.register(email, password, name, phone);\n  }\n\n  updateUserPassword(currentPassword: string, newPassword: string): Promise<void> {\n    const user = this.auth.currentUser;\n    if (!user || !user.email) {\n      return Promise.reject('No user is currently logged in');\n    }\n\n    const credential = EmailAuthProvider.credential(user.email, currentPassword);\n    return reauthenticateWithCredential(user, credential).then(() => {\n      return updatePassword(user, newPassword);\n    });\n  }\n\n  // ✅ Updated to use Firebase SDK directly to avoid mismatch with AngularFire types\n  sendPasswordResetEmail(email: string): Promise<void> {\n    return firebaseResetPassword(getAuth(), email);\n  }\n\n  logout() {\n    this.clearInactivityTimer();\n    return signOut(this.auth);\n  }\n\n  private startInactivityWatch() {\n    ['mousemove', 'keydown', 'click'].forEach(event => {\n      window.addEventListener(event, () => this.resetInactivityTimer());\n    });\n  }\n\n  private resetInactivityTimer() {\n    this.clearInactivityTimer();\n    this.inactivityTimer = setTimeout(() => {\n      this.ngZone.run(() => {\n        this.logout();\n        alert('You were logged out due to inactivity.');\n      });\n    }, this.INACTIVITY_LIMIT);\n  }\n\n  private clearInactivityTimer() {\n    if (this.inactivityTimer) {\n      clearTimeout(this.inactivityTimer);\n      this.inactivityTimer = null;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}