{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ProjectDataService {\n  constructor() {\n    // Sample Data\n    this.tasks = [{\n      taskTitle: 'Task 1',\n      assignedTo: 'John',\n      status: 'Not Started',\n      priority: 'High',\n      dueDate: new Date('2025-04-10')\n    }, {\n      taskTitle: 'Task 2',\n      assignedTo: 'Alice',\n      status: 'In Progress',\n      priority: 'Low',\n      dueDate: new Date('2025-04-12')\n    }, {\n      taskTitle: 'Task 3',\n      assignedTo: 'Bob',\n      status: 'Completed',\n      priority: 'High',\n      dueDate: new Date('2025-04-15')\n    }, {\n      taskTitle: 'Task 4',\n      assignedTo: 'Jones',\n      status: 'Completed',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-11')\n    }, {\n      taskTitle: 'Task 5',\n      assignedTo: 'James',\n      status: 'In Progress',\n      priority: 'Low',\n      dueDate: new Date('2025-04-18')\n    }, {\n      taskTitle: 'Task 6',\n      assignedTo: 'Bobby',\n      status: 'Not Started',\n      priority: 'Low',\n      dueDate: new Date('2025-04-21')\n    }, {\n      taskTitle: 'Task 7',\n      assignedTo: 'Betty',\n      status: 'In Progress',\n      priority: 'High',\n      dueDate: new Date('2025-04-30')\n    }, {\n      taskTitle: 'Task 8',\n      assignedTo: 'Vernoica',\n      status: 'Completed',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-29')\n    }, {\n      taskTitle: 'Task 9',\n      assignedTo: 'Charles',\n      status: 'In Progress',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-23')\n    }, {\n      taskTitle: 'Task 10',\n      assignedTo: 'Cheryl',\n      status: 'Not Started',\n      priority: 'High',\n      dueDate: new Date('2025-04-06')\n    }, {\n      taskTitle: 'Task 11',\n      assignedTo: 'Archie',\n      status: 'In Progress',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-17')\n    }, {\n      taskTitle: 'Task 12',\n      assignedTo: 'Abhigail',\n      status: 'Not Started',\n      priority: 'Low',\n      dueDate: new Date('2025-04-25')\n    }];\n    this.teamMembers = [{\n      id: 1,\n      name: 'John',\n      role: 'Full Stack Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 2,\n      name: 'Alice',\n      role: 'Manager',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }, {\n      id: 3,\n      name: 'Bob',\n      role: 'Back-End Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 4,\n      name: 'Jones',\n      role: 'Team-Manager',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }, {\n      id: 5,\n      name: 'James',\n      role: 'Front-End Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 6,\n      name: 'Bobby',\n      role: 'Software Developer',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }, {\n      id: 7,\n      name: 'Betty',\n      role: 'Front-End Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 8,\n      name: 'Vernoica',\n      role: 'Full Stack Developer',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }, {\n      id: 9,\n      name: 'Charles',\n      role: 'Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 10,\n      name: 'Cheryl',\n      role: 'Team-Manager',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }, {\n      id: 11,\n      name: 'Archie',\n      role: 'Developer',\n      tasks: [this.tasks[0]],\n      progress: 80\n    }, {\n      id: 12,\n      name: 'Abhigail',\n      role: 'Software Engineer',\n      tasks: [this.tasks[1]],\n      progress: 50\n    }\n    // ... Add all team members\n    ];\n  }\n  // Getter methods to get data\n  getTasks() {\n    return of(this.tasks);\n  }\n  getTeamMembers() {\n    return of(this.teamMembers);\n  }\n  getTaskSummary() {\n    const summary = {\n      notStarted: this.tasks.filter(task => task.status === 'Not Started').length,\n      inProgress: this.tasks.filter(task => task.status === 'In Progress').length,\n      completed: this.tasks.filter(task => task.status === 'Completed').length\n    };\n    return of(summary);\n  }\n  static {\n    this.ɵfac = function ProjectDataService_Factory(t) {\n      return new (t || ProjectDataService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProjectDataService,\n      factory: ProjectDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["of","ProjectDataService","constructor","tasks","taskTitle","assignedTo","status","priority","dueDate","Date","teamMembers","id","name","role","progress","getTasks","getTeamMembers","getTaskSummary","summary","notStarted","filter","task","length","inProgress","completed","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/data/project-data.service.ts"],"sourcesContent":["// src/app/data/project-data.service.ts\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Task } from '../models/task.model';\nimport { TeamMember } from '../models/team-member.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectDataService {\n  \n  // Sample Data\n  private tasks: Task[] = [\n    { taskTitle: 'Task 1', assignedTo: 'John', status: 'Not Started', priority: 'High', dueDate: new Date('2025-04-10') },\n    { taskTitle: 'Task 2', assignedTo: 'Alice', status: 'In Progress', priority: 'Low', dueDate: new Date('2025-04-12') },\n    { taskTitle: 'Task 3', assignedTo: 'Bob', status: 'Completed', priority: 'High', dueDate: new Date('2025-04-15') },\n    { taskTitle: 'Task 4', assignedTo: 'Jones', status: 'Completed', priority: 'Medium', dueDate: new Date('2025-04-11') },\n    { taskTitle: 'Task 5', assignedTo: 'James', status: 'In Progress', priority: 'Low', dueDate: new Date('2025-04-18') },\n    { taskTitle: 'Task 6', assignedTo: 'Bobby', status: 'Not Started', priority: 'Low', dueDate: new Date('2025-04-21') },\n    { taskTitle: 'Task 7', assignedTo: 'Betty', status: 'In Progress', priority: 'High', dueDate: new Date('2025-04-30') },\n    { taskTitle: 'Task 8', assignedTo: 'Vernoica', status: 'Completed', priority: 'Medium', dueDate: new Date('2025-04-29') },\n    { taskTitle: 'Task 9', assignedTo: 'Charles', status: 'In Progress', priority: 'Medium', dueDate: new Date('2025-04-23') },\n    { taskTitle: 'Task 10', assignedTo: 'Cheryl', status: 'Not Started', priority: 'High', dueDate: new Date('2025-04-06') },\n    { taskTitle: 'Task 11', assignedTo: 'Archie', status: 'In Progress', priority: 'Medium', dueDate: new Date('2025-04-17') },\n    { taskTitle: 'Task 12', assignedTo: 'Abhigail', status: 'Not Started', priority: 'Low', dueDate: new Date('2025-04-25') },\n  ];\n\n  private teamMembers: TeamMember[] = [\n    { id: 1, name: 'John', role: 'Full Stack Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 2, name: 'Alice', role: 'Manager', tasks: [this.tasks[1]], progress: 50 },\n    { id: 3, name: 'Bob', role: 'Back-End Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 4, name: 'Jones', role: 'Team-Manager', tasks: [this.tasks[1]], progress: 50 },\n    { id: 5, name: 'James', role: 'Front-End Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 6, name: 'Bobby', role: 'Software Developer', tasks: [this.tasks[1]], progress: 50 },\n    { id: 7, name: 'Betty', role: 'Front-End Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 8, name: 'Vernoica', role: 'Full Stack Developer', tasks: [this.tasks[1]], progress: 50 },\n    { id: 9, name: 'Charles', role: 'Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 10, name: 'Cheryl', role: 'Team-Manager', tasks: [this.tasks[1]], progress: 50 },\n    { id: 11, name: 'Archie', role: 'Developer', tasks: [this.tasks[0]], progress: 80 },\n    { id: 12, name: 'Abhigail', role: 'Software Engineer', tasks: [this.tasks[1]], progress: 50 },\n    // ... Add all team members\n  ];\n\n  // Getter methods to get data\n  getTasks(): Observable<Task[]> {\n    return of(this.tasks);\n  }\n\n  getTeamMembers(): Observable<TeamMember[]> {\n    return of(this.teamMembers);\n  }\n\n  getTaskSummary(): Observable<{ notStarted: number, inProgress: number, completed: number }> {\n    const summary = {\n      notStarted: this.tasks.filter(task => task.status === 'Not Started').length,\n      inProgress: this.tasks.filter(task => task.status === 'In Progress').length,\n      completed: this.tasks.filter(task => task.status === 'Completed').length\n    };\n    return of(summary);\n  }\n  \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}