{"ast":null,"code":"import { Gantt } from 'dhtmlx-gantt';\nimport * as i0 from \"@angular/core\";\nexport class GanttChartComponent {\n  constructor() {}\n  ngOnInit() {\n    this.initializeGanttChart();\n  }\n  initializeGanttChart() {\n    // Sample data for tasks and dependencies\n    const tasks = {\n      data: [{\n        id: 1,\n        text: 'Task 1',\n        start_date: '2025-03-01',\n        duration: 5,\n        progress: 0.4,\n        status: 'In Progress'\n      }, {\n        id: 2,\n        text: 'Task 2',\n        start_date: '2025-03-06',\n        duration: 6,\n        progress: 0.2,\n        status: 'Not Started'\n      }, {\n        id: 3,\n        text: 'Task 3',\n        start_date: '2025-03-10',\n        duration: 3,\n        progress: 1,\n        status: 'Completed'\n      }\n      // Add more tasks as needed\n      ],\n\n      links: [{\n        id: 1,\n        source: 1,\n        target: 2,\n        type: '0'\n      }, {\n        id: 2,\n        source: 2,\n        target: 3,\n        type: '0'\n      } // Link between task 2 and task 3\n      // Add more dependencies as needed\n      ]\n    };\n    // Initialize Gantt chart\n    Gantt.init('gantt_here');\n    Gantt.parse(tasks);\n    // Apply custom styles for task progress and status\n    Gantt.templates.task_class = (start, end, task) => {\n      if (task.status === 'Completed') {\n        return 'completed-task';\n      } else if (task.status === 'In Progress') {\n        return 'in-progress-task';\n      } else {\n        return 'not-started-task';\n      }\n    };\n  }\n  static {\n    this.ɵfac = function GanttChartComponent_Factory(t) {\n      return new (t || GanttChartComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GanttChartComponent,\n      selectors: [[\"app-gantt-chart\"]],\n      decls: 2,\n      vars: 0,\n      template: function GanttChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"gantt-chart works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Gantt","GanttChartComponent","constructor","ngOnInit","initializeGanttChart","tasks","data","id","text","start_date","duration","progress","status","links","source","target","type","init","parse","templates","task_class","start","end","task","selectors","decls","vars","template","GanttChartComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/gantt-chart/gantt-chart.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/gantt-chart/gantt-chart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Gantt } from 'dhtmlx-gantt';\n\n@Component({\n  selector: 'app-gantt-chart',\n  templateUrl: './gantt-chart.component.html',\n  styleUrls: ['./gantt-chart.component.scss']\n})\nexport class GanttChartComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.initializeGanttChart();\n  }\n\n  initializeGanttChart(): void {\n    // Sample data for tasks and dependencies\n    const tasks = {\n      data: [\n        { id: 1, text: 'Task 1', start_date: '2025-03-01', duration: 5, progress: 0.4, status: 'In Progress' },\n        { id: 2, text: 'Task 2', start_date: '2025-03-06', duration: 6, progress: 0.2, status: 'Not Started' },\n        { id: 3, text: 'Task 3', start_date: '2025-03-10', duration: 3, progress: 1, status: 'Completed' },\n        // Add more tasks as needed\n      ],\n      links: [\n        { id: 1, source: 1, target: 2, type: '0' }, // Link between task 1 and task 2\n        { id: 2, source: 2, target: 3, type: '0' }, // Link between task 2 and task 3\n        // Add more dependencies as needed\n      ]\n    };\n\n    // Initialize Gantt chart\n    Gantt.init('gantt_here');\n    Gantt.parse(tasks);\n\n    // Apply custom styles for task progress and status\n    Gantt.templates.task_class = (start, end, task) => {\n      if (task.status === 'Completed') {\n        return 'completed-task';\n      } else if (task.status === 'In Progress') {\n        return 'in-progress-task';\n      } else {\n        return 'not-started-task';\n      }\n    };\n  }\n}\n","<p>gantt-chart works!</p>\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,cAAc;;AAOpC,OAAM,MAAOC,mBAAmB;EAE9BC,YAAA,GAAe;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoBA,CAAA;IAClB;IACA,MAAMC,KAAK,GAAG;MACZC,IAAI,EAAE,CACJ;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,UAAU,EAAE,YAAY;QAAEC,QAAQ,EAAE,CAAC;QAAEC,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAa,CAAE,EACtG;QAAEL,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,UAAU,EAAE,YAAY;QAAEC,QAAQ,EAAE,CAAC;QAAEC,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAa,CAAE,EACtG;QAAEL,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEC,UAAU,EAAE,YAAY;QAAEC,QAAQ,EAAE,CAAC;QAAEC,QAAQ,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAW;MAChG;MAAA,CACD;;MACDC,KAAK,EAAE,CACL;QAAEN,EAAE,EAAE,CAAC;QAAEO,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAG,CAAE,EAC1C;QAAET,EAAE,EAAE,CAAC;QAAEO,MAAM,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAG,CAAE,CAAE;MAC5C;MAAA;KAEH;IAED;IACAhB,KAAK,CAACiB,IAAI,CAAC,YAAY,CAAC;IACxBjB,KAAK,CAACkB,KAAK,CAACb,KAAK,CAAC;IAElB;IACAL,KAAK,CAACmB,SAAS,CAACC,UAAU,GAAG,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,KAAI;MAChD,IAAIA,IAAI,CAACX,MAAM,KAAK,WAAW,EAAE;QAC/B,OAAO,gBAAgB;OACxB,MAAM,IAAIW,IAAI,CAACX,MAAM,KAAK,aAAa,EAAE;QACxC,OAAO,kBAAkB;OAC1B,MAAM;QACL,OAAO,kBAAkB;;IAE7B,CAAC;EACH;;;uBAtCWX,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRhCE,EAAA,CAAAC,cAAA,QAAG;UAAAD,EAAA,CAAAE,MAAA,yBAAkB;UAAAF,EAAA,CAAAG,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}