{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskDataService {\n  constructor() {\n    this.tasks = [{\n      taskTitle: 'Task 1',\n      assignedTo: 'John',\n      status: 'Not Started',\n      priority: 'High',\n      dueDate: new Date('2025-04-10')\n    }, {\n      taskTitle: 'Task 2',\n      assignedTo: 'Alice',\n      status: 'In Progress',\n      priority: 'Medium',\n      dueDate: new Date('2025-04-12')\n    }, {\n      taskTitle: 'Task 3',\n      assignedTo: 'Bob',\n      status: 'Completed',\n      priority: 'Low',\n      dueDate: new Date('2025-04-15')\n    }\n    // More tasks as necessary\n    ];\n\n    this.teamMembers = [{\n      name: 'John',\n      email: 'john@example.com',\n      role: 'Developer',\n      location: 'New York',\n      timings: '9 AM - 6 PM'\n    }, {\n      name: 'Alice',\n      email: 'alice@example.com',\n      role: 'Manager',\n      location: 'San Francisco',\n      timings: '8 AM - 5 PM'\n    }, {\n      name: 'Bob',\n      email: 'bob@example.com',\n      role: 'Tester',\n      location: 'Chicago',\n      timings: '10 AM - 7 PM'\n    }\n    // More team members\n    ];\n  }\n\n  getTasks() {\n    return [...this.tasks];\n  }\n  getTeamMembers() {\n    return [...this.teamMembers];\n  }\n  // Methods to add, edit, delete tasks\n  addTask(newTask) {\n    this.tasks.push(newTask);\n  }\n  editTask(updatedTask) {\n    const index = this.tasks.findIndex(task => task.taskTitle === updatedTask.taskTitle);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n    }\n  }\n  deleteTask(taskTitle) {\n    const index = this.tasks.findIndex(task => task.taskTitle === taskTitle);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n    }\n  }\n  static {\n    this.ɵfac = function TaskDataService_Factory(t) {\n      return new (t || TaskDataService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskDataService,\n      factory: TaskDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskDataService","constructor","tasks","taskTitle","assignedTo","status","priority","dueDate","Date","teamMembers","name","email","role","location","timings","getTasks","getTeamMembers","addTask","newTask","push","editTask","updatedTask","index","findIndex","task","deleteTask","splice","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/data/task-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Task } from '../models/task.model'; // Import Task interface\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskDataService {\n  private tasks: Task[] = [\n    { taskTitle: 'Task 1', assignedTo: 'John', status: 'Not Started', priority: 'High', dueDate: new Date('2025-04-10') },\n    { taskTitle: 'Task 2', assignedTo: 'Alice', status: 'In Progress', priority: 'Medium', dueDate: new Date('2025-04-12') },\n    { taskTitle: 'Task 3', assignedTo: 'Bob', status: 'Completed', priority: 'Low', dueDate: new Date('2025-04-15') },\n    // More tasks as necessary\n  ];\n\n  private teamMembers = [\n    { name: 'John', email: 'john@example.com', role: 'Developer', location: 'New York', timings: '9 AM - 6 PM' },\n    { name: 'Alice', email: 'alice@example.com', role: 'Manager', location: 'San Francisco', timings: '8 AM - 5 PM' },\n    { name: 'Bob', email: 'bob@example.com', role: 'Tester', location: 'Chicago', timings: '10 AM - 7 PM' },\n    // More team members\n  ];\n\n  getTasks() {\n    return [...this.tasks];\n  }\n\n  getTeamMembers() {\n    return [...this.teamMembers];\n  }\n\n  // Methods to add, edit, delete tasks\n  addTask(newTask: Task) {\n    this.tasks.push(newTask);\n  }\n\n  editTask(updatedTask: Task) {\n    const index = this.tasks.findIndex(task => task.taskTitle === updatedTask.taskTitle);\n    if (index !== -1) {\n      this.tasks[index] = updatedTask;\n    }\n  }\n\n  deleteTask(taskTitle: string) {\n    const index = this.tasks.findIndex(task => task.taskTitle === taskTitle);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n    }\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,eAAe;EAH5BC,YAAA;IAIU,KAAAC,KAAK,GAAW,CACtB;MAAEC,SAAS,EAAE,QAAQ;MAAEC,UAAU,EAAE,MAAM;MAAEC,MAAM,EAAE,aAAa;MAAEC,QAAQ,EAAE,MAAM;MAAEC,OAAO,EAAE,IAAIC,IAAI,CAAC,YAAY;IAAC,CAAE,EACrH;MAAEL,SAAS,EAAE,QAAQ;MAAEC,UAAU,EAAE,OAAO;MAAEC,MAAM,EAAE,aAAa;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,OAAO,EAAE,IAAIC,IAAI,CAAC,YAAY;IAAC,CAAE,EACxH;MAAEL,SAAS,EAAE,QAAQ;MAAEC,UAAU,EAAE,KAAK;MAAEC,MAAM,EAAE,WAAW;MAAEC,QAAQ,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAIC,IAAI,CAAC,YAAY;IAAC;IAC/G;IAAA,CACD;;IAEO,KAAAC,WAAW,GAAG,CACpB;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAa,CAAE,EAC5G;MAAEJ,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,IAAI,EAAE,SAAS;MAAEC,QAAQ,EAAE,eAAe;MAAEC,OAAO,EAAE;IAAa,CAAE,EACjH;MAAEJ,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAc;IACrG;IAAA,CACD;;;EAEDC,QAAQA,CAAA;IACN,OAAO,CAAC,GAAG,IAAI,CAACb,KAAK,CAAC;EACxB;EAEAc,cAAcA,CAAA;IACZ,OAAO,CAAC,GAAG,IAAI,CAACP,WAAW,CAAC;EAC9B;EAEA;EACAQ,OAAOA,CAACC,OAAa;IACnB,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAACD,OAAO,CAAC;EAC1B;EAEAE,QAAQA,CAACC,WAAiB;IACxB,MAAMC,KAAK,GAAG,IAAI,CAACpB,KAAK,CAACqB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACrB,SAAS,KAAKkB,WAAW,CAAClB,SAAS,CAAC;IACpF,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACpB,KAAK,CAACoB,KAAK,CAAC,GAAGD,WAAW;;EAEnC;EAEAI,UAAUA,CAACtB,SAAiB;IAC1B,MAAMmB,KAAK,GAAG,IAAI,CAACpB,KAAK,CAACqB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACrB,SAAS,KAAKA,SAAS,CAAC;IACxE,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACpB,KAAK,CAACwB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;;EAE/B;;;uBAxCWtB,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}