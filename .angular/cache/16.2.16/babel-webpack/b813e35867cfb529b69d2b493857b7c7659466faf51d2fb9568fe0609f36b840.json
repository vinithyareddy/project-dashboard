{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, addDoc, updateDoc, deleteDoc, doc, getDocs } from '@angular/fire/firestore';\nimport { from, of, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"./auth.service\";\nexport class FirestoreService {\n  constructor(firestore, authService) {\n    this.firestore = firestore;\n    this.authService = authService;\n  }\n  getUserCollectionPath(collectionName = 'tasks') {\n    return this.authService.getUser().pipe(switchMap(user => {\n      if (user && user.uid) {\n        return of(`users/${user.uid}/${collectionName}`);\n      }\n      return of('');\n    }));\n  }\n  // ðŸ”¹ Task Methods\n  addTask(task) {\n    return this.getUserCollectionPath('tasks').pipe(switchMap(path => from(addDoc(collection(this.firestore, path), task))));\n  }\n  updateTask(taskId, updates) {\n    return this.getUserCollectionPath('tasks').pipe(switchMap(path => from(updateDoc(doc(this.firestore, `${path}/${taskId}`), updates))));\n  }\n  deleteTask(taskId) {\n    return this.getUserCollectionPath('tasks').pipe(switchMap(path => from(deleteDoc(doc(this.firestore, `${path}/${taskId}`)))));\n  }\n  getTasks() {\n    var _this = this;\n    return this.getUserCollectionPath('tasks').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (path) {\n        const ref = collection(_this.firestore, path);\n        const snapshot = yield getDocs(ref);\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  }\n  // ðŸ”¹ Project Methods\n  // Add this to firestore.service.ts\n  addProject(project) {\n    return this.getUserCollectionPath('projects').pipe(switchMap(path => {\n      const ref = collection(this.firestore, path);\n      return from(addDoc(ref, project));\n    }));\n  }\n  updateProject(projectId, updates) {\n    return this.getUserCollectionPath('projects').pipe(switchMap(path => {\n      const ref = doc(this.firestore, `${path}/${projectId}`);\n      return from(updateDoc(ref, updates));\n    }));\n  }\n  deleteProject(projectId) {\n    return this.getUserCollectionPath('projects').pipe(switchMap(path => {\n      const ref = doc(this.firestore, `${path}/${projectId}`);\n      return from(deleteDoc(ref));\n    }));\n  }\n  getProjects() {\n    var _this2 = this;\n    return this.getUserCollectionPath('projects').pipe(switchMap( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (path) {\n        const ref = collection(_this2.firestore, path);\n        const snapshot = yield getDocs(ref);\n        return snapshot.docs.map(docSnap => ({\n          id: docSnap.id,\n          ...docSnap.data()\n        }));\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()));\n  }\n  static {\n    this.Éµfac = function FirestoreService_Factory(t) {\n      return new (t || FirestoreService)(i0.ÉµÉµinject(i1.Firestore), i0.ÉµÉµinject(i2.AuthService));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: FirestoreService,\n      factory: FirestoreService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDocs","from","of","switchMap","FirestoreService","constructor","firestore","authService","getUserCollectionPath","collectionName","getUser","pipe","user","uid","addTask","task","path","updateTask","taskId","updates","deleteTask","getTasks","_this","_ref","_asyncToGenerator","ref","snapshot","docs","map","docSnap","id","data","_x","apply","arguments","addProject","project","updateProject","projectId","deleteProject","getProjects","_this2","_ref2","_x2","i0","ÉµÉµinject","i1","Firestore","i2","AuthService","factory","Éµfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/project-dashboard/src/app/services/firestore.service.ts"],"sourcesContent":["// firestore.service.ts (updated with project logic)\nimport { Injectable } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDocs\n} from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\nimport { Task } from '../models/task.model';\nimport { Project } from '../models/project.model';\nimport { from, Observable, of, switchMap } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreService {\n  constructor(private firestore: Firestore, private authService: AuthService) {}\n\n  private getUserCollectionPath(collectionName: string = 'tasks'): Observable<string> {\n    return this.authService.getUser().pipe(\n      switchMap((user: any) => {\n        if (user && user.uid) {\n          return of(`users/${user.uid}/${collectionName}`);\n        }\n        return of('');\n      })\n    );\n  }\n  \n\n  // ðŸ”¹ Task Methods\n  addTask(task: Task): Observable<any> {\n    return this.getUserCollectionPath('tasks').pipe(\n      switchMap((path) => from(addDoc(collection(this.firestore, path), task)))\n    );\n  }\n\n  updateTask(taskId: string, updates: Partial<Task>): Observable<any> {\n    return this.getUserCollectionPath('tasks').pipe(\n      switchMap((path) => from(updateDoc(doc(this.firestore, `${path}/${taskId}`), updates)))\n    );\n  }\n\n  deleteTask(taskId: string): Observable<any> {\n    return this.getUserCollectionPath('tasks').pipe(\n      switchMap((path) => from(deleteDoc(doc(this.firestore, `${path}/${taskId}`))))\n    );\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.getUserCollectionPath('tasks').pipe(\n      switchMap(async (path) => {\n        const ref = collection(this.firestore, path);\n        const snapshot = await getDocs(ref);\n        return snapshot.docs.map(docSnap => ({ id: docSnap.id, ...docSnap.data() } as Task));\n      })\n    );\n  }\n\n  // ðŸ”¹ Project Methods\n\n  // Add this to firestore.service.ts\naddProject(project: Project): Observable<any> {\n  return this.getUserCollectionPath('projects').pipe(\n    switchMap((path) => {\n      const ref = collection(this.firestore, path);\n      return from(addDoc(ref, project));\n    })\n  );\n}\n\nupdateProject(projectId: string, updates: Partial<Project>): Observable<any> {\n  return this.getUserCollectionPath('projects').pipe(\n    switchMap((path) => {\n      const ref = doc(this.firestore, `${path}/${projectId}`);\n      return from(updateDoc(ref, updates));\n    })\n  );\n}\n\ndeleteProject(projectId: string): Observable<any> {\n  return this.getUserCollectionPath('projects').pipe(\n    switchMap((path) => {\n      const ref = doc(this.firestore, `${path}/${projectId}`);\n      return from(deleteDoc(ref));\n    })\n  );\n}\n\ngetProjects(): Observable<Project[]> {\n  return this.getUserCollectionPath('projects').pipe(\n    switchMap(async (path) => {\n      const ref = collection(this.firestore, path);\n      const snapshot = await getDocs(ref);\n      return snapshot.docs.map((docSnap) => ({ id: docSnap.id, ...docSnap.data() } as Project));\n    })\n  );\n}\n\n// And update the getUserCollectionPath to accept collectionName\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}